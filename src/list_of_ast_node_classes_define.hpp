//#ifndef src_list_of_ast_node_classes_define_hpp
//#define src_list_of_ast_node_classes_define_hpp

// src/list_of_ast_node_classes_define.hpp

#define LIST_OF_AST_NODE_CLASSES(X) \
	X(NodeBase) \
	X(NodeList) \
	X(NodePackage) \
	X(NodeScopePackage) \
	X(NodeModule) \
	X(NodeScopeModule) \
	X(NodeInputSubPortList) \
	X(NodeOutputSubPortList) \
	X(NodeBidirSubPortList) \
	X(NodeSubParamList) \
	X(NodeIdentBracket) \
	X(NodeIdentScope) \
	X(NodeIdentMemberAccess) \
	X(NodeIdentExpr) \
	X(NodeNumExpr) \
	X(NodeSizedNumExpr) \
	X(NodeBracketPair) \
	X(NodeHasString) \
	X(NodeIdent) \
	X(NodeConstString) \
	X(NodeEnum) \
	X(NodeScopeEnum) \
	X(NodeClass) \
	X(NodeScopeClass) \
	X(NodeTypename) \
	X(NodePosParamArgInstList) \
	X(NodeNamedParamArgInstList) \
	X(NodeOneParamArgInst) \
	X(NodeExprBase) \
	X(NodeExprBinopBase) \
	X(NodeExprUnopBase) \
	X(NodeExprBinopLogAnd) \
	X(NodeExprBinopLogOr) \
	X(NodeExprBinopCmpEq) \
	X(NodeExprBinopCmpNe) \
	X(NodeExprBinopCmpLt) \
	X(NodeExprBinopCmpGt) \
	X(NodeExprBinopCmpLe) \
	X(NodeExprBinopCmpGe) \
	X(NodeExprBinopPlus) \
	X(NodeExprBinopMinus) \
	X(NodeExprBinopMul) \
	X(NodeExprBinopDiv) \
	X(NodeExprBinopMod) \
	X(NodeExprBinopBitAnd) \
	X(NodeExprBinopBitOr) \
	X(NodeExprBinopBitXor) \
	X(NodeExprBinopBitLsl) \
	X(NodeExprBinopBitLsr) \
	X(NodeExprBinopBitAsr) \
	X(NodeExprUnopLogNot) \
	X(NodeExprUnopBitNot) \
	X(NodeExprUnopPlus) \
	X(NodeExprUnopMinus) \
	X(NodeExprUnopDollarUnsgn) \
	X(NodeExprUnopDollarSgn) \
	X(NodeExprUnopDollarIsUnsgn) \
	X(NodeExprUnopDollarIsSgn) \
	X(NodeExprUnopDollarRange) \
	X(NodeExprUnopDollarSize) \
	X(NodeExprUnopDollarMsbpos) \
	X(NodeExprUnopDollarFirst) \
	X(NodeExprUnopDollarLast) \
	X(NodeExprUnopDollarHigh) \
	X(NodeExprUnopDollarLow) \
	X(NodeExprUnopDollarClog2) \
	X(NodeExprBinopDollarPow) \
	X(NodeExprUnopTypeof) \
	X(NodeExprCat) \
	X(NodeListCat) \
	X(NodeExprFuncCall) \

//#endif		// src_list_of_ast_node_classes_define_hpp
