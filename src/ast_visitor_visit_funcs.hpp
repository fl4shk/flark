// src/ast_visitor_visit_funcs.hpp

virtual void visitPackage(NodePackage* node) = 0;
virtual void visitScopePackage(NodeScopePackage* node) = 0;
virtual void visitModule(NodeModule* node) = 0;
virtual void visitScopeModule(NodeScopeModule* node) = 0;
virtual void visitInputSubPortArgList(NodeInputSubPortArgList* node) = 0;
virtual void visitOutputSubPortArgList(NodeOutputSubPortArgList* node) = 0;
virtual void visitBidirSubPortArgList(NodeBidirSubPortArgList* node) = 0;
virtual void visitSubParamArgList(NodeSubParamArgList* node) = 0;
virtual void visitSubParamModule(NodeSubParamModule* node) = 0;
virtual void visitSubParamModuleList(NodeSubParamModuleList* node) = 0;
virtual void visitParamArgList(NodeParamArgList* node) = 0;
virtual void visitLeftRightBase(NodeLeftRightBase* node) = 0;
virtual void visitIdentBracket(NodeIdentBracket* node) = 0;
virtual void visitIdentScope(NodeIdentScope* node) = 0;
virtual void visitCall(NodeCall* node) = 0;
virtual void visitIdentEtc(NodeIdentEtc* node) = 0;
virtual void visitNumExpr(NodeNumExpr* node) = 0;
virtual void visitSizedNumExpr(NodeSizedNumExpr* node) = 0;
virtual void visitBracketPair(NodeBracketPair* node) = 0;
virtual void visitHasString(NodeHasString* node) = 0;
virtual void visitIdent(NodeIdent* node) = 0;
virtual void visitConstString(NodeConstString* node) = 0;
virtual void visitScopeUnnamed(NodeScopeUnnamed* node) = 0;
virtual void visitEnum(NodeEnum* node) = 0;
virtual void visitScopeEnum(NodeScopeEnum* node) = 0;
virtual void visitClass(NodeClass* node) = 0;
virtual void visitScopeClass(NodeScopeClass* node) = 0;
virtual void visitExtends(NodeExtends* node) = 0;
virtual void visitUnion(NodeUnion* node) = 0;
virtual void visitScopeUnion(NodeScopeUnion* node) = 0;
virtual void visitTypename(NodeTypename* node) = 0;
virtual void visitType(NodeType* node) = 0;
virtual void visitAuto(NodeAuto* node) = 0;
virtual void visitVoid(NodeVoid* node) = 0;
virtual void visitUwire(NodeUwire* node) = 0;
virtual void visitSwire(NodeSwire* node) = 0;
virtual void visitUbit(NodeUbit* node) = 0;
virtual void visitSbit(NodeSbit* node) = 0;
virtual void visitUbyte(NodeUbyte* node) = 0;
virtual void visitSbyte(NodeSbyte* node) = 0;
virtual void visitUshortint(NodeUshortint* node) = 0;
virtual void visitSshortint(NodeSshortint* node) = 0;
virtual void visitUint(NodeUint* node) = 0;
virtual void visitSint(NodeSint* node) = 0;
virtual void visitUlongint(NodeUlongint* node) = 0;
virtual void visitSlongint(NodeSlongint* node) = 0;
virtual void visitSelf(NodeSelf* node) = 0;
virtual void visitPosParamArgInstList(NodePosParamArgInstList* node) = 0;
virtual void visitNamedParamArgInstList(NodeNamedParamArgInstList* node) = 0;
virtual void visitOneParamArgInst(NodeOneParamArgInst* node) = 0;
virtual void visitExprBase(NodeExprBase* node) = 0;
virtual void visitExprBinopBase(NodeExprBinopBase* node) = 0;
virtual void visitExprUnopBase(NodeExprUnopBase* node) = 0;
virtual void visitExprBinopLogAnd(NodeExprBinopLogAnd* node) = 0;
virtual void visitExprBinopLogOr(NodeExprBinopLogOr* node) = 0;
virtual void visitExprBinopCmpEq(NodeExprBinopCmpEq* node) = 0;
virtual void visitExprBinopCmpNe(NodeExprBinopCmpNe* node) = 0;
virtual void visitExprBinopCmpLt(NodeExprBinopCmpLt* node) = 0;
virtual void visitExprBinopCmpGt(NodeExprBinopCmpGt* node) = 0;
virtual void visitExprBinopCmpLe(NodeExprBinopCmpLe* node) = 0;
virtual void visitExprBinopCmpGe(NodeExprBinopCmpGe* node) = 0;
virtual void visitExprBinopPlus(NodeExprBinopPlus* node) = 0;
virtual void visitExprBinopMinus(NodeExprBinopMinus* node) = 0;
virtual void visitExprBinopMul(NodeExprBinopMul* node) = 0;
virtual void visitExprBinopDiv(NodeExprBinopDiv* node) = 0;
virtual void visitExprBinopMod(NodeExprBinopMod* node) = 0;
virtual void visitExprBinopBitAnd(NodeExprBinopBitAnd* node) = 0;
virtual void visitExprBinopBitOr(NodeExprBinopBitOr* node) = 0;
virtual void visitExprBinopBitXor(NodeExprBinopBitXor* node) = 0;
virtual void visitExprBinopBitLsl(NodeExprBinopBitLsl* node) = 0;
virtual void visitExprBinopBitLsr(NodeExprBinopBitLsr* node) = 0;
virtual void visitExprBinopBitAsr(NodeExprBinopBitAsr* node) = 0;
virtual void visitExprUnopLogNot(NodeExprUnopLogNot* node) = 0;
virtual void visitExprUnopBitNot(NodeExprUnopBitNot* node) = 0;
virtual void visitExprUnopPlus(NodeExprUnopPlus* node) = 0;
virtual void visitExprUnopMinus(NodeExprUnopMinus* node) = 0;
virtual void visitExprUnopDollarUnsgn(NodeExprUnopDollarUnsgn* node) = 0;
virtual void visitExprUnopDollarSgn(NodeExprUnopDollarSgn* node) = 0;
virtual void visitExprUnopDollarIsUnsgn(NodeExprUnopDollarIsUnsgn* node) = 0;
virtual void visitExprUnopDollarIsSgn(NodeExprUnopDollarIsSgn* node) = 0;
virtual void visitExprUnopDollarRange(NodeExprUnopDollarRange* node) = 0;
virtual void visitExprUnopDollarSize(NodeExprUnopDollarSize* node) = 0;
virtual void visitExprUnopDollarMsbpos(NodeExprUnopDollarMsbpos* node) = 0;
virtual void visitExprUnopDollarFirst(NodeExprUnopDollarFirst* node) = 0;
virtual void visitExprUnopDollarLast(NodeExprUnopDollarLast* node) = 0;
virtual void visitExprUnopDollarHigh(NodeExprUnopDollarHigh* node) = 0;
virtual void visitExprUnopDollarLow(NodeExprUnopDollarLow* node) = 0;
virtual void visitExprUnopDollarClog2(NodeExprUnopDollarClog2* node) = 0;
virtual void visitExprBinopDollarPow(NodeExprBinopDollarPow* node) = 0;
virtual void visitPseudoExprDollarBase(NodePseudoExprDollarBase* node) = 0;
virtual void visitPseudoExprDollarPast(NodePseudoExprDollarPast* node) = 0;
virtual void visitPseudoExprDollarStable(NodePseudoExprDollarStable* node) = 0;
virtual void visitPseudoExprDollarRose(NodePseudoExprDollarRose* node) = 0;
virtual void visitPseudoExprDollarFell(NodePseudoExprDollarFell* node) = 0;
virtual void visitPseudoExprDollarGlobalClock(NodePseudoExprDollarGlobalClock* node) = 0;
virtual void visitExprUnopTypeof(NodeExprUnopTypeof* node) = 0;
virtual void visitExprCat(NodeExprCat* node) = 0;
virtual void visitListCat(NodeListCat* node) = 0;
virtual void visitExprRepl(NodeExprRepl* node) = 0;
virtual void visitExprRangeAny(NodeExprRangeAny* node) = 0;
virtual void visitRangeOne(NodeRangeOne* node) = 0;
virtual void visitRangeTwo(NodeRangeTwo* node) = 0;
virtual void visitStmtList(NodeStmtList* node) = 0;
virtual void visitStmtAnyFor(NodeStmtAnyFor* node) = 0;
virtual void visitStmtFor(NodeStmtFor* node) = 0;
virtual void visitStmtGenerateFor(NodeStmtGenerateFor* node) = 0;
virtual void visitStmtAnyIf(NodeStmtAnyIf* node) = 0;
virtual void visitStmtAnyElse(NodeStmtAnyElse* node) = 0;
virtual void visitStmtIf(NodeStmtIf* node) = 0;
virtual void visitStmtElse(NodeStmtElse* node) = 0;
virtual void visitStmtGenerateIf(NodeStmtGenerateIf* node) = 0;
virtual void visitStmtGenerateElse(NodeStmtGenerateElse* node) = 0;
virtual void visitStmtAnyWhile(NodeStmtAnyWhile* node) = 0;
virtual void visitStmtGenerateWhile(NodeStmtGenerateWhile* node) = 0;
virtual void visitStmtWhile(NodeStmtWhile* node) = 0;
virtual void visitStmtGenerateDoWhile(NodeStmtGenerateDoWhile* node) = 0;
virtual void visitStmtDoWhile(NodeStmtDoWhile* node) = 0;
virtual void visitStmtGenerateAlone(NodeStmtGenerateAlone* node) = 0;
virtual void visitStmtBehavAssign(NodeStmtBehavAssign* node) = 0;
virtual void visitStmtContAssign(NodeStmtContAssign* node) = 0;
virtual void visitStmtLabMemberAccessPublic(NodeStmtLabMemberAccessPublic* node) = 0;
virtual void visitStmtLabMemberAccessProtected(NodeStmtLabMemberAccessProtected* node) = 0;
virtual void visitStmtLabMemberAccessPrivate(NodeStmtLabMemberAccessPrivate* node) = 0;
virtual void visitStmtSwitch(NodeStmtSwitch* node) = 0;
virtual void visitStmtSwitchz(NodeStmtSwitchz* node) = 0;
virtual void visitStmtCase(NodeStmtCase* node) = 0;
virtual void visitStmtDefault(NodeStmtDefault* node) = 0;
virtual void visitStmtUsing(NodeStmtUsing* node) = 0;
virtual void visitStmtInstModule(NodeStmtInstModule* node) = 0;
virtual void visitStmtReturn(NodeStmtReturn* node) = 0;
virtual void visitStmtInitial(NodeStmtInitial* node) = 0;
virtual void visitStmtAlwaysComb(NodeStmtAlwaysComb* node) = 0;
virtual void visitStmtAlwaysBlk(NodeStmtAlwaysBlk* node) = 0;
virtual void visitStmtAlwaysFf(NodeStmtAlwaysFf* node) = 0;
virtual void visitStmtAssert(NodeStmtAssert* node) = 0;
virtual void visitStmtAssume(NodeStmtAssume* node) = 0;
virtual void visitStmtCover(NodeStmtCover* node) = 0;
virtual void visitStmtRestrict(NodeStmtRestrict* node) = 0;
virtual void visitStmtStaticAssert(NodeStmtStaticAssert* node) = 0;
virtual void visitPosedgeInst(NodePosedgeInst* node) = 0;
virtual void visitNegedgeInst(NodeNegedgeInst* node) = 0;
virtual void visitEdgeList(NodeEdgeList* node) = 0;
virtual void visitDeclCallable(NodeDeclCallable* node) = 0;
virtual void visitDeclFunc(NodeDeclFunc* node) = 0;
virtual void visitDeclProc(NodeDeclProc* node) = 0;
virtual void visitDeclTask(NodeDeclTask* node) = 0;
virtual void visitDeclVar(NodeDeclVar* node) = 0;
virtual void visitDeclConst(NodeDeclConst* node) = 0;
virtual void visitDeclGenvar(NodeDeclGenvar* node) = 0;
virtual void visitDeclVarList(NodeDeclVarList* node) = 0;
