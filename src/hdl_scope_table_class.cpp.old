#include "hdl_scope_table_class.hpp"
#include "general_allocator_class.hpp"

namespace frost_hdl
{
//bool HdlScope::is_module() const
//{
//	return false;
//}
//bool HdlScope::is_package() const
//{
//	return false;
//}
//bool HdlScope::is_custom_type() const
//{
//	return false;
//}
//bool HdlScope::is_function() const
//{
//	return false;
//}
//
//SymbolTable* HdlScope::symbol_table()
//{
//	return nullptr;
//}
//HdlLhsTypeTable* HdlScope::hdl_lhs_type_table()
//{
//	return nullptr;
//}
//HdlFunctionTable* HdlScope::hdl_function_table()
//{
//	return nullptr;
//}
//ParameterVars* HdlScope::parameter_vars()
//{
//	return nullptr;
//}
//HdlStatementTable* HdlScope::statement_table()
//{
//	return nullptr;
//}
//HdlLhsType* HdlScope::hdl_lhs_type()
//{
//	return nullptr;
//}
//HdlFunction* HdlScope::hdl_function()
//{
//	return nullptr;
//}
//
//
//
//// Force the constructors of the private variables to be inlined here.
//HdlDeclModule::HdlDeclModule()
//{
//}
//HdlDeclModule::HdlDeclModule(SymbolTable&& s_symbol_table,
//	HdlLhsTypeTable&& s_hdl_lhs_type_table,
//	HdlFunctionTable&& s_hdl_function_table,
//	ParameterVars&& s_parameter_vars,
//	HdlStatementTable&& s_statement_table)
//	: _symbol_table(std::move(s_symbol_table)),
//	_hdl_lhs_type_table(std::move(s_hdl_lhs_type_table)),
//	_hdl_function_table(std::move(s_hdl_function_table)),
//	_parameter_vars(std::move(s_parameter_vars)),
//	_statement_table(std::move(s_statement_table))
//{
//}
//
//HdlDeclStruct::HdlDeclStruct(HdlLhsType&& s_hdl_lhs_type)
//	: _hdl_lhs_type(save_hdl_lhs_type(std::move(s_hdl_lhs_type)))
//{
//}
//
//HdlDeclClass::HdlDeclClass(HdlLhsType&& s_hdl_lhs_type)
//	: _hdl_lhs_type(save_hdl_lhs_type(std::move(s_hdl_lhs_type)))
//{
//}
//
//HdlDeclEnum::HdlDeclEnum(HdlLhsType&& s_hdl_lhs_type)
//	: _hdl_lhs_type(save_hdl_lhs_type(std::move(s_hdl_lhs_type)))
//{
//}
//
//HdlDeclPackage::HdlDeclPackage()
//{
//}
//HdlDeclPackage::HdlDeclPackage(SymbolTable&& s_symbol_table,
//	HdlLhsTypeTable&& s_hdl_lhs_type_table,
//	HdlFunctionTable&& s_hdl_function_table,
//	ParameterVars&& s_parameter_vars)
//	: _symbol_table(std::move(s_symbol_table)),
//	_hdl_lhs_type_table(std::move(s_hdl_lhs_type_table)),
//	_hdl_function_table(std::move(s_hdl_function_table)),
//	_parameter_vars(std::move(s_parameter_vars))
//{
//}
//
//HdlDeclFunction::HdlDeclFunction(HdlFunction&& s_hdl_function)
//	: _hdl_function(save_hdl_function(std::move(s_hdl_function)))
//{
//}

} // namespace frost_hdl
