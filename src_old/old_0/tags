!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/249c3c0/
ALIGNAS_REGULAR	liborangepower_src/misc_defines.hpp	/^#define ALIGNAS_REGULAR /;"	kind:d
ANY_ACCEPT_IF_BASIC	compiler_class.cpp	/^#define ANY_ACCEPT_IF_BASIC(/;"	kind:d	file:	signature:(arg)
ANY_JUST_ACCEPT_BASIC	compiler_class.cpp	/^#define ANY_JUST_ACCEPT_BASIC(/;"	kind:d	file:	signature:(arg)
ANY_PUSH_TOK_IF	compiler_class.cpp	/^#define ANY_PUSH_TOK_IF(/;"	kind:d	file:	signature:(arg)
ASM_COMMENT	liborangepower_src/misc_defines.hpp	/^#define ASM_COMMENT(/;"	kind:d	signature:(stuff)
AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::printout_etc
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s__arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s__arr,const Vec2<size_t> & s_size_2d)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s__arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s__arr)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : __arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
BPRANGE2MASK	liborangepower_src/misc_defines.hpp	/^#define BPRANGE2MASK(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
BPRANGE2SHIFTED_MASK	liborangepower_src/misc_defines.hpp	/^#define BPRANGE2SHIFTED_MASK(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
BigNum	liborangepower_src/gmp_stuff.hpp	/^typedef mpz_class BigNum;$/;"	kind:t	namespace:liborangepower::bignum	typeref:typename:mpz_class
CompiledType	symbol_class.hpp	/^	enum class CompiledType : bool$/;"	kind:g	class:frost_hdl::Symbol	typeref:typename:bool	access:public
Compiler	compiler_class.cpp	/^Compiler::Compiler(Parser& parser)$/;"	kind:f	class:frost_hdl::Compiler	signature:(Parser & parser)
Compiler	compiler_class.hpp	/^	Compiler(Parser& parser);$/;"	kind:p	class:frost_hdl::Compiler	access:public	signature:(Parser & parser)
Compiler	compiler_class.hpp	/^class Compiler : public CompilerGrammarVisitor$/;"	kind:c	namespace:frost_hdl	inherits:CompilerGrammarVisitor
CompilerErrorListener	compiler_error_listener_class.hpp	/^class CompilerErrorListener : public antlr4::ANTLRErrorListener$/;"	kind:c	namespace:frost_hdl	inherits:antlr4::ANTLRErrorListener
CompilerGrammarBaseVisitor	gen_src/CompilerGrammarBaseVisitor.h	/^class  CompilerGrammarBaseVisitor : public CompilerGrammarVisitor {$/;"	kind:c	inherits:CompilerGrammarVisitor
CompilerGrammarBaseVisitor::visitDeclModule	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclModule(CompilerGrammarParser::DeclModuleContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclModuleContext * ctx)
CompilerGrammarBaseVisitor::visitDeclParameters	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclParameters(CompilerGrammarParser::DeclParametersContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclParametersContext * ctx)
CompilerGrammarBaseVisitor::visitDeclStruct	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclStruct(CompilerGrammarParser::DeclStructContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclStructContext * ctx)
CompilerGrammarBaseVisitor::visitDeclVarList	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclVarList(CompilerGrammarParser::DeclVarListContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclVarListContext * ctx)
CompilerGrammarBaseVisitor::visitExpr	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExpr(CompilerGrammarParser::ExprContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprContext * ctx)
CompilerGrammarBaseVisitor::visitExprAddSub	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprAddSub(CompilerGrammarParser::ExprAddSubContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprAddSubContext * ctx)
CompilerGrammarBaseVisitor::visitExprBitInvert	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprBitInvert(CompilerGrammarParser::ExprBitInvertContext *ctx) ove/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprBitInvertContext * ctx)
CompilerGrammarBaseVisitor::visitExprCompare	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprCompare(CompilerGrammarParser::ExprCompareContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprCompareContext * ctx)
CompilerGrammarBaseVisitor::visitExprLogNot	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogNot(CompilerGrammarParser::ExprLogNotContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogNotContext * ctx)
CompilerGrammarBaseVisitor::visitExprLogical	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogical(CompilerGrammarParser::ExprLogicalContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogicalContext * ctx)
CompilerGrammarBaseVisitor::visitExprMulDivModEtc	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprMulDivModEtc(CompilerGrammarParser::ExprMulDivModEtcContext *ct/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprMulDivModEtcContext * ctx)
CompilerGrammarBaseVisitor::visitExprNegate	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprNegate(CompilerGrammarParser::ExprNegateContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprNegateContext * ctx)
CompilerGrammarBaseVisitor::visitExprUnary	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprUnary(CompilerGrammarParser::ExprUnaryContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprUnaryContext * ctx)
CompilerGrammarBaseVisitor::visitIdentExpr	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentExpr(CompilerGrammarParser::IdentExprContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentExprContext * ctx)
CompilerGrammarBaseVisitor::visitIdentName	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentName(CompilerGrammarParser::IdentNameContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentNameContext * ctx)
CompilerGrammarBaseVisitor::visitIdentSliced	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentSliced(CompilerGrammarParser::IdentSlicedContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentSlicedContext * ctx)
CompilerGrammarBaseVisitor::visitListIdentNames	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitListIdentNames(CompilerGrammarParser::ListIdentNamesContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListIdentNamesContext * ctx)
CompilerGrammarBaseVisitor::visitListModulePorts	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitListModulePorts(CompilerGrammarParser::ListModulePortsContext *ctx)/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListModulePortsContext * ctx)
CompilerGrammarBaseVisitor::visitListPortParams	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitListPortParams(CompilerGrammarParser::ListPortParamsContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListPortParamsContext * ctx)
CompilerGrammarBaseVisitor::visitMultiListModulePorts	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitMultiListModulePorts(CompilerGrammarParser::MultiListModulePortsCon/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::MultiListModulePortsContext * ctx)
CompilerGrammarBaseVisitor::visitNumExpr	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNumExpr(CompilerGrammarParser::NumExprContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::NumExprContext * ctx)
CompilerGrammarBaseVisitor::visitOuterStatement	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitOuterStatement(CompilerGrammarParser::OuterStatementContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::OuterStatementContext * ctx)
CompilerGrammarBaseVisitor::visitPortParam	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitPortParam(CompilerGrammarParser::PortParamContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::PortParamContext * ctx)
CompilerGrammarBaseVisitor::visitProgram	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitProgram(CompilerGrammarParser::ProgramContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ProgramContext * ctx)
CompilerGrammarBaseVisitor::visitScopedOuterStatements	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitScopedOuterStatements(CompilerGrammarParser::ScopedOuterStatementsC/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ScopedOuterStatementsContext * ctx)
CompilerGrammarBaseVisitor::visitSlice	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSlice(CompilerGrammarParser::SliceContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SliceContext * ctx)
CompilerGrammarBaseVisitor::visitSubProgram	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSubProgram(CompilerGrammarParser::SubProgramContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SubProgramContext * ctx)
CompilerGrammarBaseVisitor::visitTypeName	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitTypeName(CompilerGrammarParser::TypeNameContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::TypeNameContext * ctx)
CompilerGrammarLexer	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::CompilerGrammarLexer(CharStream *input) : Lexer(input) {$/;"	kind:f	class:CompilerGrammarLexer	signature:(CharStream * input)
CompilerGrammarLexer	gen_src/CompilerGrammarLexer.h	/^  CompilerGrammarLexer(antlr4::CharStream *input);$/;"	kind:p	class:CompilerGrammarLexer	access:public	signature:(antlr4::CharStream * input)
CompilerGrammarLexer	gen_src/CompilerGrammarLexer.h	/^class  CompilerGrammarLexer : public antlr4::Lexer {$/;"	kind:c	inherits:antlr4::Lexer
CompilerGrammarLexer::CompilerGrammarLexer	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::CompilerGrammarLexer(CharStream *input) : Lexer(input) {$/;"	kind:f	class:CompilerGrammarLexer	signature:(CharStream * input)
CompilerGrammarLexer::CompilerGrammarLexer	gen_src/CompilerGrammarLexer.h	/^  CompilerGrammarLexer(antlr4::CharStream *input);$/;"	kind:p	class:CompilerGrammarLexer	access:public	signature:(antlr4::CharStream * input)
CompilerGrammarLexer::Initializer	gen_src/CompilerGrammarLexer.h	/^  struct Initializer {$/;"	kind:s	class:CompilerGrammarLexer	access:private
CompilerGrammarLexer::Initializer::Initializer	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::Initializer::Initializer() {$/;"	kind:f	class:CompilerGrammarLexer::Initializer	signature:()
CompilerGrammarLexer::Initializer::Initializer	gen_src/CompilerGrammarLexer.h	/^    Initializer();$/;"	kind:p	struct:CompilerGrammarLexer::Initializer	access:public	signature:()
CompilerGrammarLexer::LexLineComment	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::LexWhitespace	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokApostrophe	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokBinNum	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokBitInvert	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokBlockingAssign	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokColon	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokComma	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokDecNum	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokExclamPoint	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokHexNum	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokIdent	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwAlwaysComb	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwAlwaysSeq	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwAssign	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwCase	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwDefault	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwDo	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwDollarConcat	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwDollarReplicate	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwElse	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwEnum	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwFor	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwFunction	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwIf	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwInitial	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwInput	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwInterface	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwLocalparam	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwLogic	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwModule	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwNegedge	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwOutput	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwPackage	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwParameter	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwPosedge	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwPrivate	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwPublic	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwStruct	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwSwitch	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwSwitchx	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwSwitchz	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwTask	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwUnion	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokKwWhile	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokLBrace	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokLBracket	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokLParen	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokMinus	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokNonBlockingAssign	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokNumber	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokOpBitwise	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokOpCompare	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokOpLogical	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokOpMulDivMod	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokOther	gen_src/CompilerGrammarLexer.h	/^    TokOther = 64$/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokPeriod	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokPlus	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokQuote	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokRBrace	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokRBracket	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokRParen	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokScope	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::TokSemicolon	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
CompilerGrammarLexer::__anonea39696d0103	gen_src/CompilerGrammarLexer.h	/^  enum {$/;"	kind:g	class:CompilerGrammarLexer	access:public
CompilerGrammarLexer::_atn	gen_src/CompilerGrammarLexer.cpp	/^atn::ATN CompilerGrammarLexer::_atn;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:atn::ATN
CompilerGrammarLexer::_atn	gen_src/CompilerGrammarLexer.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:antlr4::atn::ATN	access:private
CompilerGrammarLexer::_channelNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_channelNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
CompilerGrammarLexer::_channelNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _channelNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarLexer::_decisionToDFA	gen_src/CompilerGrammarLexer.cpp	/^std::vector<dfa::DFA> CompilerGrammarLexer::_decisionToDFA;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<dfa::DFA>
CompilerGrammarLexer::_decisionToDFA	gen_src/CompilerGrammarLexer.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
CompilerGrammarLexer::_init	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::Initializer CompilerGrammarLexer::_init;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:CompilerGrammarLexer::Initializer
CompilerGrammarLexer::_init	gen_src/CompilerGrammarLexer.h	/^  static Initializer _init;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:Initializer	access:private
CompilerGrammarLexer::_literalNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_literalNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
CompilerGrammarLexer::_literalNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarLexer::_modeNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_modeNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
CompilerGrammarLexer::_modeNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _modeNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarLexer::_ruleNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_ruleNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
CompilerGrammarLexer::_ruleNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarLexer::_serializedATN	gen_src/CompilerGrammarLexer.cpp	/^std::vector<uint16_t> CompilerGrammarLexer::_serializedATN;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<uint16_t>
CompilerGrammarLexer::_serializedATN	gen_src/CompilerGrammarLexer.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<uint16_t>	access:private
CompilerGrammarLexer::_sharedContextCache	gen_src/CompilerGrammarLexer.cpp	/^atn::PredictionContextCache CompilerGrammarLexer::_sharedContextCache;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:atn::PredictionContextCache
CompilerGrammarLexer::_sharedContextCache	gen_src/CompilerGrammarLexer.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:antlr4::atn::PredictionContextCache	access:private
CompilerGrammarLexer::_symbolicNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_symbolicNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
CompilerGrammarLexer::_symbolicNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarLexer::_tokenNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_tokenNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
CompilerGrammarLexer::_tokenNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarLexer::_vocabulary	gen_src/CompilerGrammarLexer.cpp	/^dfa::Vocabulary CompilerGrammarLexer::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
CompilerGrammarLexer::_vocabulary	gen_src/CompilerGrammarLexer.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:antlr4::dfa::Vocabulary	access:private
CompilerGrammarLexer::getATN	gen_src/CompilerGrammarLexer.cpp	/^const atn::ATN& CompilerGrammarLexer::getATN() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const atn::ATN &	signature:() const
CompilerGrammarLexer::getATN	gen_src/CompilerGrammarLexer.h	/^  virtual const antlr4::atn::ATN& getATN() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
CompilerGrammarLexer::getChannelNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getChannelNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
CompilerGrammarLexer::getChannelNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getChannelNames() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
CompilerGrammarLexer::getGrammarFileName	gen_src/CompilerGrammarLexer.cpp	/^std::string CompilerGrammarLexer::getGrammarFileName() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:std::string	signature:() const
CompilerGrammarLexer::getGrammarFileName	gen_src/CompilerGrammarLexer.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:std::string	access:public	signature:() const
CompilerGrammarLexer::getModeNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getModeNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
CompilerGrammarLexer::getModeNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getModeNames() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
CompilerGrammarLexer::getRuleNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getRuleNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
CompilerGrammarLexer::getRuleNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
CompilerGrammarLexer::getSerializedATN	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<uint16_t> CompilerGrammarLexer::getSerializedATN() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<uint16_t>	signature:() const
CompilerGrammarLexer::getSerializedATN	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<uint16_t> getSerializedATN() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<uint16_t>	access:public	signature:() const
CompilerGrammarLexer::getTokenNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getTokenNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
CompilerGrammarLexer::getTokenNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getTokenNames() const override; \/\/ deprecated, use v/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
CompilerGrammarLexer::getVocabulary	gen_src/CompilerGrammarLexer.cpp	/^dfa::Vocabulary& CompilerGrammarLexer::getVocabulary() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:dfa::Vocabulary &	signature:() const
CompilerGrammarLexer::getVocabulary	gen_src/CompilerGrammarLexer.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
CompilerGrammarLexer::~CompilerGrammarLexer	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::~CompilerGrammarLexer() {$/;"	kind:f	class:CompilerGrammarLexer	signature:()
CompilerGrammarLexer::~CompilerGrammarLexer	gen_src/CompilerGrammarLexer.h	/^  ~CompilerGrammarLexer();$/;"	kind:p	class:CompilerGrammarLexer	access:public	signature:()
CompilerGrammarParser	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::CompilerGrammarParser(TokenStream *input) : Parser(input) {$/;"	kind:f	class:CompilerGrammarParser	signature:(TokenStream * input)
CompilerGrammarParser	gen_src/CompilerGrammarParser.h	/^  CompilerGrammarParser(antlr4::TokenStream *input);$/;"	kind:p	class:CompilerGrammarParser	access:public	signature:(antlr4::TokenStream * input)
CompilerGrammarParser	gen_src/CompilerGrammarParser.h	/^class  CompilerGrammarParser : public antlr4::Parser {$/;"	kind:c	inherits:antlr4::Parser
CompilerGrammarParser::CompilerGrammarParser	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::CompilerGrammarParser(TokenStream *input) : Parser(input) {$/;"	kind:f	class:CompilerGrammarParser	signature:(TokenStream * input)
CompilerGrammarParser::CompilerGrammarParser	gen_src/CompilerGrammarParser.h	/^  CompilerGrammarParser(antlr4::TokenStream *input);$/;"	kind:p	class:CompilerGrammarParser	access:public	signature:(antlr4::TokenStream * input)
CompilerGrammarParser::DeclModuleContext	gen_src/CompilerGrammarParser.h	/^  class  DeclModuleContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::DeclModuleContext::DeclModuleContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclModuleContext::DeclModuleContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclModuleContext::DeclModuleContext	gen_src/CompilerGrammarParser.h	/^    DeclModuleContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclModuleContext::TokKwModule	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclModuleContext::TokKwModule() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclModuleContext::TokKwModule	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwModule();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclModuleContext::TokLParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclModuleContext::TokLParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclModuleContext::TokLParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLParen();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclModuleContext::TokRParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclModuleContext::TokRParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclModuleContext::TokRParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRParen();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclModuleContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclModuleContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclModuleContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclModuleContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclModuleContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::DeclModuleContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::DeclModuleContext::identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::DeclModuleContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
CompilerGrammarParser::DeclModuleContext::identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:IdentNameContext *	access:public	signature:()
CompilerGrammarParser::DeclModuleContext::multiListModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::MultiListModulePortsContext* CompilerGrammarParser::DeclModuleContext::mu/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:CompilerGrammarParser::MultiListModulePortsContext *	signature:()
CompilerGrammarParser::DeclModuleContext::multiListModulePorts	gen_src/CompilerGrammarParser.h	/^    MultiListModulePortsContext *multiListModulePorts();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:MultiListModulePortsContext *	access:public	signature:()
CompilerGrammarParser::DeclModuleContext::scopedOuterStatements	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ScopedOuterStatementsContext* CompilerGrammarParser::DeclModuleContext::s/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:CompilerGrammarParser::ScopedOuterStatementsContext *	signature:()
CompilerGrammarParser::DeclModuleContext::scopedOuterStatements	gen_src/CompilerGrammarParser.h	/^    ScopedOuterStatementsContext *scopedOuterStatements();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:ScopedOuterStatementsContext *	access:public	signature:()
CompilerGrammarParser::DeclParametersContext	gen_src/CompilerGrammarParser.h	/^  class  DeclParametersContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::DeclParametersContext::DeclParametersContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclParametersContext::DeclParametersContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclParametersContext::DeclParametersContext	gen_src/CompilerGrammarParser.h	/^    DeclParametersContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclParametersContext::TokLParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclParametersContext::TokLParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclParametersContext::TokLParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLParen();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclParametersContext::TokNumber	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclParametersContext::TokNumber() {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclParametersContext::TokNumber	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokNumber();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclParametersContext::TokRParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclParametersContext::TokRParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclParametersContext::TokRParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRParen();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclParametersContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclParametersContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclParametersContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclParametersContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclParametersContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::DeclParametersContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::DeclParametersContext::listPortParams	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListPortParamsContext* CompilerGrammarParser::DeclParametersContext::list/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:CompilerGrammarParser::ListPortParamsContext *	signature:()
CompilerGrammarParser::DeclParametersContext::listPortParams	gen_src/CompilerGrammarParser.h	/^    ListPortParamsContext *listPortParams();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:ListPortParamsContext *	access:public	signature:()
CompilerGrammarParser::DeclStructContext	gen_src/CompilerGrammarParser.h	/^  class  DeclStructContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::DeclStructContext::DeclStructContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext::DeclStructContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclStructContext::DeclStructContext	gen_src/CompilerGrammarParser.h	/^    DeclStructContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclStructContext::TokKwStruct	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokKwStruct() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclStructContext::TokKwStruct	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwStruct();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclStructContext::TokLBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokLBrace() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclStructContext::TokLBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLBrace();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclStructContext::TokRBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokRBrace() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::DeclStructContext::TokRBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRBrace();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::DeclStructContext::TokSemicolon	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::DeclStructContext::TokSemicolon() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
CompilerGrammarParser::DeclStructContext::TokSemicolon	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokSemicolon(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
CompilerGrammarParser::DeclStructContext::TokSemicolon	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokSemicolon(size_t i);$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
CompilerGrammarParser::DeclStructContext::TokSemicolon	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokSemicolon();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
CompilerGrammarParser::DeclStructContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclStructContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclStructContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclStructContext::declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::DeclStructContext::declVarList/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:(size_t i)
CompilerGrammarParser::DeclStructContext::declVarList	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::DeclVarListContext *> CompilerGrammarParser::DeclStructContex/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<CompilerGrammarParser::DeclVarListContext * >	signature:()
CompilerGrammarParser::DeclStructContext::declVarList	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext* declVarList(size_t i);$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:DeclVarListContext *	access:public	signature:(size_t i)
CompilerGrammarParser::DeclStructContext::declVarList	gen_src/CompilerGrammarParser.h	/^    std::vector<DeclVarListContext *> declVarList();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<DeclVarListContext * >	access:public	signature:()
CompilerGrammarParser::DeclStructContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclStructContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::DeclStructContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::DeclStructContext::identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::DeclStructContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
CompilerGrammarParser::DeclStructContext::identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:IdentNameContext *	access:public	signature:()
CompilerGrammarParser::DeclVarListContext	gen_src/CompilerGrammarParser.h	/^  class  DeclVarListContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::DeclVarListContext::DeclVarListContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext::DeclVarListContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclVarListContext::DeclVarListContext	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::DeclVarListContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclVarListContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclVarListContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::DeclVarListContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclVarListContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::DeclVarListContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::DeclVarListContext::listIdentNames	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListIdentNamesContext* CompilerGrammarParser::DeclVarListContext::listIde/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:CompilerGrammarParser::ListIdentNamesContext *	signature:()
CompilerGrammarParser::DeclVarListContext::listIdentNames	gen_src/CompilerGrammarParser.h	/^    ListIdentNamesContext *listIdentNames();$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:ListIdentNamesContext *	access:public	signature:()
CompilerGrammarParser::DeclVarListContext::typeName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::TypeNameContext* CompilerGrammarParser::DeclVarListContext::typeName() {$/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:CompilerGrammarParser::TypeNameContext *	signature:()
CompilerGrammarParser::DeclVarListContext::typeName	gen_src/CompilerGrammarParser.h	/^    TypeNameContext *typeName();$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:TypeNameContext *	access:public	signature:()
CompilerGrammarParser::ExprAddSubContext	gen_src/CompilerGrammarParser.h	/^  class  ExprAddSubContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprAddSubContext::ExprAddSubContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext::ExprAddSubContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprAddSubContext::ExprAddSubContext	gen_src/CompilerGrammarParser.h	/^    ExprAddSubContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprAddSubContext::TokOpBitwise	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprAddSubContext::TokOpBitwise() {$/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprAddSubContext::TokOpBitwise	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpBitwise();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprAddSubContext::TokOpMulDivMod	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprAddSubContext::TokOpMulDivMod() {$/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprAddSubContext::TokOpMulDivMod	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpMulDivMod();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprAddSubContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprAddSubContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprAddSubContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprAddSubContext::exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::ExprAddSubContext::exprAddSub()/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:()
CompilerGrammarParser::ExprAddSubContext::exprAddSub	gen_src/CompilerGrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
CompilerGrammarParser::ExprAddSubContext::exprMulDivModEtc	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprMulDivModEtcContext* CompilerGrammarParser::ExprAddSubContext::exprMu/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:CompilerGrammarParser::ExprMulDivModEtcContext *	signature:()
CompilerGrammarParser::ExprAddSubContext::exprMulDivModEtc	gen_src/CompilerGrammarParser.h	/^    ExprMulDivModEtcContext *exprMulDivModEtc();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
CompilerGrammarParser::ExprAddSubContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprAddSubContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprAddSubContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprBitInvertContext	gen_src/CompilerGrammarParser.h	/^  class  ExprBitInvertContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprBitInvertContext::ExprBitInvertContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprBitInvertContext::ExprBitInvertContext(ParserRuleContext *parent, siz/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprBitInvertContext::ExprBitInvertContext	gen_src/CompilerGrammarParser.h	/^    ExprBitInvertContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprBitInvertContext::TokBitInvert	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprBitInvertContext::TokBitInvert() {$/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprBitInvertContext::TokBitInvert	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokBitInvert();$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprBitInvertContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprBitInvertContext::accept(tree::ParseTreeVisitor *visito/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprBitInvertContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprBitInvertContext::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprBitInvertContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
CompilerGrammarParser::ExprBitInvertContext::expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:ExprContext *	access:public	signature:()
CompilerGrammarParser::ExprBitInvertContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprBitInvertContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprBitInvertContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprCompareContext	gen_src/CompilerGrammarParser.h	/^  class  ExprCompareContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprCompareContext::ExprCompareContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext::ExprCompareContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprCompareContext::ExprCompareContext	gen_src/CompilerGrammarParser.h	/^    ExprCompareContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprCompareContext::TokMinus	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprCompareContext::TokMinus() {$/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprCompareContext::TokMinus	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokMinus();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprCompareContext::TokPlus	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprCompareContext::TokPlus() {$/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprCompareContext::TokPlus	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokPlus();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprCompareContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprCompareContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprCompareContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprCompareContext::exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::ExprCompareContext::exprAddSub(/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:()
CompilerGrammarParser::ExprCompareContext::exprAddSub	gen_src/CompilerGrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
CompilerGrammarParser::ExprCompareContext::exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::ExprCompareContext::exprCompar/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:()
CompilerGrammarParser::ExprCompareContext::exprCompare	gen_src/CompilerGrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:ExprCompareContext *	access:public	signature:()
CompilerGrammarParser::ExprCompareContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprCompareContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprCompareContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprContext	gen_src/CompilerGrammarParser.h	/^  class  ExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprContext::ExprContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext::ExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:CompilerGrammarParser::ExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprContext::ExprContext	gen_src/CompilerGrammarParser.h	/^    ExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprContext::TokOpLogical	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprContext::TokOpLogical() {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprContext::TokOpLogical	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpLogical();$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprContext::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
CompilerGrammarParser::ExprContext::expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:ExprContext *	access:public	signature:()
CompilerGrammarParser::ExprContext::exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::ExprContext::exprLogical() {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:()
CompilerGrammarParser::ExprContext::exprLogical	gen_src/CompilerGrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
CompilerGrammarParser::ExprContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprLogNotContext	gen_src/CompilerGrammarParser.h	/^  class  ExprLogNotContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprLogNotContext::ExprLogNotContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogNotContext::ExprLogNotContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprLogNotContext::ExprLogNotContext	gen_src/CompilerGrammarParser.h	/^    ExprLogNotContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprLogNotContext::TokExclamPoint	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprLogNotContext::TokExclamPoint() {$/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprLogNotContext::TokExclamPoint	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokExclamPoint();$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprLogNotContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprLogNotContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprLogNotContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprLogNotContext::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprLogNotContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
CompilerGrammarParser::ExprLogNotContext::expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:ExprContext *	access:public	signature:()
CompilerGrammarParser::ExprLogNotContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprLogNotContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprLogNotContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprLogicalContext	gen_src/CompilerGrammarParser.h	/^  class  ExprLogicalContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprLogicalContext::ExprLogicalContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext::ExprLogicalContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprLogicalContext::ExprLogicalContext	gen_src/CompilerGrammarParser.h	/^    ExprLogicalContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprLogicalContext::TokOpCompare	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprLogicalContext::TokOpCompare() {$/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprLogicalContext::TokOpCompare	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpCompare();$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprLogicalContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprLogicalContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprLogicalContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprLogicalContext::exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::ExprLogicalContext::exprCompar/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:()
CompilerGrammarParser::ExprLogicalContext::exprCompare	gen_src/CompilerGrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:ExprCompareContext *	access:public	signature:()
CompilerGrammarParser::ExprLogicalContext::exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::ExprLogicalContext::exprLogica/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:()
CompilerGrammarParser::ExprLogicalContext::exprLogical	gen_src/CompilerGrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
CompilerGrammarParser::ExprLogicalContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprLogicalContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprLogicalContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprMulDivModEtcContext	gen_src/CompilerGrammarParser.h	/^  class  ExprMulDivModEtcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext(ParserRuleContext *paren/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext	gen_src/CompilerGrammarParser.h	/^    ExprMulDivModEtcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprMulDivModEtcContext::TokLParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprMulDivModEtcContext::TokLParen() {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::TokLParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLParen();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::TokRParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprMulDivModEtcContext::TokRParen() {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::TokRParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRParen();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprMulDivModEtcContext::accept(tree::ParseTreeVisitor *vis/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprMulDivModEtcContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprMulDivModEtcContext::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprMulDivModEtcContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprContext *	access:public	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::exprUnary	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprUnaryContext* CompilerGrammarParser::ExprMulDivModEtcContext::exprUna/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::ExprUnaryContext *	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::exprUnary	gen_src/CompilerGrammarParser.h	/^    ExprUnaryContext *exprUnary();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprUnaryContext *	access:public	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprMulDivModEtcContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprMulDivModEtcContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprMulDivModEtcContext::identExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentExprContext* CompilerGrammarParser::ExprMulDivModEtcContext::identEx/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::IdentExprContext *	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::identExpr	gen_src/CompilerGrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:IdentExprContext *	access:public	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::numExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::NumExprContext* CompilerGrammarParser::ExprMulDivModEtcContext::numExpr()/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::NumExprContext *	signature:()
CompilerGrammarParser::ExprMulDivModEtcContext::numExpr	gen_src/CompilerGrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:NumExprContext *	access:public	signature:()
CompilerGrammarParser::ExprNegateContext	gen_src/CompilerGrammarParser.h	/^  class  ExprNegateContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprNegateContext::ExprNegateContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprNegateContext::ExprNegateContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprNegateContext::ExprNegateContext	gen_src/CompilerGrammarParser.h	/^    ExprNegateContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprNegateContext::TokMinus	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprNegateContext::TokMinus() {$/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ExprNegateContext::TokMinus	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokMinus();$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ExprNegateContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprNegateContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprNegateContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprNegateContext::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprNegateContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
CompilerGrammarParser::ExprNegateContext::expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:ExprContext *	access:public	signature:()
CompilerGrammarParser::ExprNegateContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprNegateContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprNegateContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ExprUnaryContext	gen_src/CompilerGrammarParser.h	/^  class  ExprUnaryContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ExprUnaryContext::ExprUnaryContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprUnaryContext::ExprUnaryContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprUnaryContext::ExprUnaryContext	gen_src/CompilerGrammarParser.h	/^    ExprUnaryContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ExprUnaryContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprUnaryContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprUnaryContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ExprUnaryContext::exprBitInvert	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprBitInvertContext* CompilerGrammarParser::ExprUnaryContext::exprBitInv/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:CompilerGrammarParser::ExprBitInvertContext *	signature:()
CompilerGrammarParser::ExprUnaryContext::exprBitInvert	gen_src/CompilerGrammarParser.h	/^    ExprBitInvertContext *exprBitInvert();$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:ExprBitInvertContext *	access:public	signature:()
CompilerGrammarParser::ExprUnaryContext::exprLogNot	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogNotContext* CompilerGrammarParser::ExprUnaryContext::exprLogNot() /;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:CompilerGrammarParser::ExprLogNotContext *	signature:()
CompilerGrammarParser::ExprUnaryContext::exprLogNot	gen_src/CompilerGrammarParser.h	/^    ExprLogNotContext *exprLogNot();$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:ExprLogNotContext *	access:public	signature:()
CompilerGrammarParser::ExprUnaryContext::exprNegate	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprNegateContext* CompilerGrammarParser::ExprUnaryContext::exprNegate() /;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:CompilerGrammarParser::ExprNegateContext *	signature:()
CompilerGrammarParser::ExprUnaryContext::exprNegate	gen_src/CompilerGrammarParser.h	/^    ExprNegateContext *exprNegate();$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:ExprNegateContext *	access:public	signature:()
CompilerGrammarParser::ExprUnaryContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprUnaryContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ExprUnaryContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::IdentExprContext	gen_src/CompilerGrammarParser.h	/^  class  IdentExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::IdentExprContext::IdentExprContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentExprContext::IdentExprContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::IdentExprContext::IdentExprContext	gen_src/CompilerGrammarParser.h	/^    IdentExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::IdentExprContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::IdentExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::IdentExprContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::IdentExprContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::IdentExprContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::IdentExprContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::IdentExprContext::identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::IdentExprContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
CompilerGrammarParser::IdentExprContext::identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:IdentNameContext *	access:public	signature:()
CompilerGrammarParser::IdentExprContext::identSliced	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentSlicedContext* CompilerGrammarParser::IdentExprContext::identSliced(/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:CompilerGrammarParser::IdentSlicedContext *	signature:()
CompilerGrammarParser::IdentExprContext::identSliced	gen_src/CompilerGrammarParser.h	/^    IdentSlicedContext *identSliced();$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:IdentSlicedContext *	access:public	signature:()
CompilerGrammarParser::IdentNameContext	gen_src/CompilerGrammarParser.h	/^  class  IdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::IdentNameContext::IdentNameContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext::IdentNameContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::IdentNameContext::IdentNameContext	gen_src/CompilerGrammarParser.h	/^    IdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::IdentNameContext::TokIdent	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::IdentNameContext::TokIdent() {$/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::IdentNameContext::TokIdent	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::IdentNameContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::IdentNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::IdentNameContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::IdentNameContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::IdentNameContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::IdentNameContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::IdentSlicedContext	gen_src/CompilerGrammarParser.h	/^  class  IdentSlicedContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::IdentSlicedContext::IdentSlicedContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentSlicedContext::IdentSlicedContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::IdentSlicedContext::IdentSlicedContext	gen_src/CompilerGrammarParser.h	/^    IdentSlicedContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::IdentSlicedContext::TokIdent	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::IdentSlicedContext::TokIdent() {$/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::IdentSlicedContext::TokIdent	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::IdentSlicedContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::IdentSlicedContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::IdentSlicedContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::IdentSlicedContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::IdentSlicedContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::IdentSlicedContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::IdentSlicedContext::slice	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext* CompilerGrammarParser::IdentSlicedContext::slice() {$/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:CompilerGrammarParser::SliceContext *	signature:()
CompilerGrammarParser::IdentSlicedContext::slice	gen_src/CompilerGrammarParser.h	/^    SliceContext *slice();$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:SliceContext *	access:public	signature:()
CompilerGrammarParser::Initializer	gen_src/CompilerGrammarParser.h	/^  struct Initializer {$/;"	kind:s	class:CompilerGrammarParser	access:private
CompilerGrammarParser::Initializer::Initializer	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::Initializer::Initializer() {$/;"	kind:f	class:CompilerGrammarParser::Initializer	signature:()
CompilerGrammarParser::Initializer::Initializer	gen_src/CompilerGrammarParser.h	/^    Initializer();$/;"	kind:p	struct:CompilerGrammarParser::Initializer	access:public	signature:()
CompilerGrammarParser::LexLineComment	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::LexWhitespace	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::ListIdentNamesContext	gen_src/CompilerGrammarParser.h	/^  class  ListIdentNamesContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ListIdentNamesContext::ListIdentNamesContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListIdentNamesContext::ListIdentNamesContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ListIdentNamesContext::ListIdentNamesContext	gen_src/CompilerGrammarParser.h	/^    ListIdentNamesContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ListIdentNamesContext::TokComma	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::ListIdentNamesContext::TokComma() {$/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
CompilerGrammarParser::ListIdentNamesContext::TokComma	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListIdentNamesContext::TokComma(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
CompilerGrammarParser::ListIdentNamesContext::TokComma	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokComma(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
CompilerGrammarParser::ListIdentNamesContext::TokComma	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokComma();$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
CompilerGrammarParser::ListIdentNamesContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ListIdentNamesContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ListIdentNamesContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ListIdentNamesContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ListIdentNamesContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ListIdentNamesContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ListIdentNamesContext::identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::ListIdentNamesContext::identName/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:(size_t i)
CompilerGrammarParser::ListIdentNamesContext::identName	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::IdentNameContext *> CompilerGrammarParser::ListIdentNamesCont/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<CompilerGrammarParser::IdentNameContext * >	signature:()
CompilerGrammarParser::ListIdentNamesContext::identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext* identName(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:IdentNameContext *	access:public	signature:(size_t i)
CompilerGrammarParser::ListIdentNamesContext::identName	gen_src/CompilerGrammarParser.h	/^    std::vector<IdentNameContext *> identName();$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<IdentNameContext * >	access:public	signature:()
CompilerGrammarParser::ListModulePortsContext	gen_src/CompilerGrammarParser.h	/^  class  ListModulePortsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ListModulePortsContext::ListModulePortsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListModulePortsContext::ListModulePortsContext(ParserRuleContext *parent,/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ListModulePortsContext::ListModulePortsContext	gen_src/CompilerGrammarParser.h	/^    ListModulePortsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ListModulePortsContext::TokKwInput	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListModulePortsContext::TokKwInput() {$/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ListModulePortsContext::TokKwInput	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwInput();$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ListModulePortsContext::TokKwOutput	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListModulePortsContext::TokKwOutput() {$/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ListModulePortsContext::TokKwOutput	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwOutput();$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ListModulePortsContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ListModulePortsContext::accept(tree::ParseTreeVisitor *visi/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ListModulePortsContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ListModulePortsContext::declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::ListModulePortsContext::declVa/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:()
CompilerGrammarParser::ListModulePortsContext::declVarList	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext *declVarList();$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:DeclVarListContext *	access:public	signature:()
CompilerGrammarParser::ListModulePortsContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ListModulePortsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ListModulePortsContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ListPortParamsContext	gen_src/CompilerGrammarParser.h	/^  class  ListPortParamsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ListPortParamsContext::ListPortParamsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListPortParamsContext::ListPortParamsContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ListPortParamsContext::ListPortParamsContext	gen_src/CompilerGrammarParser.h	/^    ListPortParamsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ListPortParamsContext::TokComma	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::ListPortParamsContext::TokComma() {$/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
CompilerGrammarParser::ListPortParamsContext::TokComma	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListPortParamsContext::TokComma(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
CompilerGrammarParser::ListPortParamsContext::TokComma	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokComma(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
CompilerGrammarParser::ListPortParamsContext::TokComma	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokComma();$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
CompilerGrammarParser::ListPortParamsContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ListPortParamsContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ListPortParamsContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ListPortParamsContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ListPortParamsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ListPortParamsContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ListPortParamsContext::portParam	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::PortParamContext* CompilerGrammarParser::ListPortParamsContext::portParam/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:CompilerGrammarParser::PortParamContext *	signature:(size_t i)
CompilerGrammarParser::ListPortParamsContext::portParam	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::PortParamContext *> CompilerGrammarParser::ListPortParamsCont/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<CompilerGrammarParser::PortParamContext * >	signature:()
CompilerGrammarParser::ListPortParamsContext::portParam	gen_src/CompilerGrammarParser.h	/^    PortParamContext* portParam(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:PortParamContext *	access:public	signature:(size_t i)
CompilerGrammarParser::ListPortParamsContext::portParam	gen_src/CompilerGrammarParser.h	/^    std::vector<PortParamContext *> portParam();$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<PortParamContext * >	access:public	signature:()
CompilerGrammarParser::MultiListModulePortsContext	gen_src/CompilerGrammarParser.h	/^  class  MultiListModulePortsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::MultiListModulePortsContext::MultiListModulePortsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::MultiListModulePortsContext::MultiListModulePortsContext(ParserRuleContex/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::MultiListModulePortsContext::MultiListModulePortsContext	gen_src/CompilerGrammarParser.h	/^    MultiListModulePortsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::MultiListModulePortsContext::TokComma	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::MultiListModulePortsContext::TokComma()/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
CompilerGrammarParser::MultiListModulePortsContext::TokComma	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::MultiListModulePortsContext::TokComma(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
CompilerGrammarParser::MultiListModulePortsContext::TokComma	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokComma(size_t i);$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
CompilerGrammarParser::MultiListModulePortsContext::TokComma	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokComma();$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
CompilerGrammarParser::MultiListModulePortsContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::MultiListModulePortsContext::accept(tree::ParseTreeVisitor /;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::MultiListModulePortsContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::MultiListModulePortsContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::MultiListModulePortsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::MultiListModulePortsContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::MultiListModulePortsContext::listModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListModulePortsContext* CompilerGrammarParser::MultiListModulePortsContex/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:CompilerGrammarParser::ListModulePortsContext *	signature:(size_t i)
CompilerGrammarParser::MultiListModulePortsContext::listModulePorts	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::ListModulePortsContext *> CompilerGrammarParser::MultiListMod/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<CompilerGrammarParser::ListModulePortsContext * >	signature:()
CompilerGrammarParser::MultiListModulePortsContext::listModulePorts	gen_src/CompilerGrammarParser.h	/^    ListModulePortsContext* listModulePorts(size_t i);$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:ListModulePortsContext *	access:public	signature:(size_t i)
CompilerGrammarParser::MultiListModulePortsContext::listModulePorts	gen_src/CompilerGrammarParser.h	/^    std::vector<ListModulePortsContext *> listModulePorts();$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<ListModulePortsContext * >	access:public	signature:()
CompilerGrammarParser::NumExprContext	gen_src/CompilerGrammarParser.h	/^  class  NumExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::NumExprContext::NumExprContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::NumExprContext::NumExprContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:CompilerGrammarParser::NumExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::NumExprContext::NumExprContext	gen_src/CompilerGrammarParser.h	/^    NumExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::NumExprContext::TokBinNum	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::NumExprContext::TokBinNum() {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::NumExprContext::TokBinNum	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokBinNum();$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::NumExprContext::TokDecNum	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::NumExprContext::TokDecNum() {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::NumExprContext::TokDecNum	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokDecNum();$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::NumExprContext::TokHexNum	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::NumExprContext::TokHexNum() {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::NumExprContext::TokHexNum	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokHexNum();$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::NumExprContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::NumExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::NumExprContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::NumExprContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::NumExprContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::NumExprContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::OuterStatementContext	gen_src/CompilerGrammarParser.h	/^  class  OuterStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::OuterStatementContext::OuterStatementContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::OuterStatementContext::OuterStatementContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::OuterStatementContext::OuterStatementContext	gen_src/CompilerGrammarParser.h	/^    OuterStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::OuterStatementContext::TokSemicolon	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::OuterStatementContext::TokSemicolon() {$/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::OuterStatementContext::TokSemicolon	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokSemicolon();$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::OuterStatementContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::OuterStatementContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::OuterStatementContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::OuterStatementContext::declStruct	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext* CompilerGrammarParser::OuterStatementContext::declStru/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:CompilerGrammarParser::DeclStructContext *	signature:()
CompilerGrammarParser::OuterStatementContext::declStruct	gen_src/CompilerGrammarParser.h	/^    DeclStructContext *declStruct();$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:DeclStructContext *	access:public	signature:()
CompilerGrammarParser::OuterStatementContext::declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::OuterStatementContext::declVar/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:()
CompilerGrammarParser::OuterStatementContext::declVarList	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext *declVarList();$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:DeclVarListContext *	access:public	signature:()
CompilerGrammarParser::OuterStatementContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::OuterStatementContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::OuterStatementContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::PortParamContext	gen_src/CompilerGrammarParser.h	/^  class  PortParamContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::PortParamContext::PortParamContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::PortParamContext::PortParamContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::PortParamContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::PortParamContext::PortParamContext	gen_src/CompilerGrammarParser.h	/^    PortParamContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::PortParamContext::TokBlockingAssign	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::PortParamContext::TokBlockingAssign() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::PortParamContext::TokBlockingAssign	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokBlockingAssign();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::PortParamContext::TokKwParameter	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::PortParamContext::TokKwParameter() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::PortParamContext::TokKwParameter	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwParameter();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::PortParamContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::PortParamContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::PortParamContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::PortParamContext::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::PortParamContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
CompilerGrammarParser::PortParamContext::expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:ExprContext *	access:public	signature:()
CompilerGrammarParser::PortParamContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::PortParamContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::PortParamContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::PortParamContext::identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::PortParamContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
CompilerGrammarParser::PortParamContext::identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:IdentNameContext *	access:public	signature:()
CompilerGrammarParser::ProgramContext	gen_src/CompilerGrammarParser.h	/^  class  ProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ProgramContext::ProgramContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ProgramContext::ProgramContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:CompilerGrammarParser::ProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ProgramContext::ProgramContext	gen_src/CompilerGrammarParser.h	/^    ProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ProgramContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ProgramContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ProgramContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ProgramContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ProgramContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ProgramContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ProgramContext::subProgram	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SubProgramContext* CompilerGrammarParser::ProgramContext::subProgram(size/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:CompilerGrammarParser::SubProgramContext *	signature:(size_t i)
CompilerGrammarParser::ProgramContext::subProgram	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::SubProgramContext *> CompilerGrammarParser::ProgramContext::s/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:std::vector<CompilerGrammarParser::SubProgramContext * >	signature:()
CompilerGrammarParser::ProgramContext::subProgram	gen_src/CompilerGrammarParser.h	/^    SubProgramContext* subProgram(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:SubProgramContext *	access:public	signature:(size_t i)
CompilerGrammarParser::ProgramContext::subProgram	gen_src/CompilerGrammarParser.h	/^    std::vector<SubProgramContext *> subProgram();$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:std::vector<SubProgramContext * >	access:public	signature:()
CompilerGrammarParser::RuleDeclModule	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleDeclParameters	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleDeclStruct	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleDeclVarList	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExpr	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprAddSub	gen_src/CompilerGrammarParser.h	/^    RuleExprAddSub = 18, RuleExprMulDivModEtc = 19, RuleExprUnary = 20, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprBitInvert	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprCompare	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprLogNot	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprLogical	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprMulDivModEtc	gen_src/CompilerGrammarParser.h	/^    RuleExprAddSub = 18, RuleExprMulDivModEtc = 19, RuleExprUnary = 20, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprNegate	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleExprUnary	gen_src/CompilerGrammarParser.h	/^    RuleExprAddSub = 18, RuleExprMulDivModEtc = 19, RuleExprUnary = 20, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleIdentExpr	gen_src/CompilerGrammarParser.h	/^    RuleIdentExpr = 25, RuleIdentName = 26, RuleIdentSliced = 27$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleIdentName	gen_src/CompilerGrammarParser.h	/^    RuleIdentExpr = 25, RuleIdentName = 26, RuleIdentSliced = 27$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleIdentSliced	gen_src/CompilerGrammarParser.h	/^    RuleIdentExpr = 25, RuleIdentName = 26, RuleIdentSliced = 27$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleListIdentNames	gen_src/CompilerGrammarParser.h	/^    RuleScopedOuterStatements = 8, RuleOuterStatement = 9, RuleListIdentNames = 10, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleListModulePorts	gen_src/CompilerGrammarParser.h	/^    RuleMultiListModulePorts = 11, RuleListModulePorts = 12, RuleListPortParams = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleListPortParams	gen_src/CompilerGrammarParser.h	/^    RuleMultiListModulePorts = 11, RuleListModulePorts = 12, RuleListPortParams = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleMultiListModulePorts	gen_src/CompilerGrammarParser.h	/^    RuleMultiListModulePorts = 11, RuleListModulePorts = 12, RuleListPortParams = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleNumExpr	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleOuterStatement	gen_src/CompilerGrammarParser.h	/^    RuleScopedOuterStatements = 8, RuleOuterStatement = 9, RuleListIdentNames = 10, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RulePortParam	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleProgram	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleScopedOuterStatements	gen_src/CompilerGrammarParser.h	/^    RuleScopedOuterStatements = 8, RuleOuterStatement = 9, RuleListIdentNames = 10, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleSlice	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleSubProgram	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::RuleTypeName	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
CompilerGrammarParser::ScopedOuterStatementsContext	gen_src/CompilerGrammarParser.h	/^  class  ScopedOuterStatementsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::ScopedOuterStatementsContext::ScopedOuterStatementsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ScopedOuterStatementsContext::ScopedOuterStatementsContext(ParserRuleCont/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ScopedOuterStatementsContext::ScopedOuterStatementsContext	gen_src/CompilerGrammarParser.h	/^    ScopedOuterStatementsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::ScopedOuterStatementsContext::TokLBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ScopedOuterStatementsContext::TokLBrace() {$/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ScopedOuterStatementsContext::TokLBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLBrace();$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ScopedOuterStatementsContext::TokRBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ScopedOuterStatementsContext::TokRBrace() {$/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::ScopedOuterStatementsContext::TokRBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRBrace();$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::ScopedOuterStatementsContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ScopedOuterStatementsContext::accept(tree::ParseTreeVisitor/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ScopedOuterStatementsContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::ScopedOuterStatementsContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ScopedOuterStatementsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::ScopedOuterStatementsContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::ScopedOuterStatementsContext::outerStatement	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::OuterStatementContext* CompilerGrammarParser::ScopedOuterStatementsContex/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:CompilerGrammarParser::OuterStatementContext *	signature:(size_t i)
CompilerGrammarParser::ScopedOuterStatementsContext::outerStatement	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::OuterStatementContext *> CompilerGrammarParser::ScopedOuterSt/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:std::vector<CompilerGrammarParser::OuterStatementContext * >	signature:()
CompilerGrammarParser::ScopedOuterStatementsContext::outerStatement	gen_src/CompilerGrammarParser.h	/^    OuterStatementContext* outerStatement(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:OuterStatementContext *	access:public	signature:(size_t i)
CompilerGrammarParser::ScopedOuterStatementsContext::outerStatement	gen_src/CompilerGrammarParser.h	/^    std::vector<OuterStatementContext *> outerStatement();$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:std::vector<OuterStatementContext * >	access:public	signature:()
CompilerGrammarParser::SliceContext	gen_src/CompilerGrammarParser.h	/^  class  SliceContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::SliceContext::SliceContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext::SliceContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:CompilerGrammarParser::SliceContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::SliceContext::SliceContext	gen_src/CompilerGrammarParser.h	/^    SliceContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::SliceContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::SliceContext::TokColon	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::SliceContext::TokColon() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::SliceContext::TokColon	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokColon();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::SliceContext::TokLBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::SliceContext::TokLBrace() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::SliceContext::TokLBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLBrace();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::SliceContext::TokRBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::SliceContext::TokRBrace() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::SliceContext::TokRBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRBrace();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::SliceContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::SliceContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::SliceContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::SliceContext::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::SliceContext::expr(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:(size_t i)
CompilerGrammarParser::SliceContext::expr	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::ExprContext *> CompilerGrammarParser::SliceContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:std::vector<CompilerGrammarParser::ExprContext * >	signature:()
CompilerGrammarParser::SliceContext::expr	gen_src/CompilerGrammarParser.h	/^    ExprContext* expr(size_t i);$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:ExprContext *	access:public	signature:(size_t i)
CompilerGrammarParser::SliceContext::expr	gen_src/CompilerGrammarParser.h	/^    std::vector<ExprContext *> expr();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:std::vector<ExprContext * >	access:public	signature:()
CompilerGrammarParser::SliceContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::SliceContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::SliceContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::SubProgramContext	gen_src/CompilerGrammarParser.h	/^  class  SubProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::SubProgramContext::SubProgramContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SubProgramContext::SubProgramContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::SubProgramContext::SubProgramContext	gen_src/CompilerGrammarParser.h	/^    SubProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::SubProgramContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::SubProgramContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::SubProgramContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::SubProgramContext::declModule	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclModuleContext* CompilerGrammarParser::SubProgramContext::declModule()/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:CompilerGrammarParser::DeclModuleContext *	signature:()
CompilerGrammarParser::SubProgramContext::declModule	gen_src/CompilerGrammarParser.h	/^    DeclModuleContext *declModule();$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:DeclModuleContext *	access:public	signature:()
CompilerGrammarParser::SubProgramContext::declStruct	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext* CompilerGrammarParser::SubProgramContext::declStruct()/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:CompilerGrammarParser::DeclStructContext *	signature:()
CompilerGrammarParser::SubProgramContext::declStruct	gen_src/CompilerGrammarParser.h	/^    DeclStructContext *declStruct();$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:DeclStructContext *	access:public	signature:()
CompilerGrammarParser::SubProgramContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::SubProgramContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::SubProgramContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::TokApostrophe	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokBinNum	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokBitInvert	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokBlockingAssign	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokColon	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokComma	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokDecNum	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokExclamPoint	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokHexNum	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokIdent	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwAlwaysComb	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwAlwaysSeq	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwAssign	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwCase	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwDefault	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwDo	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwDollarConcat	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwDollarReplicate	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwElse	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwEnum	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwFor	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwFunction	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwIf	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwInitial	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwInput	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwInterface	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwLocalparam	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwLogic	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwModule	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwNegedge	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwOutput	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwPackage	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwParameter	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwPosedge	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwPrivate	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwPublic	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwStruct	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwSwitch	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwSwitchx	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwSwitchz	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwTask	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwUnion	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokKwWhile	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokLBrace	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokLBracket	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokLParen	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokMinus	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokNonBlockingAssign	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokNumber	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokOpBitwise	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokOpCompare	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokOpLogical	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokOpMulDivMod	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokOther	gen_src/CompilerGrammarParser.h	/^    TokOther = 64$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokPeriod	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokPlus	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokQuote	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokRBrace	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokRBracket	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokRParen	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokScope	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TokSemicolon	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
CompilerGrammarParser::TypeNameContext	gen_src/CompilerGrammarParser.h	/^  class  TypeNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
CompilerGrammarParser::TypeNameContext::TokKwLogic	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::TypeNameContext::TokKwLogic() {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:tree::TerminalNode *	signature:()
CompilerGrammarParser::TypeNameContext::TokKwLogic	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwLogic();$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
CompilerGrammarParser::TypeNameContext::TypeNameContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::TypeNameContext::TypeNameContext(ParserRuleContext *parent, size_t invoki/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::TypeNameContext::TypeNameContext	gen_src/CompilerGrammarParser.h	/^    TypeNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CompilerGrammarParser::TypeNameContext::accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::TypeNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::TypeNameContext::accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
CompilerGrammarParser::TypeNameContext::getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::TypeNameContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:size_t	signature:() const
CompilerGrammarParser::TypeNameContext::getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:size_t	access:public	signature:() const
CompilerGrammarParser::TypeNameContext::identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::TypeNameContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
CompilerGrammarParser::TypeNameContext::identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:IdentNameContext *	access:public	signature:()
CompilerGrammarParser::TypeNameContext::slice	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext* CompilerGrammarParser::TypeNameContext::slice() {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:CompilerGrammarParser::SliceContext *	signature:()
CompilerGrammarParser::TypeNameContext::slice	gen_src/CompilerGrammarParser.h	/^    SliceContext *slice();$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:SliceContext *	access:public	signature:()
CompilerGrammarParser::__anona17d541a0103	gen_src/CompilerGrammarParser.h	/^  enum {$/;"	kind:g	class:CompilerGrammarParser	access:public
CompilerGrammarParser::__anona17d541a0203	gen_src/CompilerGrammarParser.h	/^  enum {$/;"	kind:g	class:CompilerGrammarParser	access:public
CompilerGrammarParser::_atn	gen_src/CompilerGrammarParser.cpp	/^atn::ATN CompilerGrammarParser::_atn;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:atn::ATN
CompilerGrammarParser::_atn	gen_src/CompilerGrammarParser.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:antlr4::atn::ATN	access:private
CompilerGrammarParser::_decisionToDFA	gen_src/CompilerGrammarParser.cpp	/^std::vector<dfa::DFA> CompilerGrammarParser::_decisionToDFA;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<dfa::DFA>
CompilerGrammarParser::_decisionToDFA	gen_src/CompilerGrammarParser.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
CompilerGrammarParser::_init	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::Initializer CompilerGrammarParser::_init;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::Initializer
CompilerGrammarParser::_init	gen_src/CompilerGrammarParser.h	/^  static Initializer _init;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:Initializer	access:private
CompilerGrammarParser::_literalNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_literalNames = {$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
CompilerGrammarParser::_literalNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarParser::_ruleNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_ruleNames = {$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
CompilerGrammarParser::_ruleNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarParser::_serializedATN	gen_src/CompilerGrammarParser.cpp	/^std::vector<uint16_t> CompilerGrammarParser::_serializedATN;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<uint16_t>
CompilerGrammarParser::_serializedATN	gen_src/CompilerGrammarParser.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<uint16_t>	access:private
CompilerGrammarParser::_sharedContextCache	gen_src/CompilerGrammarParser.cpp	/^atn::PredictionContextCache CompilerGrammarParser::_sharedContextCache;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:atn::PredictionContextCache
CompilerGrammarParser::_sharedContextCache	gen_src/CompilerGrammarParser.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:antlr4::atn::PredictionContextCache	access:private
CompilerGrammarParser::_symbolicNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_symbolicNames = {$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
CompilerGrammarParser::_symbolicNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarParser::_tokenNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_tokenNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
CompilerGrammarParser::_tokenNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
CompilerGrammarParser::_vocabulary	gen_src/CompilerGrammarParser.cpp	/^dfa::Vocabulary CompilerGrammarParser::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
CompilerGrammarParser::_vocabulary	gen_src/CompilerGrammarParser.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:antlr4::dfa::Vocabulary	access:private
CompilerGrammarParser::declModule	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclModuleContext* CompilerGrammarParser::declModule() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclModuleContext *	signature:()
CompilerGrammarParser::declModule	gen_src/CompilerGrammarParser.h	/^  DeclModuleContext* declModule();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclModuleContext *	access:public	signature:()
CompilerGrammarParser::declParameters	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclParametersContext* CompilerGrammarParser::declParameters() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclParametersContext *	signature:()
CompilerGrammarParser::declParameters	gen_src/CompilerGrammarParser.h	/^  DeclParametersContext* declParameters();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclParametersContext *	access:public	signature:()
CompilerGrammarParser::declStruct	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext* CompilerGrammarParser::declStruct() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclStructContext *	signature:()
CompilerGrammarParser::declStruct	gen_src/CompilerGrammarParser.h	/^  DeclStructContext* declStruct();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclStructContext *	access:public	signature:()
CompilerGrammarParser::declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::declVarList() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:()
CompilerGrammarParser::declVarList	gen_src/CompilerGrammarParser.h	/^  DeclVarListContext* declVarList();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclVarListContext *	access:public	signature:()
CompilerGrammarParser::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::expr() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
CompilerGrammarParser::expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::expr(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprContext *	signature:(int precedence)
CompilerGrammarParser::expr	gen_src/CompilerGrammarParser.h	/^  ExprContext* expr();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprContext *	access:public	signature:()
CompilerGrammarParser::expr	gen_src/CompilerGrammarParser.h	/^  ExprContext* expr(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprContext *	access:public	signature:(int precedence)
CompilerGrammarParser::exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::exprAddSub() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:()
CompilerGrammarParser::exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::exprAddSub(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:(int precedence)
CompilerGrammarParser::exprAddSub	gen_src/CompilerGrammarParser.h	/^  ExprAddSubContext* exprAddSub();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:()
CompilerGrammarParser::exprAddSub	gen_src/CompilerGrammarParser.h	/^  ExprAddSubContext* exprAddSub(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:(int precedence)
CompilerGrammarParser::exprAddSubSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateInde/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprAddSubSempred	gen_src/CompilerGrammarParser.h	/^  bool exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprBitInvert	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprBitInvertContext* CompilerGrammarParser::exprBitInvert() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprBitInvertContext *	signature:()
CompilerGrammarParser::exprBitInvert	gen_src/CompilerGrammarParser.h	/^  ExprBitInvertContext* exprBitInvert();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprBitInvertContext *	access:public	signature:()
CompilerGrammarParser::exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::exprCompare() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:()
CompilerGrammarParser::exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::exprCompare(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:(int precedence)
CompilerGrammarParser::exprCompare	gen_src/CompilerGrammarParser.h	/^  ExprCompareContext* exprCompare();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:()
CompilerGrammarParser::exprCompare	gen_src/CompilerGrammarParser.h	/^  ExprCompareContext* exprCompare(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:(int precedence)
CompilerGrammarParser::exprCompareSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIn/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprCompareSempred	gen_src/CompilerGrammarParser.h	/^  bool exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprLogNot	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogNotContext* CompilerGrammarParser::exprLogNot() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprLogNotContext *	signature:()
CompilerGrammarParser::exprLogNot	gen_src/CompilerGrammarParser.h	/^  ExprLogNotContext* exprLogNot();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprLogNotContext *	access:public	signature:()
CompilerGrammarParser::exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::exprLogical() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:()
CompilerGrammarParser::exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::exprLogical(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:(int precedence)
CompilerGrammarParser::exprLogical	gen_src/CompilerGrammarParser.h	/^  ExprLogicalContext* exprLogical();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:()
CompilerGrammarParser::exprLogical	gen_src/CompilerGrammarParser.h	/^  ExprLogicalContext* exprLogical(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:(int precedence)
CompilerGrammarParser::exprLogicalSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIn/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprLogicalSempred	gen_src/CompilerGrammarParser.h	/^  bool exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprMulDivModEtc	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprMulDivModEtcContext* CompilerGrammarParser::exprMulDivModEtc() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprMulDivModEtcContext *	signature:()
CompilerGrammarParser::exprMulDivModEtc	gen_src/CompilerGrammarParser.h	/^  ExprMulDivModEtcContext* exprMulDivModEtc();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
CompilerGrammarParser::exprNegate	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprNegateContext* CompilerGrammarParser::exprNegate() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprNegateContext *	signature:()
CompilerGrammarParser::exprNegate	gen_src/CompilerGrammarParser.h	/^  ExprNegateContext* exprNegate();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprNegateContext *	access:public	signature:()
CompilerGrammarParser::exprSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprSempred(ExprContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprSempred	gen_src/CompilerGrammarParser.h	/^  bool exprSempred(ExprContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprContext * _localctx,size_t predicateIndex)
CompilerGrammarParser::exprUnary	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprUnaryContext* CompilerGrammarParser::exprUnary() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprUnaryContext *	signature:()
CompilerGrammarParser::exprUnary	gen_src/CompilerGrammarParser.h	/^  ExprUnaryContext* exprUnary();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprUnaryContext *	access:public	signature:()
CompilerGrammarParser::getATN	gen_src/CompilerGrammarParser.h	/^  virtual const antlr4::atn::ATN& getATN() const override { return _atn; };$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
CompilerGrammarParser::getGrammarFileName	gen_src/CompilerGrammarParser.cpp	/^std::string CompilerGrammarParser::getGrammarFileName() const {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:std::string	signature:() const
CompilerGrammarParser::getGrammarFileName	gen_src/CompilerGrammarParser.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:std::string	access:public	signature:() const
CompilerGrammarParser::getRuleNames	gen_src/CompilerGrammarParser.cpp	/^const std::vector<std::string>& CompilerGrammarParser::getRuleNames() const {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:const std::vector<std::string> &	signature:() const
CompilerGrammarParser::getRuleNames	gen_src/CompilerGrammarParser.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
CompilerGrammarParser::getTokenNames	gen_src/CompilerGrammarParser.h	/^  virtual const std::vector<std::string>& getTokenNames() const override { return _tokenNames; }/;"	kind:f	class:CompilerGrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
CompilerGrammarParser::getVocabulary	gen_src/CompilerGrammarParser.cpp	/^dfa::Vocabulary& CompilerGrammarParser::getVocabulary() const {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:dfa::Vocabulary &	signature:() const
CompilerGrammarParser::getVocabulary	gen_src/CompilerGrammarParser.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
CompilerGrammarParser::identExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentExprContext* CompilerGrammarParser::identExpr() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::IdentExprContext *	signature:()
CompilerGrammarParser::identExpr	gen_src/CompilerGrammarParser.h	/^  IdentExprContext* identExpr();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:IdentExprContext *	access:public	signature:()
CompilerGrammarParser::identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::identName() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
CompilerGrammarParser::identName	gen_src/CompilerGrammarParser.h	/^  IdentNameContext* identName();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:IdentNameContext *	access:public	signature:()
CompilerGrammarParser::identSliced	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentSlicedContext* CompilerGrammarParser::identSliced() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::IdentSlicedContext *	signature:()
CompilerGrammarParser::identSliced	gen_src/CompilerGrammarParser.h	/^  IdentSlicedContext* identSliced();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:IdentSlicedContext *	access:public	signature:()
CompilerGrammarParser::listIdentNames	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListIdentNamesContext* CompilerGrammarParser::listIdentNames() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ListIdentNamesContext *	signature:()
CompilerGrammarParser::listIdentNames	gen_src/CompilerGrammarParser.h	/^  ListIdentNamesContext* listIdentNames();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ListIdentNamesContext *	access:public	signature:()
CompilerGrammarParser::listModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListModulePortsContext* CompilerGrammarParser::listModulePorts() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ListModulePortsContext *	signature:()
CompilerGrammarParser::listModulePorts	gen_src/CompilerGrammarParser.h	/^  ListModulePortsContext* listModulePorts();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ListModulePortsContext *	access:public	signature:()
CompilerGrammarParser::listPortParams	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListPortParamsContext* CompilerGrammarParser::listPortParams() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ListPortParamsContext *	signature:()
CompilerGrammarParser::listPortParams	gen_src/CompilerGrammarParser.h	/^  ListPortParamsContext* listPortParams();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ListPortParamsContext *	access:public	signature:()
CompilerGrammarParser::multiListModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::MultiListModulePortsContext* CompilerGrammarParser::multiListModulePorts(/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::MultiListModulePortsContext *	signature:()
CompilerGrammarParser::multiListModulePorts	gen_src/CompilerGrammarParser.h	/^  MultiListModulePortsContext* multiListModulePorts();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:MultiListModulePortsContext *	access:public	signature:()
CompilerGrammarParser::numExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::NumExprContext* CompilerGrammarParser::numExpr() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::NumExprContext *	signature:()
CompilerGrammarParser::numExpr	gen_src/CompilerGrammarParser.h	/^  NumExprContext* numExpr();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:NumExprContext *	access:public	signature:()
CompilerGrammarParser::outerStatement	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::OuterStatementContext* CompilerGrammarParser::outerStatement() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::OuterStatementContext *	signature:()
CompilerGrammarParser::outerStatement	gen_src/CompilerGrammarParser.h	/^  OuterStatementContext* outerStatement();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:OuterStatementContext *	access:public	signature:()
CompilerGrammarParser::portParam	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::PortParamContext* CompilerGrammarParser::portParam() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::PortParamContext *	signature:()
CompilerGrammarParser::portParam	gen_src/CompilerGrammarParser.h	/^  PortParamContext* portParam();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:PortParamContext *	access:public	signature:()
CompilerGrammarParser::program	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ProgramContext* CompilerGrammarParser::program() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ProgramContext *	signature:()
CompilerGrammarParser::program	gen_src/CompilerGrammarParser.h	/^  ProgramContext* program();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ProgramContext *	access:public	signature:()
CompilerGrammarParser::scopedOuterStatements	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ScopedOuterStatementsContext* CompilerGrammarParser::scopedOuterStatement/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ScopedOuterStatementsContext *	signature:()
CompilerGrammarParser::scopedOuterStatements	gen_src/CompilerGrammarParser.h	/^  ScopedOuterStatementsContext* scopedOuterStatements();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ScopedOuterStatementsContext *	access:public	signature:()
CompilerGrammarParser::sempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::sempred(RuleContext *context, size_t ruleIndex, size_t predicateInde/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(RuleContext * context,size_t ruleIndex,size_t predicateIndex)
CompilerGrammarParser::sempred	gen_src/CompilerGrammarParser.h	/^  virtual bool sempred(antlr4::RuleContext *_localctx, size_t ruleIndex, size_t predicateIndex) /;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(antlr4::RuleContext * _localctx,size_t ruleIndex,size_t predicateIndex)
CompilerGrammarParser::slice	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext* CompilerGrammarParser::slice() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::SliceContext *	signature:()
CompilerGrammarParser::slice	gen_src/CompilerGrammarParser.h	/^  SliceContext* slice();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:SliceContext *	access:public	signature:()
CompilerGrammarParser::subProgram	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SubProgramContext* CompilerGrammarParser::subProgram() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::SubProgramContext *	signature:()
CompilerGrammarParser::subProgram	gen_src/CompilerGrammarParser.h	/^  SubProgramContext* subProgram();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:SubProgramContext *	access:public	signature:()
CompilerGrammarParser::typeName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::TypeNameContext* CompilerGrammarParser::typeName() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::TypeNameContext *	signature:()
CompilerGrammarParser::typeName	gen_src/CompilerGrammarParser.h	/^  TypeNameContext* typeName();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:TypeNameContext *	access:public	signature:()
CompilerGrammarParser::~CompilerGrammarParser	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::~CompilerGrammarParser() {$/;"	kind:f	class:CompilerGrammarParser	signature:()
CompilerGrammarParser::~CompilerGrammarParser	gen_src/CompilerGrammarParser.h	/^  ~CompilerGrammarParser();$/;"	kind:p	class:CompilerGrammarParser	access:public	signature:()
CompilerGrammarVisitor	gen_src/CompilerGrammarVisitor.h	/^class  CompilerGrammarVisitor : public antlr4::tree::AbstractParseTreeVisitor {$/;"	kind:c	inherits:antlr4::tree::AbstractParseTreeVisitor
CompilerGrammarVisitor::visitDeclModule	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclModule(CompilerGrammarParser::DeclModuleContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclModuleContext * context)
CompilerGrammarVisitor::visitDeclParameters	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclParameters(CompilerGrammarParser::DeclParametersContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclParametersContext * context)
CompilerGrammarVisitor::visitDeclStruct	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclStruct(CompilerGrammarParser::DeclStructContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclStructContext * context)
CompilerGrammarVisitor::visitDeclVarList	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclVarList(CompilerGrammarParser::DeclVarListContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclVarListContext * context)
CompilerGrammarVisitor::visitExpr	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExpr(CompilerGrammarParser::ExprContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprContext * context)
CompilerGrammarVisitor::visitExprAddSub	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprAddSub(CompilerGrammarParser::ExprAddSubContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprAddSubContext * context)
CompilerGrammarVisitor::visitExprBitInvert	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprBitInvert(CompilerGrammarParser::ExprBitInvertContext *contex/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprBitInvertContext * context)
CompilerGrammarVisitor::visitExprCompare	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprCompare(CompilerGrammarParser::ExprCompareContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprCompareContext * context)
CompilerGrammarVisitor::visitExprLogNot	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogNot(CompilerGrammarParser::ExprLogNotContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogNotContext * context)
CompilerGrammarVisitor::visitExprLogical	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogical(CompilerGrammarParser::ExprLogicalContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogicalContext * context)
CompilerGrammarVisitor::visitExprMulDivModEtc	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprMulDivModEtc(CompilerGrammarParser::ExprMulDivModEtcContext */;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprMulDivModEtcContext * context)
CompilerGrammarVisitor::visitExprNegate	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprNegate(CompilerGrammarParser::ExprNegateContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprNegateContext * context)
CompilerGrammarVisitor::visitExprUnary	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprUnary(CompilerGrammarParser::ExprUnaryContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprUnaryContext * context)
CompilerGrammarVisitor::visitIdentExpr	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentExpr(CompilerGrammarParser::IdentExprContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentExprContext * context)
CompilerGrammarVisitor::visitIdentName	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentName(CompilerGrammarParser::IdentNameContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentNameContext * context)
CompilerGrammarVisitor::visitIdentSliced	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentSliced(CompilerGrammarParser::IdentSlicedContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentSlicedContext * context)
CompilerGrammarVisitor::visitListIdentNames	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitListIdentNames(CompilerGrammarParser::ListIdentNamesContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListIdentNamesContext * context)
CompilerGrammarVisitor::visitListModulePorts	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitListModulePorts(CompilerGrammarParser::ListModulePortsContext *co/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListModulePortsContext * context)
CompilerGrammarVisitor::visitListPortParams	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitListPortParams(CompilerGrammarParser::ListPortParamsContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListPortParamsContext * context)
CompilerGrammarVisitor::visitMultiListModulePorts	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitMultiListModulePorts(CompilerGrammarParser::MultiListModulePortsC/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::MultiListModulePortsContext * context)
CompilerGrammarVisitor::visitNumExpr	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitNumExpr(CompilerGrammarParser::NumExprContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::NumExprContext * context)
CompilerGrammarVisitor::visitOuterStatement	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitOuterStatement(CompilerGrammarParser::OuterStatementContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::OuterStatementContext * context)
CompilerGrammarVisitor::visitPortParam	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitPortParam(CompilerGrammarParser::PortParamContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::PortParamContext * context)
CompilerGrammarVisitor::visitProgram	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitProgram(CompilerGrammarParser::ProgramContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ProgramContext * context)
CompilerGrammarVisitor::visitScopedOuterStatements	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitScopedOuterStatements(CompilerGrammarParser::ScopedOuterStatement/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ScopedOuterStatementsContext * context)
CompilerGrammarVisitor::visitSlice	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitSlice(CompilerGrammarParser::SliceContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SliceContext * context)
CompilerGrammarVisitor::visitSubProgram	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitSubProgram(CompilerGrammarParser::SubProgramContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SubProgramContext * context)
CompilerGrammarVisitor::visitTypeName	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitTypeName(CompilerGrammarParser::TypeNameContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::TypeNameContext * context)
DeclModuleContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclModuleContext::DeclModuleContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	signature:(ParserRuleContext * parent,size_t invokingState)
DeclModuleContext	gen_src/CompilerGrammarParser.h	/^    DeclModuleContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
DeclModuleContext	gen_src/CompilerGrammarParser.h	/^  class  DeclModuleContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
DeclParametersContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclParametersContext::DeclParametersContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	signature:(ParserRuleContext * parent,size_t invokingState)
DeclParametersContext	gen_src/CompilerGrammarParser.h	/^    DeclParametersContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
DeclParametersContext	gen_src/CompilerGrammarParser.h	/^  class  DeclParametersContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
DeclStructContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext::DeclStructContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	signature:(ParserRuleContext * parent,size_t invokingState)
DeclStructContext	gen_src/CompilerGrammarParser.h	/^    DeclStructContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
DeclStructContext	gen_src/CompilerGrammarParser.h	/^  class  DeclStructContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
DeclVarListContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext::DeclVarListContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	signature:(ParserRuleContext * parent,size_t invokingState)
DeclVarListContext	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
DeclVarListContext	gen_src/CompilerGrammarParser.h	/^  class  DeclVarListContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
DidQuitWithMiscOutput	liborangepower_src/mpi_handler_class.hpp	/^		DidQuitWithMiscOutput,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
DupStuff	allocation_stuff.cpp	/^class DupStuff$/;"	kind:c	namespace:frost_hdl	file:
ErrorCode	liborangepower_src/mpi_handler_class.hpp	/^	enum class ErrorCode : int$/;"	kind:g	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
ExprAddSubContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext::ExprAddSubContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprAddSubContext	gen_src/CompilerGrammarParser.h	/^    ExprAddSubContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprAddSubContext	gen_src/CompilerGrammarParser.h	/^  class  ExprAddSubContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprBitInvertContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprBitInvertContext::ExprBitInvertContext(ParserRuleContext *parent, siz/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprBitInvertContext	gen_src/CompilerGrammarParser.h	/^    ExprBitInvertContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprBitInvertContext	gen_src/CompilerGrammarParser.h	/^  class  ExprBitInvertContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprChunk	expr_chunk_class.hpp	/^	inline ExprChunk()$/;"	kind:f	class:frost_hdl::ExprChunk	access:public	signature:()
ExprChunk	expr_chunk_class.hpp	/^	inline ExprChunk(const ExprChunk& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprChunk	access:public	signature:(const ExprChunk & to_copy)
ExprChunk	expr_chunk_class.hpp	/^class ExprChunk$/;"	kind:c	namespace:frost_hdl
ExprCompareContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext::ExprCompareContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprCompareContext	gen_src/CompilerGrammarParser.h	/^    ExprCompareContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprCompareContext	gen_src/CompilerGrammarParser.h	/^  class  ExprCompareContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext::ExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:CompilerGrammarParser::ExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprContext	gen_src/CompilerGrammarParser.h	/^    ExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprContext	gen_src/CompilerGrammarParser.h	/^  class  ExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprLogNotContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogNotContext::ExprLogNotContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprLogNotContext	gen_src/CompilerGrammarParser.h	/^    ExprLogNotContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprLogNotContext	gen_src/CompilerGrammarParser.h	/^  class  ExprLogNotContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprLogicalContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext::ExprLogicalContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprLogicalContext	gen_src/CompilerGrammarParser.h	/^    ExprLogicalContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprLogicalContext	gen_src/CompilerGrammarParser.h	/^  class  ExprLogicalContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprMulDivModEtcContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext(ParserRuleContext *paren/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprMulDivModEtcContext	gen_src/CompilerGrammarParser.h	/^    ExprMulDivModEtcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprMulDivModEtcContext	gen_src/CompilerGrammarParser.h	/^  class  ExprMulDivModEtcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprNegateContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprNegateContext::ExprNegateContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprNegateContext	gen_src/CompilerGrammarParser.h	/^    ExprNegateContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprNegateContext	gen_src/CompilerGrammarParser.h	/^  class  ExprNegateContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprNum	expr_chunk_class.hpp	/^		ExprNum,$/;"	kind:e	enum:frost_hdl::ExprChunk::Type	access:public
ExprNum	expr_num_class.hpp	/^	inline ExprNum()$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:()
ExprNum	expr_num_class.hpp	/^	inline ExprNum(const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & to_copy)
ExprNum	expr_num_class.hpp	/^	inline ExprNum(size_t s_size, BigNum* s_val)$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:(size_t s_size,BigNum * s_val)
ExprNum	expr_num_class.hpp	/^class ExprNum$/;"	kind:c	namespace:frost_hdl
ExprSymbolRef	expr_chunk_class.hpp	/^		ExprSymbolRef,$/;"	kind:e	enum:frost_hdl::ExprChunk::Type	access:public
ExprSymbolRef	expr_symbol_ref_class.hpp	/^	inline ExprSymbolRef()$/;"	kind:f	class:frost_hdl::ExprSymbolRef	access:public	signature:()
ExprSymbolRef	expr_symbol_ref_class.hpp	/^	inline ExprSymbolRef(const ExprSymbolRef& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(const ExprSymbolRef & to_copy)
ExprSymbolRef	expr_symbol_ref_class.hpp	/^class ExprSymbolRef$/;"	kind:c	namespace:frost_hdl
ExprUnaryContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprUnaryContext::ExprUnaryContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprUnaryContext	gen_src/CompilerGrammarParser.h	/^    ExprUnaryContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprUnaryContext	gen_src/CompilerGrammarParser.h	/^  class  ExprUnaryContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
FakeError	liborangepower_src/mpi_handler_class.hpp	/^		FakeError,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
Ident	ident_table_classes.hpp	/^typedef std::string* Ident;$/;"	kind:t	namespace:frost_hdl	typeref:typename:std::string *
IdentExprContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentExprContext::IdentExprContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
IdentExprContext	gen_src/CompilerGrammarParser.h	/^    IdentExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IdentExprContext	gen_src/CompilerGrammarParser.h	/^  class  IdentExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
IdentNameContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext::IdentNameContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
IdentNameContext	gen_src/CompilerGrammarParser.h	/^    IdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IdentNameContext	gen_src/CompilerGrammarParser.h	/^  class  IdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
IdentSlicedContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentSlicedContext::IdentSlicedContext(ParserRuleContext *parent, size_t /;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	signature:(ParserRuleContext * parent,size_t invokingState)
IdentSlicedContext	gen_src/CompilerGrammarParser.h	/^    IdentSlicedContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IdentSlicedContext	gen_src/CompilerGrammarParser.h	/^  class  IdentSlicedContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
IdentTable	ident_table_classes.hpp	/^	inline IdentTable()$/;"	kind:f	class:frost_hdl::IdentTable	access:public	signature:()
IdentTable	ident_table_classes.hpp	/^class IdentTable$/;"	kind:c	namespace:frost_hdl
IdentToPointerTable	ident_table_classes.hpp	/^	inline IdentToPointerTable()$/;"	kind:f	class:frost_hdl::IdentToPointerTable	access:public	signature:()
IdentToPointerTable	ident_table_classes.hpp	/^class IdentToPointerTable$/;"	kind:c	namespace:frost_hdl
Initializer	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::Initializer::Initializer() {$/;"	kind:f	class:CompilerGrammarLexer::Initializer	signature:()
Initializer	gen_src/CompilerGrammarLexer.h	/^    Initializer();$/;"	kind:p	struct:CompilerGrammarLexer::Initializer	access:public	signature:()
Initializer	gen_src/CompilerGrammarLexer.h	/^  struct Initializer {$/;"	kind:s	class:CompilerGrammarLexer	access:private
Initializer	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::Initializer::Initializer() {$/;"	kind:f	class:CompilerGrammarParser::Initializer	signature:()
Initializer	gen_src/CompilerGrammarParser.h	/^    Initializer();$/;"	kind:p	struct:CompilerGrammarParser::Initializer	access:public	signature:()
Initializer	gen_src/CompilerGrammarParser.h	/^  struct Initializer {$/;"	kind:s	class:CompilerGrammarParser	access:private
InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
LexLineComment	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
LexLineComment	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
LexWhitespace	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
LexWhitespace	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
ListIdentNamesContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListIdentNamesContext::ListIdentNamesContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	signature:(ParserRuleContext * parent,size_t invokingState)
ListIdentNamesContext	gen_src/CompilerGrammarParser.h	/^    ListIdentNamesContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ListIdentNamesContext	gen_src/CompilerGrammarParser.h	/^  class  ListIdentNamesContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ListModulePortsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListModulePortsContext::ListModulePortsContext(ParserRuleContext *parent,/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	signature:(ParserRuleContext * parent,size_t invokingState)
ListModulePortsContext	gen_src/CompilerGrammarParser.h	/^    ListModulePortsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ListModulePortsContext	gen_src/CompilerGrammarParser.h	/^  class  ListModulePortsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ListPortParamsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListPortParamsContext::ListPortParamsContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	signature:(ParserRuleContext * parent,size_t invokingState)
ListPortParamsContext	gen_src/CompilerGrammarParser.h	/^    ListPortParamsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ListPortParamsContext	gen_src/CompilerGrammarParser.h	/^  class  ListPortParamsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
MPI_HANDLER_STATIC_ASSERT_0	liborangepower_src/mpi_handler_class.hpp	/^#define MPI_HANDLER_STATIC_ASSERT_0(/;"	kind:d	signature:(type,func_name_str)
MPI_HANDLER_STATIC_ASSERT_1	liborangepower_src/mpi_handler_class.hpp	/^#define MPI_HANDLER_STATIC_ASSERT_1(/;"	kind:d	signature:(type,func_name_str)
MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	inline MpiHandler(int& s_argc, char** s_argv,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:(int & s_argc,char ** s_argv,size_t s_num_threads_per_proc=1,size_t s_min_world_size=1)
MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^class MpiHandler$/;"	kind:c	namespace:liborangepower::mpi
MultiListModulePortsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::MultiListModulePortsContext::MultiListModulePortsContext(ParserRuleContex/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	signature:(ParserRuleContext * parent,size_t invokingState)
MultiListModulePortsContext	gen_src/CompilerGrammarParser.h	/^    MultiListModulePortsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
MultiListModulePortsContext	gen_src/CompilerGrammarParser.h	/^  class  MultiListModulePortsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
Node	scoped_table_base_class.hpp	/^	typedef ScopedTableNode<Type> Node;$/;"	kind:t	class:frost_hdl::ScopedTableBase	typeref:typename:ScopedTableNode<Type>	access:public
NumExprContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::NumExprContext::NumExprContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:CompilerGrammarParser::NumExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
NumExprContext	gen_src/CompilerGrammarParser.h	/^    NumExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
NumExprContext	gen_src/CompilerGrammarParser.h	/^  class  NumExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
OuterStatementContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::OuterStatementContext::OuterStatementContext(ParserRuleContext *parent, s/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
OuterStatementContext	gen_src/CompilerGrammarParser.h	/^    OuterStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
OuterStatementContext	gen_src/CompilerGrammarParser.h	/^  class  OuterStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
Parser	compiler_class.hpp	/^	typedef CompilerGrammarParser Parser;$/;"	kind:t	class:frost_hdl::Compiler	typeref:typename:CompilerGrammarParser	access:public
ParserRuleContext	compiler_class.hpp	/^	typedef antlr4::ParserRuleContext ParserRuleContext;$/;"	kind:t	class:frost_hdl::Compiler	typeref:typename:antlr4::ParserRuleContext	access:public
PortParamContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::PortParamContext::PortParamContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:CompilerGrammarParser::PortParamContext	signature:(ParserRuleContext * parent,size_t invokingState)
PortParamContext	gen_src/CompilerGrammarParser.h	/^    PortParamContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
PortParamContext	gen_src/CompilerGrammarParser.h	/^  class  PortParamContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
PrevCurrPair	liborangepower_src/prev_curr_pair_class.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
ProgramContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ProgramContext::ProgramContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:CompilerGrammarParser::ProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
ProgramContext	gen_src/CompilerGrammarParser.h	/^    ProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ProgramContext	gen_src/CompilerGrammarParser.h	/^  class  ProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
Reg	symbol_class.hpp	/^		Reg,$/;"	kind:e	enum:frost_hdl::Symbol::CompiledType	access:public
RuleDeclModule	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleDeclParameters	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleDeclStruct	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleDeclVarList	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExpr	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprAddSub	gen_src/CompilerGrammarParser.h	/^    RuleExprAddSub = 18, RuleExprMulDivModEtc = 19, RuleExprUnary = 20, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprBitInvert	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprCompare	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprLogNot	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprLogical	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprMulDivModEtc	gen_src/CompilerGrammarParser.h	/^    RuleExprAddSub = 18, RuleExprMulDivModEtc = 19, RuleExprUnary = 20, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprNegate	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleExprUnary	gen_src/CompilerGrammarParser.h	/^    RuleExprAddSub = 18, RuleExprMulDivModEtc = 19, RuleExprUnary = 20, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleIdentExpr	gen_src/CompilerGrammarParser.h	/^    RuleIdentExpr = 25, RuleIdentName = 26, RuleIdentSliced = 27$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleIdentName	gen_src/CompilerGrammarParser.h	/^    RuleIdentExpr = 25, RuleIdentName = 26, RuleIdentSliced = 27$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleIdentSliced	gen_src/CompilerGrammarParser.h	/^    RuleIdentExpr = 25, RuleIdentName = 26, RuleIdentSliced = 27$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleListIdentNames	gen_src/CompilerGrammarParser.h	/^    RuleScopedOuterStatements = 8, RuleOuterStatement = 9, RuleListIdentNames = 10, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleListModulePorts	gen_src/CompilerGrammarParser.h	/^    RuleMultiListModulePorts = 11, RuleListModulePorts = 12, RuleListPortParams = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleListPortParams	gen_src/CompilerGrammarParser.h	/^    RuleMultiListModulePorts = 11, RuleListModulePorts = 12, RuleListPortParams = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleMultiListModulePorts	gen_src/CompilerGrammarParser.h	/^    RuleMultiListModulePorts = 11, RuleListModulePorts = 12, RuleListPortParams = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleNumExpr	gen_src/CompilerGrammarParser.h	/^    RuleExprBitInvert = 21, RuleExprNegate = 22, RuleExprLogNot = 23, RuleNumExpr = 24, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleOuterStatement	gen_src/CompilerGrammarParser.h	/^    RuleScopedOuterStatements = 8, RuleOuterStatement = 9, RuleListIdentNames = 10, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RulePortParam	gen_src/CompilerGrammarParser.h	/^    RulePortParam = 14, RuleExpr = 15, RuleExprLogical = 16, RuleExprCompare = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleProgram	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleScopedOuterStatements	gen_src/CompilerGrammarParser.h	/^    RuleScopedOuterStatements = 8, RuleOuterStatement = 9, RuleListIdentNames = 10, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleSlice	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleSubProgram	gen_src/CompilerGrammarParser.h	/^    RuleProgram = 0, RuleSubProgram = 1, RuleDeclModule = 2, RuleDeclStruct = 3, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
RuleTypeName	gen_src/CompilerGrammarParser.h	/^    RuleDeclVarList = 4, RuleDeclParameters = 5, RuleTypeName = 6, RuleSlice = 7, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0203	access:public
ScopedOuterStatementsContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ScopedOuterStatementsContext::ScopedOuterStatementsContext(ParserRuleCont/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	signature:(ParserRuleContext * parent,size_t invokingState)
ScopedOuterStatementsContext	gen_src/CompilerGrammarParser.h	/^    ScopedOuterStatementsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ScopedOuterStatementsContext	gen_src/CompilerGrammarParser.h	/^  class  ScopedOuterStatementsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
ScopedTableBase	scoped_table_base_class.hpp	/^	inline ScopedTableBase()$/;"	kind:f	class:frost_hdl::ScopedTableBase	access:public	signature:()
ScopedTableBase	scoped_table_base_class.hpp	/^class ScopedTableBase$/;"	kind:c	namespace:frost_hdl
ScopedTableNode	scoped_table_base_class.hpp	/^	inline ScopedTableNode(ScopedTableNode* s_parent=nullptr)$/;"	kind:f	class:frost_hdl::ScopedTableNode	access:public	signature:(ScopedTableNode * s_parent=nullptr)
ScopedTableNode	scoped_table_base_class.hpp	/^class ScopedTableNode$/;"	kind:c	namespace:frost_hdl
SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
SizeT2d	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<size_t> SizeT2d;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<size_t>
SizeTooBig	liborangepower_src/mpi_handler_class.hpp	/^		SizeTooBig,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
SliceContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext::SliceContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:CompilerGrammarParser::SliceContext	signature:(ParserRuleContext * parent,size_t invokingState)
SliceContext	gen_src/CompilerGrammarParser.h	/^    SliceContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::SliceContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
SliceContext	gen_src/CompilerGrammarParser.h	/^  class  SliceContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
SubProgramContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SubProgramContext::SubProgramContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
SubProgramContext	gen_src/CompilerGrammarParser.h	/^    SubProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
SubProgramContext	gen_src/CompilerGrammarParser.h	/^  class  SubProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
Symbol	symbol_class.hpp	/^	inline Symbol()$/;"	kind:f	class:frost_hdl::Symbol	access:public	signature:()
Symbol	symbol_class.hpp	/^	inline Symbol(Ident s_name, Ident s_type)$/;"	kind:f	class:frost_hdl::Symbol	access:public	signature:(Ident s_name,Ident s_type)
Symbol	symbol_class.hpp	/^	inline Symbol(Symbol&& to_move) = default;$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(Symbol && to_move)
Symbol	symbol_class.hpp	/^	inline Symbol(const Symbol& to_copy) = default;$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(const Symbol & to_copy)
Symbol	symbol_class.hpp	/^class Symbol$/;"	kind:c	namespace:frost_hdl
SymbolTable	symbol_table_class.cpp	/^SymbolTable::SymbolTable()$/;"	kind:f	class:frost_hdl::SymbolTable	signature:()
SymbolTable	symbol_table_class.hpp	/^	SymbolTable();$/;"	kind:p	class:frost_hdl::SymbolTable	access:public	signature:()
SymbolTable	symbol_table_class.hpp	/^class SymbolTable : public ScopedTableBase<Symbol>$/;"	kind:c	namespace:frost_hdl	inherits:ScopedTableBase<Symbol>
TokApostrophe	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokApostrophe	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokBinNum	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokBinNum	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::NumExprContext::TokBinNum() {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokBinNum	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokBinNum	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokBinNum();$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokBitInvert	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokBitInvert	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprBitInvertContext::TokBitInvert() {$/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:tree::TerminalNode *	signature:()
TokBitInvert	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokBitInvert	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokBitInvert();$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokBlockingAssign	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokBlockingAssign	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::PortParamContext::TokBlockingAssign() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:tree::TerminalNode *	signature:()
TokBlockingAssign	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokBlockingAssign	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokBlockingAssign();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokColon	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokColon	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::SliceContext::TokColon() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:tree::TerminalNode *	signature:()
TokColon	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokColon	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokColon();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokComma	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokComma	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::ListIdentNamesContext::TokComma() {$/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
TokComma	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::ListPortParamsContext::TokComma() {$/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
TokComma	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::MultiListModulePortsContext::TokComma()/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
TokComma	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListIdentNamesContext::TokComma(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
TokComma	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListPortParamsContext::TokComma(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
TokComma	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::MultiListModulePortsContext::TokComma(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
TokComma	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokComma	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokComma(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
TokComma	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokComma(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
TokComma	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokComma(size_t i);$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
TokComma	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokComma();$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
TokComma	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokComma();$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
TokComma	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokComma();$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
TokDecNum	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokDecNum	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::NumExprContext::TokDecNum() {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokDecNum	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokDecNum	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokDecNum();$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokExclamPoint	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokExclamPoint	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprLogNotContext::TokExclamPoint() {$/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:tree::TerminalNode *	signature:()
TokExclamPoint	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokExclamPoint	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokExclamPoint();$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokHexNum	gen_src/CompilerGrammarLexer.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokHexNum	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::NumExprContext::TokHexNum() {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokHexNum	gen_src/CompilerGrammarParser.h	/^    TokDecNum = 10, TokHexNum = 11, TokBinNum = 12, TokBlockingAssign = 13, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokHexNum	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokHexNum();$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokIdent	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokIdent	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::IdentNameContext::TokIdent() {$/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	typeref:typename:tree::TerminalNode *	signature:()
TokIdent	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::IdentSlicedContext::TokIdent() {$/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:tree::TerminalNode *	signature:()
TokIdent	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokIdent	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokIdent	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokKwAlwaysComb	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwAlwaysComb	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwAlwaysSeq	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwAlwaysSeq	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwAssign	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwAssign	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwCase	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwCase	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwDefault	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwDefault	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwDo	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwDo	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwDollarConcat	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwDollarConcat	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwDollarReplicate	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwDollarReplicate	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwElse	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwElse	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwEnum	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwEnum	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwFor	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwFor	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwFunction	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwFunction	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwIf	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwIf	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwInitial	gen_src/CompilerGrammarLexer.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwInitial	gen_src/CompilerGrammarParser.h	/^    TokKwAssign = 47, TokKwInitial = 48, TokKwAlwaysComb = 49, TokKwAlwaysSeq = 50, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwInput	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwInput	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListModulePortsContext::TokKwInput() {$/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:tree::TerminalNode *	signature:()
TokKwInput	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwInput	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwInput();$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokKwInterface	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwInterface	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwLocalparam	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwLocalparam	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwLogic	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwLogic	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::TypeNameContext::TokKwLogic() {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:tree::TerminalNode *	signature:()
TokKwLogic	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwLogic	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwLogic();$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokKwModule	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwModule	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclModuleContext::TokKwModule() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:tree::TerminalNode *	signature:()
TokKwModule	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwModule	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwModule();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokKwNegedge	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwNegedge	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwOutput	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwOutput	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ListModulePortsContext::TokKwOutput() {$/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:tree::TerminalNode *	signature:()
TokKwOutput	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwOutput	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwOutput();$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokKwPackage	gen_src/CompilerGrammarLexer.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwPackage	gen_src/CompilerGrammarParser.h	/^    TokKwFunction = 43, TokKwPackage = 44, TokKwDollarConcat = 45, TokKwDollarReplicate = 46, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwParameter	gen_src/CompilerGrammarLexer.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwParameter	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::PortParamContext::TokKwParameter() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:tree::TerminalNode *	signature:()
TokKwParameter	gen_src/CompilerGrammarParser.h	/^    TokKwParameter = 31, TokKwLocalparam = 32, TokKwInput = 33, TokKwOutput = 34, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwParameter	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwParameter();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokKwPosedge	gen_src/CompilerGrammarLexer.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwPosedge	gen_src/CompilerGrammarParser.h	/^    TokKwPosedge = 51, TokKwNegedge = 52, TokKwIf = 53, TokKwElse = 54, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwPrivate	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwPrivate	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwPublic	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwPublic	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwStruct	gen_src/CompilerGrammarLexer.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwStruct	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokKwStruct() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:()
TokKwStruct	gen_src/CompilerGrammarParser.h	/^    TokKwLogic = 35, TokKwInterface = 36, TokKwStruct = 37, TokKwPublic = 38, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwStruct	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokKwStruct();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokKwSwitch	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwSwitch	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwSwitchx	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwSwitchx	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwSwitchz	gen_src/CompilerGrammarLexer.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwSwitchz	gen_src/CompilerGrammarParser.h	/^    TokKwSwitchz = 60, TokKwCase = 61, TokKwDefault = 62, TokIdent = 63, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwTask	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwTask	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwUnion	gen_src/CompilerGrammarLexer.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwUnion	gen_src/CompilerGrammarParser.h	/^    TokKwPrivate = 39, TokKwEnum = 40, TokKwUnion = 41, TokKwTask = 42, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokKwWhile	gen_src/CompilerGrammarLexer.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokKwWhile	gen_src/CompilerGrammarParser.h	/^    TokKwFor = 55, TokKwWhile = 56, TokKwDo = 57, TokKwSwitch = 58, TokKwSwitchx = 59, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokLBrace	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokLBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokLBrace() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:()
TokLBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ScopedOuterStatementsContext::TokLBrace() {$/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:tree::TerminalNode *	signature:()
TokLBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::SliceContext::TokLBrace() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:tree::TerminalNode *	signature:()
TokLBrace	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokLBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLBrace();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokLBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLBrace();$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokLBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLBrace();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokLBracket	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokLBracket	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokLParen	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokLParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclModuleContext::TokLParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:tree::TerminalNode *	signature:()
TokLParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclParametersContext::TokLParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:tree::TerminalNode *	signature:()
TokLParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprMulDivModEtcContext::TokLParen() {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
TokLParen	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokLParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLParen();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokLParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLParen();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokLParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokLParen();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokMinus	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokMinus	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprCompareContext::TokMinus() {$/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
TokMinus	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprNegateContext::TokMinus() {$/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:tree::TerminalNode *	signature:()
TokMinus	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokMinus	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokMinus();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokMinus	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokMinus();$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokNonBlockingAssign	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokNonBlockingAssign	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokNumber	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokNumber	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclParametersContext::TokNumber() {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:tree::TerminalNode *	signature:()
TokNumber	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokNumber	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokNumber();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpBitwise	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokOpBitwise	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprAddSubContext::TokOpBitwise() {$/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpBitwise	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokOpBitwise	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpBitwise();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpCompare	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokOpCompare	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprLogicalContext::TokOpCompare() {$/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpCompare	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokOpCompare	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpCompare();$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpLogical	gen_src/CompilerGrammarLexer.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokOpLogical	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprContext::TokOpLogical() {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpLogical	gen_src/CompilerGrammarParser.h	/^    LexWhitespace = 1, LexLineComment = 2, TokOpLogical = 3, TokOpCompare = 4, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokOpLogical	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpLogical();$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpMulDivMod	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokOpMulDivMod	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprAddSubContext::TokOpMulDivMod() {$/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpMulDivMod	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokOpMulDivMod	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpMulDivMod();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOther	gen_src/CompilerGrammarLexer.h	/^    TokOther = 64$/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokOther	gen_src/CompilerGrammarParser.h	/^    TokOther = 64$/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokPeriod	gen_src/CompilerGrammarLexer.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokPeriod	gen_src/CompilerGrammarParser.h	/^    TokNonBlockingAssign = 14, TokPeriod = 15, TokComma = 16, TokColon = 17, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokPlus	gen_src/CompilerGrammarLexer.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokPlus	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprCompareContext::TokPlus() {$/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
TokPlus	gen_src/CompilerGrammarParser.h	/^    TokPlus = 5, TokMinus = 6, TokOpMulDivMod = 7, TokOpBitwise = 8, TokBitInvert = 9, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokPlus	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokPlus();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokQuote	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokQuote	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokRBrace	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokRBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokRBrace() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:()
TokRBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ScopedOuterStatementsContext::TokRBrace() {$/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:tree::TerminalNode *	signature:()
TokRBrace	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::SliceContext::TokRBrace() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:tree::TerminalNode *	signature:()
TokRBrace	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokRBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRBrace();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokRBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRBrace();$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokRBrace	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRBrace();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokRBracket	gen_src/CompilerGrammarLexer.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokRBracket	gen_src/CompilerGrammarParser.h	/^    TokRBracket = 26, TokLBrace = 27, TokRBrace = 28, TokNumber = 29, TokKwModule = 30, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokRParen	gen_src/CompilerGrammarLexer.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokRParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclModuleContext::TokRParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:tree::TerminalNode *	signature:()
TokRParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclParametersContext::TokRParen() {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:tree::TerminalNode *	signature:()
TokRParen	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::ExprMulDivModEtcContext::TokRParen() {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
TokRParen	gen_src/CompilerGrammarParser.h	/^    TokExclamPoint = 22, TokLParen = 23, TokRParen = 24, TokLBracket = 25, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokRParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRParen();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokRParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRParen();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokRParen	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokRParen();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokScope	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokScope	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokSemicolon	gen_src/CompilerGrammarLexer.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarLexer::__anonea39696d0103	access:public
TokSemicolon	gen_src/CompilerGrammarParser.cpp	/^std::vector<tree::TerminalNode *> CompilerGrammarParser::DeclStructContext::TokSemicolon() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
TokSemicolon	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::DeclStructContext::TokSemicolon(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
TokSemicolon	gen_src/CompilerGrammarParser.cpp	/^tree::TerminalNode* CompilerGrammarParser::OuterStatementContext::TokSemicolon() {$/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:tree::TerminalNode *	signature:()
TokSemicolon	gen_src/CompilerGrammarParser.h	/^    TokScope = 18, TokApostrophe = 19, TokQuote = 20, TokSemicolon = 21, $/;"	kind:e	enum:CompilerGrammarParser::__anona17d541a0103	access:public
TokSemicolon	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode *TokSemicolon();$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokSemicolon	gen_src/CompilerGrammarParser.h	/^    antlr4::tree::TerminalNode* TokSemicolon(size_t i);$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
TokSemicolon	gen_src/CompilerGrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokSemicolon();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
TooFewProcs	liborangepower_src/mpi_handler_class.hpp	/^		TooFewProcs,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
Type	expr_chunk_class.hpp	/^	enum class Type : bool$/;"	kind:g	class:frost_hdl::ExprChunk	typeref:typename:bool	access:public
TypeNameContext	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::TypeNameContext::TypeNameContext(ParserRuleContext *parent, size_t invoki/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
TypeNameContext	gen_src/CompilerGrammarParser.h	/^    TypeNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
TypeNameContext	gen_src/CompilerGrammarParser.h	/^  class  TypeNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:CompilerGrammarParser	inherits:antlr4::ParserRuleContext	access:public
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2() : x(Type()), y(Type())$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:()
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(Vec2<OtherType> && to_move)
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Type1& s_x, const Type2& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type1 & s_x,const Type2 & s_y)
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Vec2<OtherType> & to_copy)
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<double>$/;"	kind:c	namespace:liborangepower::containers
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<float>$/;"	kind:c	namespace:liborangepower::containers
Vec2S16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s16> Vec2S16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s16>
Vec2S32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s32> Vec2S32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s32>
Vec2S64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s64> Vec2S64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s64>
Vec2U16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u16> Vec2U16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u16>
Vec2U32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u32> Vec2U32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u32>
Vec2U64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u64> Vec2U64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u64>
Vec2_dbl	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<double> Vec2_dbl;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<double>
Vec2_flt	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<float> Vec2_flt;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<float>
VisitorRetType	compiler_class.hpp	/^	typedef antlrcpp::Any VisitorRetType;$/;"	kind:t	class:frost_hdl::Compiler	typeref:typename:antlrcpp::Any	access:public
WIDTH2MP	liborangepower_src/misc_defines.hpp	/^#define WIDTH2MP(/;"	kind:d	signature:(some_width)
Wire	symbol_class.hpp	/^		Wire,$/;"	kind:e	enum:frost_hdl::Symbol::CompiledType	access:public
_ALIGN2	liborangepower_src/misc_defines.hpp	/^#define _ALIGN2 /;"	kind:d
_ALIGN4	liborangepower_src/misc_defines.hpp	/^#define _ALIGN4 /;"	kind:d
__anona17d541a0103	gen_src/CompilerGrammarParser.h	/^  enum {$/;"	kind:g	class:CompilerGrammarParser	access:public
__anona17d541a0203	gen_src/CompilerGrammarParser.h	/^  enum {$/;"	kind:g	class:CompilerGrammarParser	access:public
__anone389622d0102	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::parse_json	typeref:typename:bool	file:	signature:(Json::CharReaderBuilder& actual_rbuilder)
__anone389622d0202	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::write_json	file:	signature:(Json::StreamWriterBuilder& some_wbuilder)
__anone389622d0302	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0402	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0502	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0602	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anonea39696d0103	gen_src/CompilerGrammarLexer.h	/^  enum {$/;"	kind:g	class:CompilerGrammarLexer	access:public
__anonf622bc350102	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::program	file:
__anonf622bc350202	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::subProgram	file:
__anonf622bc350302	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::declModule	file:
__anonf622bc350402	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::declStruct	file:
__anonf622bc350502	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::declVarList	file:
__anonf622bc350602	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::declParameters	file:
__anonf622bc350702	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::typeName	file:
__anonf622bc350802	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::slice	file:
__anonf622bc350902	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::scopedOuterStatements	file:
__anonf622bc350a02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::outerStatement	file:
__anonf622bc350b02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::listIdentNames	file:
__anonf622bc350c02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::multiListModulePorts	file:
__anonf622bc350d02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::listModulePorts	file:
__anonf622bc350e02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::listPortParams	file:
__anonf622bc350f02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::portParam	file:
__anonf622bc351002	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::expr	file:
__anonf622bc351102	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprLogical	file:
__anonf622bc351202	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprCompare	file:
__anonf622bc351302	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprAddSub	file:
__anonf622bc351402	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprMulDivModEtc	file:
__anonf622bc351502	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprUnary	file:
__anonf622bc351602	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprBitInvert	file:
__anonf622bc351702	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprNegate	file:
__anonf622bc351802	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::exprLogNot	file:
__anonf622bc351902	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::numExpr	file:
__anonf622bc351a02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::identExpr	file:
__anonf622bc351b02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::identName	file:
__anonf622bc351c02	gen_src/CompilerGrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:CompilerGrammarParser::identSliced	file:
__argc_ptr	liborangepower_src/mpi_handler_class.hpp	/^	int* __argc_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int *	access:protected
__argv_ptr	liborangepower_src/mpi_handler_class.hpp	/^	char*** __argv_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:char ***	access:protected
__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
__arr_dim	symbol_class.hpp	/^	std::vector<size_t> __arr_dim;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:std::vector<size_t>	access:private
__compiled_type	symbol_class.hpp	/^	CompiledType __compiled_type = CompiledType::Reg;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:CompiledType	access:private
__curr_scope_node	compiler_class.hpp	/^	ScopedTableNode<Symbol>* __curr_scope_node = nullptr;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:ScopedTableNode<Symbol> *	access:private
__data_pool	scoped_table_base_class.hpp	/^	std::vector<Type*> __data_pool;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:std::vector<Type * >	access:protected
__expr_chunk_stack	compiler_class.hpp	/^	std::stack<ExprChunk> __expr_chunk_stack;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:std::stack<ExprChunk>	access:private
__expr_num	symbol_class.hpp	/^	ExprNum* __expr_num = nullptr;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:ExprNum *	access:private
__expr_num_pool	allocation_stuff.cpp	/^	static std::map<ExprNum, std::unique_ptr<ExprNum>> __expr_num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprNum,std::unique_ptr<ExprNum>>	file:	access:private
__expr_num_pool	allocation_stuff.cpp	/^std::map<ExprNum, std::unique_ptr<ExprNum>> DupStuff::__expr_num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprNum,std::unique_ptr<ExprNum>>
__expr_symbol_ref_pool	allocation_stuff.cpp	/^		__expr_symbol_ref_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprSymbolRef,std::unique_ptr<ExprSymbolRef>>	file:	access:private
__expr_symbol_ref_pool	allocation_stuff.cpp	/^	DupStuff::__expr_symbol_ref_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprSymbolRef,std::unique_ptr<ExprSymbolRef>>
__has_been_found	symbol_class.hpp	/^	bool __has_been_found = false;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:bool	access:private
__indexing	expr_symbol_ref_class.hpp	/^	std::vector<ExprChunk> __indexing;$/;"	kind:m	class:frost_hdl::ExprSymbolRef	typeref:typename:std::vector<ExprChunk>	access:private
__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
__inner_func_get_all_children_tables	scoped_table_base_class.hpp	/^	void __inner_func_get_all_children_tables$/;"	kind:f	class:frost_hdl::ScopedTableNode	typeref:typename:void	access:protected	signature:(std::vector<std::map<Ident,Type * > * > & ret) const
__instance	liborangepower_src/time_stuff.hpp	/^	InstanceType __instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
__min_world_size	liborangepower_src/mpi_handler_class.hpp	/^	size_t __num_threads_per_proc, __min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
__name	symbol_class.hpp	/^	Ident __name = nullptr;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:Ident	access:private
__node_pool	scoped_table_base_class.hpp	/^	std::vector<Node*> __node_pool;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:std::vector<Node * >	access:protected
__num_pool	allocation_stuff.cpp	/^	static std::map<BigNum, std::unique_ptr<BigNum>> __num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<BigNum,std::unique_ptr<BigNum>>	file:	access:private
__num_pool	allocation_stuff.cpp	/^std::map<BigNum, std::unique_ptr<BigNum>> DupStuff::__num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<BigNum,std::unique_ptr<BigNum>>
__num_threads_per_proc	liborangepower_src/mpi_handler_class.hpp	/^	size_t __num_threads_per_proc, __min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
__param_0	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
__param_1	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
__pass	compiler_class.hpp	/^	int __pass;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:int	access:private
__program_ctx	compiler_class.hpp	/^	Parser::ProgramContext* __program_ctx;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:Parser::ProgramContext *	access:private
__scope_child_num_stack	compiler_class.hpp	/^	std::stack<s64> __scope_child_num_stack;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:std::stack<s64>	access:private
__scope_num	scoped_table_base_class.hpp	/^	s64 __scope_num = -1;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:s64	access:protected
__size	expr_num_class.hpp	/^	size_t __size = 0;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:size_t	access:private
__size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t __size = __size_2d.x * __size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t __size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
__size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> __size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
__str_pool	allocation_stuff.cpp	/^	static std::map<std::string, std::unique_ptr<std::string>> __str_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>	file:	access:private
__str_pool	allocation_stuff.cpp	/^std::map<std::string, std::unique_ptr<std::string>> DupStuff::__str_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>
__str_stack	compiler_class.hpp	/^	std::stack<std::string*> __str_stack;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:std::stack<std::string * >	access:private
__sym_tbl	compiler_class.hpp	/^	SymbolTable __sym_tbl;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:SymbolTable	access:private
__symbol	expr_symbol_ref_class.hpp	/^	Symbol* __symbol = nullptr;$/;"	kind:m	class:frost_hdl::ExprSymbolRef	typeref:typename:Symbol *	access:private
__table	ident_table_classes.hpp	/^	std::map<Ident, Type*> __table;$/;"	kind:m	class:frost_hdl::IdentToPointerTable	typeref:typename:std::map<Ident,Type * >	access:private
__table	ident_table_classes.hpp	/^	std::map<Ident, Type> __table;$/;"	kind:m	class:frost_hdl::IdentTable	typeref:typename:std::map<Ident,Type>	access:private
__tree	scoped_table_base_class.hpp	/^	Node __tree;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:Node	access:protected
__type	expr_chunk_class.hpp	/^	Type __type = Type::ExprSymbolRef;$/;"	kind:m	class:frost_hdl::ExprChunk	typeref:typename:Type	access:private
__type	symbol_class.hpp	/^	Ident __type = nullptr;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:Ident	access:private
__val	expr_chunk_class.hpp	/^	std::variant<ExprSymbolRef*, ExprNum*> __val;$/;"	kind:m	class:frost_hdl::ExprChunk	typeref:typename:std::variant<ExprSymbolRef *,ExprNum * >	access:private
__val	expr_num_class.hpp	/^	BigNum* __val = nullptr;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:BigNum *	access:private
__world_rank	liborangepower_src/mpi_handler_class.hpp	/^	int __world_rank, __world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
__world_size	liborangepower_src/mpi_handler_class.hpp	/^	int __world_rank, __world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
_atn	gen_src/CompilerGrammarLexer.cpp	/^atn::ATN CompilerGrammarLexer::_atn;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:atn::ATN
_atn	gen_src/CompilerGrammarLexer.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:antlr4::atn::ATN	access:private
_atn	gen_src/CompilerGrammarParser.cpp	/^atn::ATN CompilerGrammarParser::_atn;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:atn::ATN
_atn	gen_src/CompilerGrammarParser.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:antlr4::atn::ATN	access:private
_channelNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_channelNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
_channelNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _channelNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
_decisionToDFA	gen_src/CompilerGrammarLexer.cpp	/^std::vector<dfa::DFA> CompilerGrammarLexer::_decisionToDFA;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<dfa::DFA>
_decisionToDFA	gen_src/CompilerGrammarLexer.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
_decisionToDFA	gen_src/CompilerGrammarParser.cpp	/^std::vector<dfa::DFA> CompilerGrammarParser::_decisionToDFA;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<dfa::DFA>
_decisionToDFA	gen_src/CompilerGrammarParser.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
_init	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::Initializer CompilerGrammarLexer::_init;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:CompilerGrammarLexer::Initializer
_init	gen_src/CompilerGrammarLexer.h	/^  static Initializer _init;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:Initializer	access:private
_init	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::Initializer CompilerGrammarParser::_init;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::Initializer
_init	gen_src/CompilerGrammarParser.h	/^  static Initializer _init;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:Initializer	access:private
_literalNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_literalNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
_literalNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
_literalNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_literalNames = {$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
_literalNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
_modeNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_modeNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
_modeNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _modeNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
_ruleNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_ruleNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
_ruleNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
_ruleNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_ruleNames = {$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
_ruleNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
_serializedATN	gen_src/CompilerGrammarLexer.cpp	/^std::vector<uint16_t> CompilerGrammarLexer::_serializedATN;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<uint16_t>
_serializedATN	gen_src/CompilerGrammarLexer.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<uint16_t>	access:private
_serializedATN	gen_src/CompilerGrammarParser.cpp	/^std::vector<uint16_t> CompilerGrammarParser::_serializedATN;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<uint16_t>
_serializedATN	gen_src/CompilerGrammarParser.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<uint16_t>	access:private
_sharedContextCache	gen_src/CompilerGrammarLexer.cpp	/^atn::PredictionContextCache CompilerGrammarLexer::_sharedContextCache;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:atn::PredictionContextCache
_sharedContextCache	gen_src/CompilerGrammarLexer.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:antlr4::atn::PredictionContextCache	access:private
_sharedContextCache	gen_src/CompilerGrammarParser.cpp	/^atn::PredictionContextCache CompilerGrammarParser::_sharedContextCache;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:atn::PredictionContextCache
_sharedContextCache	gen_src/CompilerGrammarParser.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:antlr4::atn::PredictionContextCache	access:private
_symbolicNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_symbolicNames = {$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
_symbolicNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
_symbolicNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_symbolicNames = {$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
_symbolicNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
_tokenNames	gen_src/CompilerGrammarLexer.cpp	/^std::vector<std::string> CompilerGrammarLexer::_tokenNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>
_tokenNames	gen_src/CompilerGrammarLexer.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:std::vector<std::string>	access:private
_tokenNames	gen_src/CompilerGrammarParser.cpp	/^std::vector<std::string> CompilerGrammarParser::_tokenNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>
_tokenNames	gen_src/CompilerGrammarParser.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:std::vector<std::string>	access:private
_vocabulary	gen_src/CompilerGrammarLexer.cpp	/^dfa::Vocabulary CompilerGrammarLexer::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
_vocabulary	gen_src/CompilerGrammarLexer.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:CompilerGrammarLexer	typeref:typename:antlr4::dfa::Vocabulary	access:private
_vocabulary	gen_src/CompilerGrammarParser.cpp	/^dfa::Vocabulary CompilerGrammarParser::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
_vocabulary	gen_src/CompilerGrammarParser.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:CompilerGrammarParser	typeref:typename:antlr4::dfa::Vocabulary	access:private
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclModuleContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclParametersContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclStructContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::DeclVarListContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprAddSubContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprBitInvertContext::accept(tree::ParseTreeVisitor *visito/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprCompareContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprLogNotContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprLogicalContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprMulDivModEtcContext::accept(tree::ParseTreeVisitor *vis/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprNegateContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ExprUnaryContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::IdentExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::IdentNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::IdentSlicedContext::accept(tree::ParseTreeVisitor *visitor)/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ListIdentNamesContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ListModulePortsContext::accept(tree::ParseTreeVisitor *visi/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ListPortParamsContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::MultiListModulePortsContext::accept(tree::ParseTreeVisitor /;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::NumExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::OuterStatementContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::PortParamContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ProgramContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::ScopedOuterStatementsContext::accept(tree::ParseTreeVisitor/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::SliceContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::SubProgramContext::accept(tree::ParseTreeVisitor *visitor) /;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.cpp	/^antlrcpp::Any CompilerGrammarParser::TypeNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/CompilerGrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
any_contained_pointer	expr_chunk_class.hpp	/^	inline void* any_contained_pointer() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:void *	access:private	signature:() const
any_expr_num	expr_chunk_class.hpp	/^	inline ExprNum* any_expr_num() const;$/;"	kind:p	class:frost_hdl::ExprChunk	typeref:typename:ExprNum *	access:public	signature:() const
any_expr_num	expr_chunk_class.hpp	/^inline ExprNum* ExprChunk::any_expr_num() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:ExprNum *	signature:() const
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val)
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val, const SecondType& next, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val,const SecondType & next,RemArgTypes &&...rem_args)
append_child	scoped_table_base_class.hpp	/^	inline void append_child(ScopedTableNode* to_append)$/;"	kind:f	class:frost_hdl::ScopedTableNode	typeref:typename:void	access:public	signature:(ScopedTableNode * to_append)
argc	liborangepower_src/mpi_handler_class.hpp	/^	inline int argc() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:() const
argv	liborangepower_src/mpi_handler_class.hpp	/^	inline char** argv() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:char **	access:public	signature:() const
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
at	ident_table_classes.hpp	/^	inline Type& at(Ident some_name)$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:Type &	access:public	signature:(Ident some_name)
at	ident_table_classes.hpp	/^	inline auto& at(Ident some_name)$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:auto &	access:public	signature:(Ident some_name)
at	ident_table_classes.hpp	/^	inline const Type& at(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:const Type &	access:public	signature:(Ident some_name) const
at	ident_table_classes.hpp	/^	inline const auto& at(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:const auto &	access:public	signature:(Ident some_name) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
back_up	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(const type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const type & n_curr)
back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(type && n_curr)
bignum	liborangepower_src/gmp_stuff.cpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower	file:
bignum	liborangepower_src/gmp_stuff.hpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower
bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(const Type& to_check, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(const Type & to_check,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(size_t bit_pos_range_hi,size_t bit_pos_range_lo)
builtin_scope_level	scoped_table_base_class.hpp	/^	static constexpr s64 builtin_scope_level = 0;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:s64	access:public
children	scoped_table_base_class.hpp	/^	std::vector<ScopedTableNode*> children;$/;"	kind:m	class:frost_hdl::ScopedTableNode	typeref:typename:std::vector<ScopedTableNode * >	access:public
clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
clear_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits_with_range(Type& to_clear, size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/prev_curr_pair_class.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
contains	ident_table_classes.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
contains	ident_table_classes.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
convert_bignum_to_str	liborangepower_src/gmp_stuff.hpp	/^inline std::string convert_bignum_to_str(const BigNum& in_bignum)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:std::string	signature:(const BigNum & in_bignum)
convert_str_to	liborangepower_src/string_conversion_stuff.hpp	/^inline Type convert_str_to(const std::string& to_convert)$/;"	kind:f	namespace:liborangepower::strings	typeref:typename:Type	signature:(const std::string & to_convert)
count_leading_zeros	liborangepower_src/misc_bitwise_funcs.hpp	/^size_t count_leading_zeros(Type x)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(Type x)
cstm_expr_numdup	allocation_stuff.cpp	/^	friend ExprNum* cstm_expr_numdup(const ExprNum& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:ExprNum *	file:	access:private	signature:(const ExprNum & to_dup)
cstm_expr_numdup	allocation_stuff.cpp	/^ExprNum* cstm_expr_numdup(const ExprNum& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:ExprNum *	signature:(const ExprNum & to_dup)
cstm_expr_numdup	allocation_stuff.hpp	/^ExprNum* cstm_expr_numdup(const ExprNum& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:ExprNum *	signature:(const ExprNum & to_dup)
cstm_expr_symbol_refdup	allocation_stuff.cpp	/^	friend ExprSymbolRef* cstm_expr_symbol_refdup(const ExprSymbolRef& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:ExprSymbolRef *	file:	access:private	signature:(const ExprSymbolRef & to_dup)
cstm_expr_symbol_refdup	allocation_stuff.cpp	/^ExprSymbolRef* cstm_expr_symbol_refdup(const ExprSymbolRef& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:ExprSymbolRef *	signature:(const ExprSymbolRef & to_dup)
cstm_expr_symbol_refdup	allocation_stuff.hpp	/^ExprSymbolRef* cstm_expr_symbol_refdup(const ExprSymbolRef& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:ExprSymbolRef *	signature:(const ExprSymbolRef & to_dup)
cstm_numdup	allocation_stuff.cpp	/^	friend BigNum* cstm_numdup(const BigNum& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:BigNum *	file:	access:private	signature:(const BigNum & to_dup)
cstm_numdup	allocation_stuff.cpp	/^BigNum* cstm_numdup(const BigNum& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:BigNum *	signature:(const BigNum & to_dup)
cstm_numdup	allocation_stuff.hpp	/^BigNum* cstm_numdup(const BigNum& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:BigNum *	signature:(const BigNum & to_dup)
cstm_strdup	allocation_stuff.cpp	/^	friend std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:std::string *	file:	access:private	signature:(const std::string & to_dup)
cstm_strdup	allocation_stuff.cpp	/^std::string* cstm_strdup(const std::string& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:std::string *	signature:(const std::string & to_dup)
cstm_strdup	allocation_stuff.hpp	/^std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:std::string *	signature:(const std::string & to_dup)
curr	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
custom_abs	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> custom_abs(const Vec2<Type>& val)$/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Vec2<Type> & val)
debug_print_json	liborangepower_src/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
declModule	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclModuleContext* CompilerGrammarParser::SubProgramContext::declModule()/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:CompilerGrammarParser::DeclModuleContext *	signature:()
declModule	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclModuleContext* CompilerGrammarParser::declModule() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclModuleContext *	signature:()
declModule	gen_src/CompilerGrammarParser.h	/^    DeclModuleContext *declModule();$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:DeclModuleContext *	access:public	signature:()
declModule	gen_src/CompilerGrammarParser.h	/^  DeclModuleContext* declModule();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclModuleContext *	access:public	signature:()
declParameters	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclParametersContext* CompilerGrammarParser::declParameters() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclParametersContext *	signature:()
declParameters	gen_src/CompilerGrammarParser.h	/^  DeclParametersContext* declParameters();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclParametersContext *	access:public	signature:()
declStruct	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext* CompilerGrammarParser::OuterStatementContext::declStru/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:CompilerGrammarParser::DeclStructContext *	signature:()
declStruct	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext* CompilerGrammarParser::SubProgramContext::declStruct()/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:CompilerGrammarParser::DeclStructContext *	signature:()
declStruct	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclStructContext* CompilerGrammarParser::declStruct() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclStructContext *	signature:()
declStruct	gen_src/CompilerGrammarParser.h	/^    DeclStructContext *declStruct();$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:DeclStructContext *	access:public	signature:()
declStruct	gen_src/CompilerGrammarParser.h	/^    DeclStructContext *declStruct();$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:DeclStructContext *	access:public	signature:()
declStruct	gen_src/CompilerGrammarParser.h	/^  DeclStructContext* declStruct();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclStructContext *	access:public	signature:()
declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::DeclStructContext::declVarList/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:(size_t i)
declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::ListModulePortsContext::declVa/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:()
declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::OuterStatementContext::declVar/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:()
declVarList	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::DeclVarListContext* CompilerGrammarParser::declVarList() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::DeclVarListContext *	signature:()
declVarList	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::DeclVarListContext *> CompilerGrammarParser::DeclStructContex/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<CompilerGrammarParser::DeclVarListContext * >	signature:()
declVarList	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext *declVarList();$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:DeclVarListContext *	access:public	signature:()
declVarList	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext *declVarList();$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:DeclVarListContext *	access:public	signature:()
declVarList	gen_src/CompilerGrammarParser.h	/^    DeclVarListContext* declVarList(size_t i);$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:DeclVarListContext *	access:public	signature:(size_t i)
declVarList	gen_src/CompilerGrammarParser.h	/^    std::vector<DeclVarListContext *> declVarList();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:std::vector<DeclVarListContext * >	access:public	signature:()
declVarList	gen_src/CompilerGrammarParser.h	/^  DeclVarListContext* declVarList();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:DeclVarListContext *	access:public	signature:()
dot_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type dot_prod(const Vec2<OtherType>& to_dot) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_dot) const
end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
err	compiler_class.hpp	/^	inline void err(antlr4::ParserRuleContext* ctx, $/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(antlr4::ParserRuleContext * ctx,const std::string & msg)
err	compiler_class.hpp	/^	inline void err(const std::string& msg)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(const std::string & msg)
err	liborangepower_src/json_stuff.hpp	/^void err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(arg_types &&...args)
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprBitInvertContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprLogNotContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprMulDivModEtcContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::ExprNegateContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::PortParamContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::SliceContext::expr(size_t i) {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:CompilerGrammarParser::ExprContext *	signature:(size_t i)
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::expr() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprContext *	signature:()
expr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprContext* CompilerGrammarParser::expr(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprContext *	signature:(int precedence)
expr	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::ExprContext *> CompilerGrammarParser::SliceContext::expr() {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:std::vector<CompilerGrammarParser::ExprContext * >	signature:()
expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^    ExprContext* expr(size_t i);$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:ExprContext *	access:public	signature:(size_t i)
expr	gen_src/CompilerGrammarParser.h	/^    std::vector<ExprContext *> expr();$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:std::vector<ExprContext * >	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^  ExprContext* expr();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/CompilerGrammarParser.h	/^  ExprContext* expr(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprContext *	access:public	signature:(int precedence)
exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::ExprAddSubContext::exprAddSub()/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::ExprCompareContext::exprAddSub(/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::exprAddSub() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprAddSubContext* CompilerGrammarParser::exprAddSub(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprAddSubContext *	signature:(int precedence)
exprAddSub	gen_src/CompilerGrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/CompilerGrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/CompilerGrammarParser.h	/^  ExprAddSubContext* exprAddSub();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/CompilerGrammarParser.h	/^  ExprAddSubContext* exprAddSub(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:(int precedence)
exprAddSubSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateInde/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
exprAddSubSempred	gen_src/CompilerGrammarParser.h	/^  bool exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
exprBitInvert	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprBitInvertContext* CompilerGrammarParser::ExprUnaryContext::exprBitInv/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:CompilerGrammarParser::ExprBitInvertContext *	signature:()
exprBitInvert	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprBitInvertContext* CompilerGrammarParser::exprBitInvert() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprBitInvertContext *	signature:()
exprBitInvert	gen_src/CompilerGrammarParser.h	/^    ExprBitInvertContext *exprBitInvert();$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:ExprBitInvertContext *	access:public	signature:()
exprBitInvert	gen_src/CompilerGrammarParser.h	/^  ExprBitInvertContext* exprBitInvert();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprBitInvertContext *	access:public	signature:()
exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::ExprCompareContext::exprCompar/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::ExprLogicalContext::exprCompar/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::exprCompare() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprCompareContext* CompilerGrammarParser::exprCompare(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprCompareContext *	signature:(int precedence)
exprCompare	gen_src/CompilerGrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/CompilerGrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/CompilerGrammarParser.h	/^  ExprCompareContext* exprCompare();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/CompilerGrammarParser.h	/^  ExprCompareContext* exprCompare(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:(int precedence)
exprCompareSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIn/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
exprCompareSempred	gen_src/CompilerGrammarParser.h	/^  bool exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
exprLogNot	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogNotContext* CompilerGrammarParser::ExprUnaryContext::exprLogNot() /;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:CompilerGrammarParser::ExprLogNotContext *	signature:()
exprLogNot	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogNotContext* CompilerGrammarParser::exprLogNot() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprLogNotContext *	signature:()
exprLogNot	gen_src/CompilerGrammarParser.h	/^    ExprLogNotContext *exprLogNot();$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:ExprLogNotContext *	access:public	signature:()
exprLogNot	gen_src/CompilerGrammarParser.h	/^  ExprLogNotContext* exprLogNot();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprLogNotContext *	access:public	signature:()
exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::ExprContext::exprLogical() {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::ExprLogicalContext::exprLogica/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::exprLogical() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprLogicalContext* CompilerGrammarParser::exprLogical(int precedence) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprLogicalContext *	signature:(int precedence)
exprLogical	gen_src/CompilerGrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/CompilerGrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/CompilerGrammarParser.h	/^  ExprLogicalContext* exprLogical();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/CompilerGrammarParser.h	/^  ExprLogicalContext* exprLogical(int precedence);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:(int precedence)
exprLogicalSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIn/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
exprLogicalSempred	gen_src/CompilerGrammarParser.h	/^  bool exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
exprMulDivModEtc	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprMulDivModEtcContext* CompilerGrammarParser::ExprAddSubContext::exprMu/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:CompilerGrammarParser::ExprMulDivModEtcContext *	signature:()
exprMulDivModEtc	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprMulDivModEtcContext* CompilerGrammarParser::exprMulDivModEtc() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprMulDivModEtcContext *	signature:()
exprMulDivModEtc	gen_src/CompilerGrammarParser.h	/^    ExprMulDivModEtcContext *exprMulDivModEtc();$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
exprMulDivModEtc	gen_src/CompilerGrammarParser.h	/^  ExprMulDivModEtcContext* exprMulDivModEtc();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
exprNegate	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprNegateContext* CompilerGrammarParser::ExprUnaryContext::exprNegate() /;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:CompilerGrammarParser::ExprNegateContext *	signature:()
exprNegate	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprNegateContext* CompilerGrammarParser::exprNegate() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprNegateContext *	signature:()
exprNegate	gen_src/CompilerGrammarParser.h	/^    ExprNegateContext *exprNegate();$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:ExprNegateContext *	access:public	signature:()
exprNegate	gen_src/CompilerGrammarParser.h	/^  ExprNegateContext* exprNegate();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprNegateContext *	access:public	signature:()
exprSempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::exprSempred(ExprContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(ExprContext * _localctx,size_t predicateIndex)
exprSempred	gen_src/CompilerGrammarParser.h	/^  bool exprSempred(ExprContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(ExprContext * _localctx,size_t predicateIndex)
exprUnary	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprUnaryContext* CompilerGrammarParser::ExprMulDivModEtcContext::exprUna/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::ExprUnaryContext *	signature:()
exprUnary	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ExprUnaryContext* CompilerGrammarParser::exprUnary() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ExprUnaryContext *	signature:()
exprUnary	gen_src/CompilerGrammarParser.h	/^    ExprUnaryContext *exprUnary();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprUnaryContext *	access:public	signature:()
exprUnary	gen_src/CompilerGrammarParser.h	/^  ExprUnaryContext* exprUnary();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ExprUnaryContext *	access:public	signature:()
expr_num	expr_chunk_class.hpp	/^	inline ExprNum* expr_num() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:ExprNum *	access:public	signature:() const
expr_symbol_ref	expr_chunk_class.hpp	/^	inline ExprSymbolRef* expr_symbol_ref() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:ExprSymbolRef *	access:public	signature:() const
find	scoped_table_base_class.hpp	/^	Type* find(Node* some_curr_node, Ident some_name) $/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_curr_node,Ident some_name)
find_func_arg	scoped_table_base_class.hpp	/^	inline Type* find_func_arg(Node* some_func_node, Ident some_name)$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_func_node,Ident some_name)
find_in_this_blklev	scoped_table_base_class.hpp	/^	inline Type* find_in_this_blklev(Node* some_curr_node, Ident some_name)$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_curr_node,Ident some_name)
find_or_insert	scoped_table_base_class.hpp	/^	inline Type* find_or_insert(Node* some_curr_node, Ident some_name)$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_curr_node,Ident some_name)
fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
frost_hdl	allocation_stuff.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	allocation_stuff.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	compiler_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	compiler_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	compiler_error_listener_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	compiler_error_listener_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	expr_chunk_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	expr_num_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	expr_symbol_ref_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	ident_table_classes.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	scoped_table_base_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	symbol_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	symbol_table_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	symbol_table_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl::Compiler	compiler_class.hpp	/^class Compiler : public CompilerGrammarVisitor$/;"	kind:c	namespace:frost_hdl	inherits:CompilerGrammarVisitor
frost_hdl::Compiler::Compiler	compiler_class.cpp	/^Compiler::Compiler(Parser& parser)$/;"	kind:f	class:frost_hdl::Compiler	signature:(Parser & parser)
frost_hdl::Compiler::Compiler	compiler_class.hpp	/^	Compiler(Parser& parser);$/;"	kind:p	class:frost_hdl::Compiler	access:public	signature:(Parser & parser)
frost_hdl::Compiler::Parser	compiler_class.hpp	/^	typedef CompilerGrammarParser Parser;$/;"	kind:t	class:frost_hdl::Compiler	typeref:typename:CompilerGrammarParser	access:public
frost_hdl::Compiler::ParserRuleContext	compiler_class.hpp	/^	typedef antlr4::ParserRuleContext ParserRuleContext;$/;"	kind:t	class:frost_hdl::Compiler	typeref:typename:antlr4::ParserRuleContext	access:public
frost_hdl::Compiler::VisitorRetType	compiler_class.hpp	/^	typedef antlrcpp::Any VisitorRetType;$/;"	kind:t	class:frost_hdl::Compiler	typeref:typename:antlrcpp::Any	access:public
frost_hdl::Compiler::__curr_scope_node	compiler_class.hpp	/^	ScopedTableNode<Symbol>* __curr_scope_node = nullptr;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:ScopedTableNode<Symbol> *	access:private
frost_hdl::Compiler::__expr_chunk_stack	compiler_class.hpp	/^	std::stack<ExprChunk> __expr_chunk_stack;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:std::stack<ExprChunk>	access:private
frost_hdl::Compiler::__pass	compiler_class.hpp	/^	int __pass;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:int	access:private
frost_hdl::Compiler::__program_ctx	compiler_class.hpp	/^	Parser::ProgramContext* __program_ctx;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:Parser::ProgramContext *	access:private
frost_hdl::Compiler::__scope_child_num_stack	compiler_class.hpp	/^	std::stack<s64> __scope_child_num_stack;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:std::stack<s64>	access:private
frost_hdl::Compiler::__str_stack	compiler_class.hpp	/^	std::stack<std::string*> __str_stack;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:std::stack<std::string * >	access:private
frost_hdl::Compiler::__sym_tbl	compiler_class.hpp	/^	SymbolTable __sym_tbl;$/;"	kind:m	class:frost_hdl::Compiler	typeref:typename:SymbolTable	access:private
frost_hdl::Compiler::err	compiler_class.hpp	/^	inline void err(antlr4::ParserRuleContext* ctx, $/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(antlr4::ParserRuleContext * ctx,const std::string & msg)
frost_hdl::Compiler::err	compiler_class.hpp	/^	inline void err(const std::string& msg)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(const std::string & msg)
frost_hdl::Compiler::gen_getter_by_ref	compiler_class.hpp	/^	gen_getter_by_ref(sym_tbl);$/;"	kind:p	class:frost_hdl::Compiler	access:private	signature:(sym_tbl)
frost_hdl::Compiler::get_top_expr_chunk	compiler_class.hpp	/^	inline auto get_top_expr_chunk()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
frost_hdl::Compiler::get_top_scope_child_num	compiler_class.hpp	/^	inline auto get_top_scope_child_num()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
frost_hdl::Compiler::get_top_str	compiler_class.hpp	/^	inline auto get_top_str()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
frost_hdl::Compiler::pop_expr_chunk	compiler_class.hpp	/^	inline auto pop_expr_chunk()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
frost_hdl::Compiler::pop_scope_child_num	compiler_class.hpp	/^	inline auto pop_scope_child_num()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
frost_hdl::Compiler::pop_str	compiler_class.hpp	/^	inline auto pop_str()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
frost_hdl::Compiler::push_expr_chunk	compiler_class.hpp	/^	inline void push_expr_chunk(ExprChunk to_push)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(ExprChunk to_push)
frost_hdl::Compiler::push_scope_child_num	compiler_class.hpp	/^	inline void push_scope_child_num(s64 to_push)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(s64 to_push)
frost_hdl::Compiler::push_str	compiler_class.hpp	/^	inline void push_str(std::string* to_push)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(std::string * to_push)
frost_hdl::Compiler::run	compiler_class.cpp	/^int Compiler::run()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:int	signature:()
frost_hdl::Compiler::run	compiler_class.hpp	/^	int run();$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:int	access:public	signature:()
frost_hdl::Compiler::visitDeclModule	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclModule$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclModuleContext * ctx)
frost_hdl::Compiler::visitDeclModule	compiler_class.hpp	/^	VisitorRetType visitDeclModule$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclModuleContext * ctx)
frost_hdl::Compiler::visitDeclParameters	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclParameters$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclParametersContext * ctx)
frost_hdl::Compiler::visitDeclParameters	compiler_class.hpp	/^	VisitorRetType visitDeclParameters$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclParametersContext * ctx)
frost_hdl::Compiler::visitDeclStruct	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclStruct$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclStructContext * ctx)
frost_hdl::Compiler::visitDeclStruct	compiler_class.hpp	/^	VisitorRetType visitDeclStruct$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclStructContext * ctx)
frost_hdl::Compiler::visitDeclVarList	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclVarList$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclVarListContext * ctx)
frost_hdl::Compiler::visitDeclVarList	compiler_class.hpp	/^	VisitorRetType visitDeclVarList$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclVarListContext * ctx)
frost_hdl::Compiler::visitExpr	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExpr$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprContext * ctx)
frost_hdl::Compiler::visitExpr	compiler_class.hpp	/^	VisitorRetType visitExpr$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprContext * ctx)
frost_hdl::Compiler::visitExprAddSub	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprAddSub$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprAddSubContext * ctx)
frost_hdl::Compiler::visitExprAddSub	compiler_class.hpp	/^	VisitorRetType visitExprAddSub$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprAddSubContext * ctx)
frost_hdl::Compiler::visitExprBitInvert	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprBitInvert$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprBitInvertContext * ctx)
frost_hdl::Compiler::visitExprBitInvert	compiler_class.hpp	/^	VisitorRetType visitExprBitInvert$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprBitInvertContext * ctx)
frost_hdl::Compiler::visitExprCompare	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprCompare$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprCompareContext * ctx)
frost_hdl::Compiler::visitExprCompare	compiler_class.hpp	/^	VisitorRetType visitExprCompare$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprCompareContext * ctx)
frost_hdl::Compiler::visitExprLogNot	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprLogNot$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprLogNotContext * ctx)
frost_hdl::Compiler::visitExprLogNot	compiler_class.hpp	/^	VisitorRetType visitExprLogNot$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprLogNotContext * ctx)
frost_hdl::Compiler::visitExprLogical	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprLogical$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprLogicalContext * ctx)
frost_hdl::Compiler::visitExprLogical	compiler_class.hpp	/^	VisitorRetType visitExprLogical$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprLogicalContext * ctx)
frost_hdl::Compiler::visitExprMulDivModEtc	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprMulDivModEtc$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprMulDivModEtcContext * ctx)
frost_hdl::Compiler::visitExprMulDivModEtc	compiler_class.hpp	/^	VisitorRetType visitExprMulDivModEtc$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprMulDivModEtcContext * ctx)
frost_hdl::Compiler::visitExprNegate	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprNegate$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprNegateContext * ctx)
frost_hdl::Compiler::visitExprNegate	compiler_class.hpp	/^	VisitorRetType visitExprNegate$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprNegateContext * ctx)
frost_hdl::Compiler::visitExprUnary	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprUnary$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprUnaryContext * ctx)
frost_hdl::Compiler::visitExprUnary	compiler_class.hpp	/^	VisitorRetType visitExprUnary$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprUnaryContext * ctx)
frost_hdl::Compiler::visitIdentExpr	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitIdentExpr$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::IdentExprContext * ctx)
frost_hdl::Compiler::visitIdentExpr	compiler_class.hpp	/^	VisitorRetType visitIdentExpr$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::IdentExprContext * ctx)
frost_hdl::Compiler::visitIdentName	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitIdentName$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::IdentNameContext * ctx)
frost_hdl::Compiler::visitIdentName	compiler_class.hpp	/^	VisitorRetType visitIdentName$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::IdentNameContext * ctx)
frost_hdl::Compiler::visitIdentSliced	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitIdentSliced$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::IdentSlicedContext * ctx)
frost_hdl::Compiler::visitIdentSliced	compiler_class.hpp	/^	VisitorRetType visitIdentSliced$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::IdentSlicedContext * ctx)
frost_hdl::Compiler::visitListIdentNames	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitListIdentNames$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ListIdentNamesContext * ctx)
frost_hdl::Compiler::visitListIdentNames	compiler_class.hpp	/^	VisitorRetType visitListIdentNames$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ListIdentNamesContext * ctx)
frost_hdl::Compiler::visitListModulePorts	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitListModulePorts$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ListModulePortsContext * ctx)
frost_hdl::Compiler::visitListModulePorts	compiler_class.hpp	/^	VisitorRetType visitListModulePorts$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ListModulePortsContext * ctx)
frost_hdl::Compiler::visitListPortParams	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitListPortParams$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ListPortParamsContext * ctx)
frost_hdl::Compiler::visitListPortParams	compiler_class.hpp	/^	VisitorRetType visitListPortParams$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ListPortParamsContext * ctx)
frost_hdl::Compiler::visitMultiListModulePorts	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitMultiListModulePorts$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::MultiListModulePortsContext * ctx)
frost_hdl::Compiler::visitMultiListModulePorts	compiler_class.hpp	/^	VisitorRetType visitMultiListModulePorts$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::MultiListModulePortsContext * ctx)
frost_hdl::Compiler::visitNumExpr	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitNumExpr$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::NumExprContext * ctx)
frost_hdl::Compiler::visitNumExpr	compiler_class.hpp	/^	VisitorRetType visitNumExpr$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::NumExprContext * ctx)
frost_hdl::Compiler::visitOuterStatement	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitOuterStatement$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::OuterStatementContext * ctx)
frost_hdl::Compiler::visitOuterStatement	compiler_class.hpp	/^	VisitorRetType visitOuterStatement$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::OuterStatementContext * ctx)
frost_hdl::Compiler::visitPortParam	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitPortParam$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::PortParamContext * ctx)
frost_hdl::Compiler::visitPortParam	compiler_class.hpp	/^	VisitorRetType visitPortParam$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::PortParamContext * ctx)
frost_hdl::Compiler::visitProgram	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitProgram$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ProgramContext * ctx)
frost_hdl::Compiler::visitProgram	compiler_class.hpp	/^	VisitorRetType visitProgram$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ProgramContext * ctx)
frost_hdl::Compiler::visitScopedOuterStatements	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitScopedOuterStatements$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ScopedOuterStatementsContext * ctx)
frost_hdl::Compiler::visitScopedOuterStatements	compiler_class.hpp	/^	VisitorRetType visitScopedOuterStatements$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ScopedOuterStatementsContext * ctx)
frost_hdl::Compiler::visitSlice	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitSlice$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::SliceContext * ctx)
frost_hdl::Compiler::visitSlice	compiler_class.hpp	/^	VisitorRetType visitSlice$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::SliceContext * ctx)
frost_hdl::Compiler::visitSubProgram	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitSubProgram$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::SubProgramContext * ctx)
frost_hdl::Compiler::visitSubProgram	compiler_class.hpp	/^	VisitorRetType visitSubProgram$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::SubProgramContext * ctx)
frost_hdl::Compiler::visitTypeName	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitTypeName$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::TypeNameContext * ctx)
frost_hdl::Compiler::visitTypeName	compiler_class.hpp	/^	VisitorRetType visitTypeName$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::TypeNameContext * ctx)
frost_hdl::Compiler::warn	compiler_class.hpp	/^	inline void warn(ParserRuleContext* ctx, const std::string& msg)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(ParserRuleContext * ctx,const std::string & msg)
frost_hdl::Compiler::warn	compiler_class.hpp	/^	inline void warn(const std::string& msg)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(const std::string & msg)
frost_hdl::Compiler::~Compiler	compiler_class.cpp	/^Compiler::~Compiler()$/;"	kind:f	class:frost_hdl::Compiler	signature:()
frost_hdl::Compiler::~Compiler	compiler_class.hpp	/^	virtual ~Compiler();$/;"	kind:p	class:frost_hdl::Compiler	access:public	signature:()
frost_hdl::CompilerErrorListener	compiler_error_listener_class.hpp	/^class CompilerErrorListener : public antlr4::ANTLRErrorListener$/;"	kind:c	namespace:frost_hdl	inherits:antlr4::ANTLRErrorListener
frost_hdl::CompilerErrorListener::reportAmbiguity	compiler_error_listener_class.cpp	/^void CompilerErrorListener::reportAmbiguity(antlr4::Parser *recognizer, $/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,bool exact,const antlrcpp::BitSet & ambigAlts,antlr4::atn::ATNConfigSet * configs)
frost_hdl::CompilerErrorListener::reportAmbiguity	compiler_error_listener_class.hpp	/^	void reportAmbiguity(antlr4::Parser *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,bool exact,const antlrcpp::BitSet & ambigAlts,antlr4::atn::ATNConfigSet * configs)
frost_hdl::CompilerErrorListener::reportAttemptingFullContext	compiler_error_listener_class.cpp	/^void CompilerErrorListener::reportAttemptingFullContext$/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,const antlrcpp::BitSet & conflictingAlts,antlr4::atn::ATNConfigSet * configs)
frost_hdl::CompilerErrorListener::reportAttemptingFullContext	compiler_error_listener_class.hpp	/^	void reportAttemptingFullContext(antlr4::Parser *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,const antlrcpp::BitSet & conflictingAlts,antlr4::atn::ATNConfigSet * configs)
frost_hdl::CompilerErrorListener::reportContextSensitivity	compiler_error_listener_class.cpp	/^void CompilerErrorListener::reportContextSensitivity$/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,size_t prediction,antlr4::atn::ATNConfigSet * configs)
frost_hdl::CompilerErrorListener::reportContextSensitivity	compiler_error_listener_class.hpp	/^	void reportContextSensitivity(antlr4::Parser *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,size_t prediction,antlr4::atn::ATNConfigSet * configs)
frost_hdl::CompilerErrorListener::syntaxError	compiler_error_listener_class.cpp	/^void CompilerErrorListener::syntaxError(antlr4::Recognizer *recognizer, $/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Recognizer * recognizer,antlr4::Token * offendingSymbol,size_t line,size_t charPositionInLine,const std::string & msg,std::exception_ptr e)
frost_hdl::CompilerErrorListener::syntaxError	compiler_error_listener_class.hpp	/^	void syntaxError(antlr4::Recognizer *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Recognizer * recognizer,antlr4::Token * offendingSymbol,size_t line,size_t charPositionInLine,const std::string & msg,std::exception_ptr e)
frost_hdl::CompilerErrorListener::~CompilerErrorListener	compiler_error_listener_class.cpp	/^CompilerErrorListener::~CompilerErrorListener()$/;"	kind:f	class:frost_hdl::CompilerErrorListener	signature:()
frost_hdl::CompilerErrorListener::~CompilerErrorListener	compiler_error_listener_class.hpp	/^	virtual ~CompilerErrorListener();$/;"	kind:p	class:frost_hdl::CompilerErrorListener	access:public	signature:()
frost_hdl::DupStuff	allocation_stuff.cpp	/^class DupStuff$/;"	kind:c	namespace:frost_hdl	file:
frost_hdl::DupStuff::__expr_num_pool	allocation_stuff.cpp	/^	static std::map<ExprNum, std::unique_ptr<ExprNum>> __expr_num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprNum,std::unique_ptr<ExprNum>>	file:	access:private
frost_hdl::DupStuff::__expr_num_pool	allocation_stuff.cpp	/^std::map<ExprNum, std::unique_ptr<ExprNum>> DupStuff::__expr_num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprNum,std::unique_ptr<ExprNum>>
frost_hdl::DupStuff::__expr_symbol_ref_pool	allocation_stuff.cpp	/^		__expr_symbol_ref_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprSymbolRef,std::unique_ptr<ExprSymbolRef>>	file:	access:private
frost_hdl::DupStuff::__expr_symbol_ref_pool	allocation_stuff.cpp	/^	DupStuff::__expr_symbol_ref_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<ExprSymbolRef,std::unique_ptr<ExprSymbolRef>>
frost_hdl::DupStuff::__num_pool	allocation_stuff.cpp	/^	static std::map<BigNum, std::unique_ptr<BigNum>> __num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<BigNum,std::unique_ptr<BigNum>>	file:	access:private
frost_hdl::DupStuff::__num_pool	allocation_stuff.cpp	/^std::map<BigNum, std::unique_ptr<BigNum>> DupStuff::__num_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<BigNum,std::unique_ptr<BigNum>>
frost_hdl::DupStuff::__str_pool	allocation_stuff.cpp	/^	static std::map<std::string, std::unique_ptr<std::string>> __str_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>	file:	access:private
frost_hdl::DupStuff::__str_pool	allocation_stuff.cpp	/^std::map<std::string, std::unique_ptr<std::string>> DupStuff::__str_pool;$/;"	kind:m	class:frost_hdl::DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>
frost_hdl::DupStuff::cstm_expr_numdup	allocation_stuff.cpp	/^	friend ExprNum* cstm_expr_numdup(const ExprNum& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:ExprNum *	file:	access:private	signature:(const ExprNum & to_dup)
frost_hdl::DupStuff::cstm_expr_symbol_refdup	allocation_stuff.cpp	/^	friend ExprSymbolRef* cstm_expr_symbol_refdup(const ExprSymbolRef& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:ExprSymbolRef *	file:	access:private	signature:(const ExprSymbolRef & to_dup)
frost_hdl::DupStuff::cstm_numdup	allocation_stuff.cpp	/^	friend BigNum* cstm_numdup(const BigNum& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:BigNum *	file:	access:private	signature:(const BigNum & to_dup)
frost_hdl::DupStuff::cstm_strdup	allocation_stuff.cpp	/^	friend std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	class:frost_hdl::DupStuff	typeref:typename:std::string *	file:	access:private	signature:(const std::string & to_dup)
frost_hdl::ExprChunk	expr_chunk_class.hpp	/^class ExprChunk$/;"	kind:c	namespace:frost_hdl
frost_hdl::ExprChunk::ExprChunk	expr_chunk_class.hpp	/^	inline ExprChunk()$/;"	kind:f	class:frost_hdl::ExprChunk	access:public	signature:()
frost_hdl::ExprChunk::ExprChunk	expr_chunk_class.hpp	/^	inline ExprChunk(const ExprChunk& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprChunk	access:public	signature:(const ExprChunk & to_copy)
frost_hdl::ExprChunk::Type	expr_chunk_class.hpp	/^	enum class Type : bool$/;"	kind:g	class:frost_hdl::ExprChunk	typeref:typename:bool	access:public
frost_hdl::ExprChunk::__type	expr_chunk_class.hpp	/^	Type __type = Type::ExprSymbolRef;$/;"	kind:m	class:frost_hdl::ExprChunk	typeref:typename:Type	access:private
frost_hdl::ExprChunk::__val	expr_chunk_class.hpp	/^	std::variant<ExprSymbolRef*, ExprNum*> __val;$/;"	kind:m	class:frost_hdl::ExprChunk	typeref:typename:std::variant<ExprSymbolRef *,ExprNum * >	access:private
frost_hdl::ExprChunk::any_contained_pointer	expr_chunk_class.hpp	/^	inline void* any_contained_pointer() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:void *	access:private	signature:() const
frost_hdl::ExprChunk::any_expr_num	expr_chunk_class.hpp	/^	inline ExprNum* any_expr_num() const;$/;"	kind:p	class:frost_hdl::ExprChunk	typeref:typename:ExprNum *	access:public	signature:() const
frost_hdl::ExprChunk::any_expr_num	expr_chunk_class.hpp	/^inline ExprNum* ExprChunk::any_expr_num() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:ExprNum *	signature:() const
frost_hdl::ExprChunk::expr_num	expr_chunk_class.hpp	/^	inline ExprNum* expr_num() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:ExprNum *	access:public	signature:() const
frost_hdl::ExprChunk::expr_symbol_ref	expr_chunk_class.hpp	/^	inline ExprSymbolRef* expr_symbol_ref() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:ExprSymbolRef *	access:public	signature:() const
frost_hdl::ExprChunk::gen_getter_by_val	expr_chunk_class.hpp	/^	gen_getter_by_val(type);$/;"	kind:p	class:frost_hdl::ExprChunk	access:public	signature:(type)
frost_hdl::ExprChunk::is_constant	expr_chunk_class.hpp	/^	inline bool is_constant() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprChunk::operator <	expr_chunk_class.hpp	/^	inline bool operator < (const ExprChunk& to_cmp) const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:bool	access:public	signature:(const ExprChunk & to_cmp) const
frost_hdl::ExprChunk::operator =	expr_chunk_class.hpp	/^	inline ExprChunk& operator = (const ExprChunk& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprChunk	typeref:typename:ExprChunk &	access:public	signature:(const ExprChunk & to_copy)
frost_hdl::ExprChunk::set_expr_num	expr_chunk_class.hpp	/^	inline void set_expr_num(ExprNum* n_val)$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:void	access:public	signature:(ExprNum * n_val)
frost_hdl::ExprChunk::set_expr_symbol_ref	expr_chunk_class.hpp	/^	inline void set_expr_symbol_ref(ExprSymbolRef* n_val)$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:void	access:public	signature:(ExprSymbolRef * n_val)
frost_hdl::ExprNum	expr_chunk_class.hpp	/^		ExprNum,$/;"	kind:e	enum:frost_hdl::ExprChunk::Type	access:public
frost_hdl::ExprNum	expr_num_class.hpp	/^class ExprNum$/;"	kind:c	namespace:frost_hdl
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	inline ExprNum()$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:()
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	inline ExprNum(const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & to_copy)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	inline ExprNum(size_t s_size, BigNum* s_val)$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:(size_t s_size,BigNum * s_val)
frost_hdl::ExprNum::__size	expr_num_class.hpp	/^	size_t __size = 0;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:size_t	access:private
frost_hdl::ExprNum::__val	expr_num_class.hpp	/^	BigNum* __val = nullptr;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:BigNum *	access:private
frost_hdl::ExprNum::gen_getter_and_setter_by_val	expr_num_class.hpp	/^	gen_getter_and_setter_by_val(size);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(size)
frost_hdl::ExprNum::is_constant	expr_num_class.hpp	/^	inline bool is_constant() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprNum::operator <	expr_num_class.hpp	/^	inline bool operator < (const ExprNum& to_cmp) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:(const ExprNum & to_cmp) const
frost_hdl::ExprNum::operator =	expr_num_class.hpp	/^	inline ExprNum& operator = (const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:ExprNum &	access:public	signature:(const ExprNum & to_copy)
frost_hdl::ExprSymbolRef	expr_chunk_class.hpp	/^		ExprSymbolRef,$/;"	kind:e	enum:frost_hdl::ExprChunk::Type	access:public
frost_hdl::ExprSymbolRef	expr_symbol_ref_class.hpp	/^class ExprSymbolRef$/;"	kind:c	namespace:frost_hdl
frost_hdl::ExprSymbolRef::ExprSymbolRef	expr_symbol_ref_class.hpp	/^	inline ExprSymbolRef()$/;"	kind:f	class:frost_hdl::ExprSymbolRef	access:public	signature:()
frost_hdl::ExprSymbolRef::ExprSymbolRef	expr_symbol_ref_class.hpp	/^	inline ExprSymbolRef(const ExprSymbolRef& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(const ExprSymbolRef & to_copy)
frost_hdl::ExprSymbolRef::__indexing	expr_symbol_ref_class.hpp	/^	std::vector<ExprChunk> __indexing;$/;"	kind:m	class:frost_hdl::ExprSymbolRef	typeref:typename:std::vector<ExprChunk>	access:private
frost_hdl::ExprSymbolRef::__symbol	expr_symbol_ref_class.hpp	/^	Symbol* __symbol = nullptr;$/;"	kind:m	class:frost_hdl::ExprSymbolRef	typeref:typename:Symbol *	access:private
frost_hdl::ExprSymbolRef::gen_getter_and_setter_by_val	expr_symbol_ref_class.hpp	/^	gen_getter_and_setter_by_val(symbol);$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(symbol)
frost_hdl::ExprSymbolRef::gen_getter_by_con_ref	expr_symbol_ref_class.hpp	/^	gen_getter_by_con_ref(indexing);$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(indexing)
frost_hdl::ExprSymbolRef::gen_getter_by_ref	expr_symbol_ref_class.hpp	/^	gen_getter_by_ref(indexing);$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(indexing)
frost_hdl::ExprSymbolRef::has_valid_indexing	expr_symbol_ref_class.hpp	/^	inline bool has_valid_indexing() const$/;"	kind:f	class:frost_hdl::ExprSymbolRef	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprSymbolRef::operator <	expr_symbol_ref_class.hpp	/^	inline bool operator < (const ExprSymbolRef& to_cmp) const$/;"	kind:f	class:frost_hdl::ExprSymbolRef	typeref:typename:bool	access:public	signature:(const ExprSymbolRef & to_cmp) const
frost_hdl::ExprSymbolRef::operator =	expr_symbol_ref_class.hpp	/^	inline ExprSymbolRef& operator = (const ExprSymbolRef& to_copy)$/;"	kind:p	class:frost_hdl::ExprSymbolRef	typeref:typename:ExprSymbolRef &	access:public	signature:(const ExprSymbolRef & to_copy)
frost_hdl::Ident	ident_table_classes.hpp	/^typedef std::string* Ident;$/;"	kind:t	namespace:frost_hdl	typeref:typename:std::string *
frost_hdl::IdentTable	ident_table_classes.hpp	/^class IdentTable$/;"	kind:c	namespace:frost_hdl
frost_hdl::IdentTable::IdentTable	ident_table_classes.hpp	/^	inline IdentTable()$/;"	kind:f	class:frost_hdl::IdentTable	access:public	signature:()
frost_hdl::IdentTable::__table	ident_table_classes.hpp	/^	std::map<Ident, Type> __table;$/;"	kind:m	class:frost_hdl::IdentTable	typeref:typename:std::map<Ident,Type>	access:private
frost_hdl::IdentTable::at	ident_table_classes.hpp	/^	inline Type& at(Ident some_name)$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:Type &	access:public	signature:(Ident some_name)
frost_hdl::IdentTable::at	ident_table_classes.hpp	/^	inline const Type& at(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:const Type &	access:public	signature:(Ident some_name) const
frost_hdl::IdentTable::contains	ident_table_classes.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
frost_hdl::IdentTable::gen_getter_by_con_ref	ident_table_classes.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:frost_hdl::IdentTable	access:public	signature:(table)
frost_hdl::IdentTable::insert_or_assign	ident_table_classes.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
frost_hdl::IdentTable::insert_or_assign	ident_table_classes.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
frost_hdl::IdentToPointerTable	ident_table_classes.hpp	/^class IdentToPointerTable$/;"	kind:c	namespace:frost_hdl
frost_hdl::IdentToPointerTable::IdentToPointerTable	ident_table_classes.hpp	/^	inline IdentToPointerTable()$/;"	kind:f	class:frost_hdl::IdentToPointerTable	access:public	signature:()
frost_hdl::IdentToPointerTable::__table	ident_table_classes.hpp	/^	std::map<Ident, Type*> __table;$/;"	kind:m	class:frost_hdl::IdentToPointerTable	typeref:typename:std::map<Ident,Type * >	access:private
frost_hdl::IdentToPointerTable::at	ident_table_classes.hpp	/^	inline auto& at(Ident some_name)$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:auto &	access:public	signature:(Ident some_name)
frost_hdl::IdentToPointerTable::at	ident_table_classes.hpp	/^	inline const auto& at(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:const auto &	access:public	signature:(Ident some_name) const
frost_hdl::IdentToPointerTable::contains	ident_table_classes.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
frost_hdl::IdentToPointerTable::gen_getter_by_con_ref	ident_table_classes.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:frost_hdl::IdentToPointerTable	access:public	signature:(table)
frost_hdl::IdentToPointerTable::gen_getter_by_ref	ident_table_classes.hpp	/^	gen_getter_by_ref(table);$/;"	kind:p	class:frost_hdl::IdentToPointerTable	access:public	signature:(table)
frost_hdl::IdentToPointerTable::insert_or_assign	ident_table_classes.hpp	/^	inline void insert_or_assign(Type* to_insert_or_assign)$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:void	access:public	signature:(Type * to_insert_or_assign)
frost_hdl::Reg	symbol_class.hpp	/^		Reg,$/;"	kind:e	enum:frost_hdl::Symbol::CompiledType	access:public
frost_hdl::ScopedTableBase	scoped_table_base_class.hpp	/^class ScopedTableBase$/;"	kind:c	namespace:frost_hdl
frost_hdl::ScopedTableBase::Node	scoped_table_base_class.hpp	/^	typedef ScopedTableNode<Type> Node;$/;"	kind:t	class:frost_hdl::ScopedTableBase	typeref:typename:ScopedTableNode<Type>	access:public
frost_hdl::ScopedTableBase::ScopedTableBase	scoped_table_base_class.hpp	/^	inline ScopedTableBase()$/;"	kind:f	class:frost_hdl::ScopedTableBase	access:public	signature:()
frost_hdl::ScopedTableBase::__data_pool	scoped_table_base_class.hpp	/^	std::vector<Type*> __data_pool;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:std::vector<Type * >	access:protected
frost_hdl::ScopedTableBase::__node_pool	scoped_table_base_class.hpp	/^	std::vector<Node*> __node_pool;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:std::vector<Node * >	access:protected
frost_hdl::ScopedTableBase::__scope_num	scoped_table_base_class.hpp	/^	s64 __scope_num = -1;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:s64	access:protected
frost_hdl::ScopedTableBase::__tree	scoped_table_base_class.hpp	/^	Node __tree;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:Node	access:protected
frost_hdl::ScopedTableBase::builtin_scope_level	scoped_table_base_class.hpp	/^	static constexpr s64 builtin_scope_level = 0;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:s64	access:public
frost_hdl::ScopedTableBase::find	scoped_table_base_class.hpp	/^	Type* find(Node* some_curr_node, Ident some_name) $/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_curr_node,Ident some_name)
frost_hdl::ScopedTableBase::find_func_arg	scoped_table_base_class.hpp	/^	inline Type* find_func_arg(Node* some_func_node, Ident some_name)$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_func_node,Ident some_name)
frost_hdl::ScopedTableBase::find_in_this_blklev	scoped_table_base_class.hpp	/^	inline Type* find_in_this_blklev(Node* some_curr_node, Ident some_name)$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_curr_node,Ident some_name)
frost_hdl::ScopedTableBase::find_or_insert	scoped_table_base_class.hpp	/^	inline Type* find_or_insert(Node* some_curr_node, Ident some_name)$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:Type *	access:public	signature:(Node * some_curr_node,Ident some_name)
frost_hdl::ScopedTableBase::gen_getter_by_con_ref	scoped_table_base_class.hpp	/^	gen_getter_by_con_ref(tree);$/;"	kind:p	class:frost_hdl::ScopedTableBase	access:public	signature:(tree)
frost_hdl::ScopedTableBase::gen_getter_by_ref	scoped_table_base_class.hpp	/^	gen_getter_by_ref(tree);$/;"	kind:p	class:frost_hdl::ScopedTableBase	access:public	signature:(tree)
frost_hdl::ScopedTableBase::gen_getter_by_val	scoped_table_base_class.hpp	/^	gen_getter_by_val(scope_num);$/;"	kind:p	class:frost_hdl::ScopedTableBase	access:public	signature:(scope_num)
frost_hdl::ScopedTableBase::insert_or_assign	scoped_table_base_class.hpp	/^	inline void insert_or_assign(Node* some_curr_node,$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * some_curr_node,Type && to_insert_or_assign)
frost_hdl::ScopedTableBase::insert_or_assign	scoped_table_base_class.hpp	/^	inline void insert_or_assign(Node* some_curr_node,$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * some_curr_node,const Type & to_insert_or_assign)
frost_hdl::ScopedTableBase::mkscope	scoped_table_base_class.hpp	/^	void mkscope(Node*& some_curr_node) __attribute__((noinline))$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * & some_curr_node)
frost_hdl::ScopedTableBase::not_found_level	scoped_table_base_class.hpp	/^	static constexpr s64 not_found_level = builtin_scope_level - 1;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:s64	access:public
frost_hdl::ScopedTableBase::rmscope	scoped_table_base_class.hpp	/^	void rmscope(Node*& some_curr_node) __attribute__((noinline))$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * & some_curr_node)
frost_hdl::ScopedTableBase::~ScopedTableBase	scoped_table_base_class.hpp	/^	virtual ~ScopedTableBase()$/;"	kind:f	class:frost_hdl::ScopedTableBase	access:public	signature:()
frost_hdl::ScopedTableNode	scoped_table_base_class.hpp	/^class ScopedTableNode$/;"	kind:c	namespace:frost_hdl
frost_hdl::ScopedTableNode::ScopedTableNode	scoped_table_base_class.hpp	/^	inline ScopedTableNode(ScopedTableNode* s_parent=nullptr)$/;"	kind:f	class:frost_hdl::ScopedTableNode	access:public	signature:(ScopedTableNode * s_parent=nullptr)
frost_hdl::ScopedTableNode::__inner_func_get_all_children_tables	scoped_table_base_class.hpp	/^	void __inner_func_get_all_children_tables$/;"	kind:f	class:frost_hdl::ScopedTableNode	typeref:typename:void	access:protected	signature:(std::vector<std::map<Ident,Type * > * > & ret) const
frost_hdl::ScopedTableNode::append_child	scoped_table_base_class.hpp	/^	inline void append_child(ScopedTableNode* to_append)$/;"	kind:f	class:frost_hdl::ScopedTableNode	typeref:typename:void	access:public	signature:(ScopedTableNode * to_append)
frost_hdl::ScopedTableNode::children	scoped_table_base_class.hpp	/^	std::vector<ScopedTableNode*> children;$/;"	kind:m	class:frost_hdl::ScopedTableNode	typeref:typename:std::vector<ScopedTableNode * >	access:public
frost_hdl::ScopedTableNode::get_all_children_tables	scoped_table_base_class.hpp	/^	std::vector<std::map<Ident, Type*>*> get_all_children_tables() const$/;"	kind:f	class:frost_hdl::ScopedTableNode	typeref:typename:std::vector<std::map<Ident,Type * > * >	access:public	signature:() const
frost_hdl::ScopedTableNode::parent	scoped_table_base_class.hpp	/^	ScopedTableNode* parent;$/;"	kind:m	class:frost_hdl::ScopedTableNode	typeref:typename:ScopedTableNode *	access:public
frost_hdl::ScopedTableNode::table	scoped_table_base_class.hpp	/^	IdentToPointerTable<Type> table;$/;"	kind:m	class:frost_hdl::ScopedTableNode	typeref:typename:IdentToPointerTable<Type>	access:public
frost_hdl::ScopedTableNode::~ScopedTableNode	scoped_table_base_class.hpp	/^	virtual ~ScopedTableNode()$/;"	kind:f	class:frost_hdl::ScopedTableNode	access:public	signature:()
frost_hdl::Symbol	symbol_class.hpp	/^class Symbol$/;"	kind:c	namespace:frost_hdl
frost_hdl::Symbol::CompiledType	symbol_class.hpp	/^	enum class CompiledType : bool$/;"	kind:g	class:frost_hdl::Symbol	typeref:typename:bool	access:public
frost_hdl::Symbol::Symbol	symbol_class.hpp	/^	inline Symbol()$/;"	kind:f	class:frost_hdl::Symbol	access:public	signature:()
frost_hdl::Symbol::Symbol	symbol_class.hpp	/^	inline Symbol(Ident s_name, Ident s_type)$/;"	kind:f	class:frost_hdl::Symbol	access:public	signature:(Ident s_name,Ident s_type)
frost_hdl::Symbol::Symbol	symbol_class.hpp	/^	inline Symbol(Symbol&& to_move) = default;$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(Symbol && to_move)
frost_hdl::Symbol::Symbol	symbol_class.hpp	/^	inline Symbol(const Symbol& to_copy) = default;$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(const Symbol & to_copy)
frost_hdl::Symbol::__arr_dim	symbol_class.hpp	/^	std::vector<size_t> __arr_dim;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:std::vector<size_t>	access:private
frost_hdl::Symbol::__compiled_type	symbol_class.hpp	/^	CompiledType __compiled_type = CompiledType::Reg;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:CompiledType	access:private
frost_hdl::Symbol::__expr_num	symbol_class.hpp	/^	ExprNum* __expr_num = nullptr;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:ExprNum *	access:private
frost_hdl::Symbol::__has_been_found	symbol_class.hpp	/^	bool __has_been_found = false;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:bool	access:private
frost_hdl::Symbol::__name	symbol_class.hpp	/^	Ident __name = nullptr;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:Ident	access:private
frost_hdl::Symbol::__type	symbol_class.hpp	/^	Ident __type = nullptr;$/;"	kind:m	class:frost_hdl::Symbol	typeref:typename:Ident	access:private
frost_hdl::Symbol::gen_getter_and_setter_by_con_ref	symbol_class.hpp	/^	gen_getter_and_setter_by_con_ref(name);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(name)
frost_hdl::Symbol::gen_getter_and_setter_by_con_ref	symbol_class.hpp	/^	gen_getter_and_setter_by_con_ref(type);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(type)
frost_hdl::Symbol::gen_getter_and_setter_by_val	symbol_class.hpp	/^	gen_getter_and_setter_by_val(compiled_type);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(compiled_type)
frost_hdl::Symbol::gen_getter_and_setter_by_val	symbol_class.hpp	/^	gen_getter_and_setter_by_val(expr_num);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(expr_num)
frost_hdl::Symbol::gen_getter_and_setter_by_val	symbol_class.hpp	/^	gen_getter_and_setter_by_val(has_been_found);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(has_been_found)
frost_hdl::Symbol::gen_getter_by_con_ref	symbol_class.hpp	/^	gen_getter_by_con_ref(arr_dim);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(arr_dim)
frost_hdl::Symbol::gen_getter_by_ref	symbol_class.hpp	/^	gen_getter_by_ref(arr_dim);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(arr_dim)
frost_hdl::Symbol::gen_setter_by_rval_ref	symbol_class.hpp	/^	gen_setter_by_rval_ref(name);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(name)
frost_hdl::Symbol::gen_setter_by_rval_ref	symbol_class.hpp	/^	gen_setter_by_rval_ref(type);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(type)
frost_hdl::Symbol::is_array	symbol_class.hpp	/^	inline bool is_array() const$/;"	kind:f	class:frost_hdl::Symbol	typeref:typename:bool	access:public	signature:() const
frost_hdl::Symbol::operator =	symbol_class.hpp	/^	inline Symbol& operator = (Symbol&& to_move) = default;$/;"	kind:p	class:frost_hdl::Symbol	typeref:typename:Symbol &	access:public	signature:(Symbol && to_move)
frost_hdl::Symbol::operator =	symbol_class.hpp	/^	inline Symbol& operator = (const Symbol& to_copy) = default;$/;"	kind:p	class:frost_hdl::Symbol	typeref:typename:Symbol &	access:public	signature:(const Symbol & to_copy)
frost_hdl::SymbolTable	symbol_table_class.hpp	/^class SymbolTable : public ScopedTableBase<Symbol>$/;"	kind:c	namespace:frost_hdl	inherits:ScopedTableBase<Symbol>
frost_hdl::SymbolTable::SymbolTable	symbol_table_class.cpp	/^SymbolTable::SymbolTable()$/;"	kind:f	class:frost_hdl::SymbolTable	signature:()
frost_hdl::SymbolTable::SymbolTable	symbol_table_class.hpp	/^	SymbolTable();$/;"	kind:p	class:frost_hdl::SymbolTable	access:public	signature:()
frost_hdl::SymbolTable::~SymbolTable	symbol_table_class.cpp	/^SymbolTable::~SymbolTable()$/;"	kind:f	class:frost_hdl::SymbolTable	signature:()
frost_hdl::SymbolTable::~SymbolTable	symbol_table_class.hpp	/^	virtual ~SymbolTable();$/;"	kind:p	class:frost_hdl::SymbolTable	access:public	signature:()
frost_hdl::Wire	symbol_class.hpp	/^		Wire,$/;"	kind:e	enum:frost_hdl::Symbol::CompiledType	access:public
frost_hdl::cstm_expr_numdup	allocation_stuff.cpp	/^ExprNum* cstm_expr_numdup(const ExprNum& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:ExprNum *	signature:(const ExprNum & to_dup)
frost_hdl::cstm_expr_numdup	allocation_stuff.hpp	/^ExprNum* cstm_expr_numdup(const ExprNum& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:ExprNum *	signature:(const ExprNum & to_dup)
frost_hdl::cstm_expr_symbol_refdup	allocation_stuff.cpp	/^ExprSymbolRef* cstm_expr_symbol_refdup(const ExprSymbolRef& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:ExprSymbolRef *	signature:(const ExprSymbolRef & to_dup)
frost_hdl::cstm_expr_symbol_refdup	allocation_stuff.hpp	/^ExprSymbolRef* cstm_expr_symbol_refdup(const ExprSymbolRef& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:ExprSymbolRef *	signature:(const ExprSymbolRef & to_dup)
frost_hdl::cstm_numdup	allocation_stuff.cpp	/^BigNum* cstm_numdup(const BigNum& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:BigNum *	signature:(const BigNum & to_dup)
frost_hdl::cstm_numdup	allocation_stuff.hpp	/^BigNum* cstm_numdup(const BigNum& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:BigNum *	signature:(const BigNum & to_dup)
frost_hdl::cstm_strdup	allocation_stuff.cpp	/^std::string* cstm_strdup(const std::string& to_dup)$/;"	kind:f	namespace:frost_hdl	typeref:typename:std::string *	signature:(const std::string & to_dup)
frost_hdl::cstm_strdup	allocation_stuff.hpp	/^std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	namespace:frost_hdl	typeref:typename:std::string *	signature:(const std::string & to_dup)
func	liborangepower_src/misc_output_classes.hpp	/^	static inline void func(std::ostream& os)$/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os)
func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, const FirstType& first_val, $/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,const FirstType & first_val,RemArgTypes &&...rem_args)
gen_generic_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_rval_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_getter_and_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_and_setter_by_con_ref(/;"	kind:d	signature:(stuff)
gen_getter_and_setter_by_con_ref	symbol_class.hpp	/^	gen_getter_and_setter_by_con_ref(name);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(name)
gen_getter_and_setter_by_con_ref	symbol_class.hpp	/^	gen_getter_and_setter_by_con_ref(type);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(type)
gen_getter_and_setter_by_val	expr_num_class.hpp	/^	gen_getter_and_setter_by_val(size);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(size)
gen_getter_and_setter_by_val	expr_symbol_ref_class.hpp	/^	gen_getter_and_setter_by_val(symbol);$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(symbol)
gen_getter_and_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_and_setter_by_val(/;"	kind:d	signature:(stuff)
gen_getter_and_setter_by_val	symbol_class.hpp	/^	gen_getter_and_setter_by_val(compiled_type);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(compiled_type)
gen_getter_and_setter_by_val	symbol_class.hpp	/^	gen_getter_and_setter_by_val(expr_num);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(expr_num)
gen_getter_and_setter_by_val	symbol_class.hpp	/^	gen_getter_and_setter_by_val(has_been_found);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(has_been_found)
gen_getter_by_con_ref	expr_symbol_ref_class.hpp	/^	gen_getter_by_con_ref(indexing);$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(indexing)
gen_getter_by_con_ref	ident_table_classes.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:frost_hdl::IdentTable	access:public	signature:(table)
gen_getter_by_con_ref	ident_table_classes.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:frost_hdl::IdentToPointerTable	access:public	signature:(table)
gen_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_getter_by_con_ref	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_con_ref(instance);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(instance)
gen_getter_by_con_ref	scoped_table_base_class.hpp	/^	gen_getter_by_con_ref(tree);$/;"	kind:p	class:frost_hdl::ScopedTableBase	access:public	signature:(tree)
gen_getter_by_con_ref	symbol_class.hpp	/^	gen_getter_by_con_ref(arr_dim);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(arr_dim)
gen_getter_by_ref	compiler_class.hpp	/^	gen_getter_by_ref(sym_tbl);$/;"	kind:p	class:frost_hdl::Compiler	access:private	signature:(sym_tbl)
gen_getter_by_ref	expr_symbol_ref_class.hpp	/^	gen_getter_by_ref(indexing);$/;"	kind:p	class:frost_hdl::ExprSymbolRef	access:public	signature:(indexing)
gen_getter_by_ref	ident_table_classes.hpp	/^	gen_getter_by_ref(table);$/;"	kind:p	class:frost_hdl::IdentToPointerTable	access:public	signature:(table)
gen_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_ref(/;"	kind:d	signature:(suffix)
gen_getter_by_ref	scoped_table_base_class.hpp	/^	gen_getter_by_ref(tree);$/;"	kind:p	class:frost_hdl::ScopedTableBase	access:public	signature:(tree)
gen_getter_by_ref	symbol_class.hpp	/^	gen_getter_by_ref(arr_dim);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(arr_dim)
gen_getter_by_val	expr_chunk_class.hpp	/^	gen_getter_by_val(type);$/;"	kind:p	class:frost_hdl::ExprChunk	access:public	signature:(type)
gen_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_val(/;"	kind:d	signature:(suffix)
gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_0);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_0)
gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_1);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_1)
gen_getter_by_val	scoped_table_base_class.hpp	/^	gen_getter_by_val(scope_num);$/;"	kind:p	class:frost_hdl::ScopedTableBase	access:public	signature:(scope_num)
gen_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_rval_ref(/;"	kind:d	signature:(suffix)
gen_setter_by_rval_ref	symbol_class.hpp	/^	gen_setter_by_rval_ref(name);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(name)
gen_setter_by_rval_ref	symbol_class.hpp	/^	gen_setter_by_rval_ref(type);$/;"	kind:p	class:frost_hdl::Symbol	access:public	signature:(type)
gen_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_val(/;"	kind:d	signature:(suffix)
gen_static_generic_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_rval_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_static_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_static_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_ref(/;"	kind:d	signature:(suffix)
gen_static_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_val(/;"	kind:d	signature:(suffix)
gen_static_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_static_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_rval_ref(/;"	kind:d	signature:(suffix)
gen_static_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_val(/;"	kind:d	signature:(suffix)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^#define generate_float_pt_vec2_extra_class_contents(/;"	kind:d	signature:(specific_type)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^#define generate_specific_vec2_class_contents(/;"	kind:d	signature:(specific_type)
getATN	gen_src/CompilerGrammarLexer.cpp	/^const atn::ATN& CompilerGrammarLexer::getATN() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const atn::ATN &	signature:() const
getATN	gen_src/CompilerGrammarLexer.h	/^  virtual const antlr4::atn::ATN& getATN() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
getATN	gen_src/CompilerGrammarParser.h	/^  virtual const antlr4::atn::ATN& getATN() const override { return _atn; };$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
getChannelNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getChannelNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getChannelNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getChannelNames() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getGrammarFileName	gen_src/CompilerGrammarLexer.cpp	/^std::string CompilerGrammarLexer::getGrammarFileName() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:std::string	signature:() const
getGrammarFileName	gen_src/CompilerGrammarLexer.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:std::string	access:public	signature:() const
getGrammarFileName	gen_src/CompilerGrammarParser.cpp	/^std::string CompilerGrammarParser::getGrammarFileName() const {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:std::string	signature:() const
getGrammarFileName	gen_src/CompilerGrammarParser.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:std::string	access:public	signature:() const
getModeNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getModeNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getModeNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getModeNames() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclModuleContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclParametersContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclStructContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::DeclVarListContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprAddSubContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprBitInvertContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprCompareContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprLogNotContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprLogicalContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprMulDivModEtcContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprNegateContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ExprUnaryContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::IdentExprContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::IdentNameContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::IdentNameContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::IdentSlicedContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ListIdentNamesContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ListModulePortsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ListPortParamsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::MultiListModulePortsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::NumExprContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::NumExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::OuterStatementContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::PortParamContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ProgramContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::ScopedOuterStatementsContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::SliceContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::SliceContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::SubProgramContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::SubProgramContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.cpp	/^size_t CompilerGrammarParser::TypeNameContext::getRuleIndex() const {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprAddSubContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprBitInvertContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprCompareContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogNotContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprLogicalContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprNegateContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ExprUnaryContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::IdentNameContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ListModulePortsContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::NumExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::OuterStatementContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::SliceContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::SubProgramContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/CompilerGrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:size_t	access:public	signature:() const
getRuleNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getRuleNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getRuleNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getRuleNames	gen_src/CompilerGrammarParser.cpp	/^const std::vector<std::string>& CompilerGrammarParser::getRuleNames() const {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:const std::vector<std::string> &	signature:() const
getRuleNames	gen_src/CompilerGrammarParser.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getSerializedATN	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<uint16_t> CompilerGrammarLexer::getSerializedATN() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<uint16_t>	signature:() const
getSerializedATN	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<uint16_t> getSerializedATN() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<uint16_t>	access:public	signature:() const
getTokenNames	gen_src/CompilerGrammarLexer.cpp	/^const std::vector<std::string>& CompilerGrammarLexer::getTokenNames() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getTokenNames	gen_src/CompilerGrammarLexer.h	/^  virtual const std::vector<std::string>& getTokenNames() const override; \/\/ deprecated, use v/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getTokenNames	gen_src/CompilerGrammarParser.h	/^  virtual const std::vector<std::string>& getTokenNames() const override { return _tokenNames; }/;"	kind:f	class:CompilerGrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getVocabulary	gen_src/CompilerGrammarLexer.cpp	/^dfa::Vocabulary& CompilerGrammarLexer::getVocabulary() const {$/;"	kind:f	class:CompilerGrammarLexer	typeref:typename:dfa::Vocabulary &	signature:() const
getVocabulary	gen_src/CompilerGrammarLexer.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:CompilerGrammarLexer	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
getVocabulary	gen_src/CompilerGrammarParser.cpp	/^dfa::Vocabulary& CompilerGrammarParser::getVocabulary() const {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:dfa::Vocabulary &	signature:() const
getVocabulary	gen_src/CompilerGrammarParser.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
get_all_children_tables	scoped_table_base_class.hpp	/^	std::vector<std::map<Ident, Type*>*> get_all_children_tables() const$/;"	kind:f	class:frost_hdl::ScopedTableNode	typeref:typename:std::vector<std::map<Ident,Type * > * >	access:public	signature:() const
get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_istream_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_istream_as_str(std::istream& to_get_from)$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:(std::istream & to_get_from)
get_json_value_type_as_str	liborangepower_src/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_stdin_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_as_str()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
get_top_expr_chunk	compiler_class.hpp	/^	inline auto get_top_expr_chunk()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
get_top_scope_child_num	compiler_class.hpp	/^	inline auto get_top_scope_child_num()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
get_top_str	compiler_class.hpp	/^	inline auto get_top_str()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
has_changed	liborangepower_src/prev_curr_pair_class.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
has_valid_indexing	expr_symbol_ref_class.hpp	/^	inline bool has_valid_indexing() const$/;"	kind:f	class:frost_hdl::ExprSymbolRef	typeref:typename:bool	access:public	signature:() const
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
identExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentExprContext* CompilerGrammarParser::ExprMulDivModEtcContext::identEx/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::IdentExprContext *	signature:()
identExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentExprContext* CompilerGrammarParser::identExpr() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::IdentExprContext *	signature:()
identExpr	gen_src/CompilerGrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:IdentExprContext *	access:public	signature:()
identExpr	gen_src/CompilerGrammarParser.h	/^  IdentExprContext* identExpr();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:IdentExprContext *	access:public	signature:()
identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::DeclModuleContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::DeclStructContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::DeclStructContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::IdentExprContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::ListIdentNamesContext::identName/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:(size_t i)
identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::PortParamContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::PortParamContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::TypeNameContext::identName() {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
identName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentNameContext* CompilerGrammarParser::identName() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::IdentNameContext *	signature:()
identName	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::IdentNameContext *> CompilerGrammarParser::ListIdentNamesCont/;"	kind:f	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<CompilerGrammarParser::IdentNameContext * >	signature:()
identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::DeclStructContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::PortParamContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/CompilerGrammarParser.h	/^    IdentNameContext* identName(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:IdentNameContext *	access:public	signature:(size_t i)
identName	gen_src/CompilerGrammarParser.h	/^    std::vector<IdentNameContext *> identName();$/;"	kind:p	class:CompilerGrammarParser::ListIdentNamesContext	typeref:typename:std::vector<IdentNameContext * >	access:public	signature:()
identName	gen_src/CompilerGrammarParser.h	/^  IdentNameContext* identName();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:IdentNameContext *	access:public	signature:()
identSliced	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentSlicedContext* CompilerGrammarParser::IdentExprContext::identSliced(/;"	kind:f	class:CompilerGrammarParser::IdentExprContext	typeref:typename:CompilerGrammarParser::IdentSlicedContext *	signature:()
identSliced	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::IdentSlicedContext* CompilerGrammarParser::identSliced() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::IdentSlicedContext *	signature:()
identSliced	gen_src/CompilerGrammarParser.h	/^    IdentSlicedContext *identSliced();$/;"	kind:p	class:CompilerGrammarParser::IdentExprContext	typeref:typename:IdentSlicedContext *	access:public	signature:()
identSliced	gen_src/CompilerGrammarParser.h	/^  IdentSlicedContext* identSliced();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:IdentSlicedContext *	access:public	signature:()
in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(Type range_start_inclusive, Type range_end_exclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_check)
in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_inclusive,Type to_check)
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s__arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s__arr)
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s__arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s__arr,const Vec2<size_t> & s_size_2d)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
insert_or_assign	ident_table_classes.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
insert_or_assign	ident_table_classes.hpp	/^	inline void insert_or_assign(Type* to_insert_or_assign)$/;"	kind:f	class:frost_hdl::IdentToPointerTable	typeref:typename:void	access:public	signature:(Type * to_insert_or_assign)
insert_or_assign	ident_table_classes.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:frost_hdl::IdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
insert_or_assign	scoped_table_base_class.hpp	/^	inline void insert_or_assign(Node* some_curr_node,$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * some_curr_node,Type && to_insert_or_assign)
insert_or_assign	scoped_table_base_class.hpp	/^	inline void insert_or_assign(Node* some_curr_node,$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * some_curr_node,const Type & to_insert_or_assign)
integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
is_array	symbol_class.hpp	/^	inline bool is_array() const$/;"	kind:f	class:frost_hdl::Symbol	typeref:typename:bool	access:public	signature:() const
is_constant	expr_chunk_class.hpp	/^	inline bool is_constant() const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:bool	access:public	signature:() const
is_constant	expr_num_class.hpp	/^	inline bool is_constant() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:() const
json	liborangepower_src/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
liborangepower	liborangepower_src/array_2d_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/array_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/gmp_stuff.cpp	/^namespace liborangepower$/;"	kind:n	file:
liborangepower	liborangepower_src/gmp_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/json_stuff.cpp	/^namespace liborangepower$/;"	kind:n	file:
liborangepower	liborangepower_src/json_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/memwhatever_wrappers.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_input_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_output_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_types.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_utility_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/mpi_handler_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/prev_curr_pair_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/quoted_str_converter_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/range_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/string_conversion_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/time_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/vec2_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower::DidQuitWithMiscOutput	liborangepower_src/mpi_handler_class.hpp	/^		DidQuitWithMiscOutput,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::FakeError	liborangepower_src/mpi_handler_class.hpp	/^		FakeError,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::SizeTooBig	liborangepower_src/mpi_handler_class.hpp	/^		SizeTooBig,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::TooFewProcs	liborangepower_src/mpi_handler_class.hpp	/^		TooFewProcs,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::bignum	liborangepower_src/gmp_stuff.cpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower	file:
liborangepower::bignum	liborangepower_src/gmp_stuff.hpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower
liborangepower::bignum::BigNum	liborangepower_src/gmp_stuff.hpp	/^typedef mpz_class BigNum;$/;"	kind:t	namespace:liborangepower::bignum	typeref:typename:mpz_class
liborangepower::bignum::convert_bignum_to_str	liborangepower_src/gmp_stuff.hpp	/^inline std::string convert_bignum_to_str(const BigNum& in_bignum)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:std::string	signature:(const BigNum & in_bignum)
liborangepower::bignum::str_is_integer_bignum	liborangepower_src/gmp_stuff.cpp	/^bool str_is_integer_bignum(const std::string& str, BigNum& ret)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
liborangepower::bignum::str_is_integer_bignum	liborangepower_src/gmp_stuff.hpp	/^bool str_is_integer_bignum(const std::string& str, BigNum& ret);$/;"	kind:p	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
liborangepower::bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
liborangepower::bitwise::bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(const Type& to_check, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(const Type & to_check,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
liborangepower::bitwise::clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
liborangepower::bitwise::clear_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits_with_range(Type& to_clear, size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::count_leading_zeros	liborangepower_src/misc_bitwise_funcs.hpp	/^size_t count_leading_zeros(Type x)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(Type x)
liborangepower::bitwise::get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
liborangepower::bitwise::get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
liborangepower::bitwise::set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits_with_range(Type& to_set, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type()$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:()
liborangepower::bitwise::width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type(const Type& to_check)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(const Type & to_check)
liborangepower::containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/prev_curr_pair_class.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s__arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s__arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::Array2dHelper::__size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::Array2dHelper::__size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> __size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
liborangepower::containers::Array2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::Array2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s__arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s__arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::Array2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s__arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s__arr)
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayCsz2dHelper::__size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t __size = __size_2d.x * __size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCsz2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::ArrayCsz2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s__arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s__arr)
liborangepower::containers::ArrayCsz2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : __arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
liborangepower::containers::ArrayCszHelper::__size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t __size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCszHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayCszHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayHelper::__size	liborangepower_src/array_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::PrevCurrPair	liborangepower_src/prev_curr_pair_class.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::PrevCurrPair::back_up	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(const type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const type & n_curr)
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(type && n_curr)
liborangepower::containers::PrevCurrPair::curr	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
liborangepower::containers::PrevCurrPair::has_changed	liborangepower_src/prev_curr_pair_class.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
liborangepower::containers::PrevCurrPair::prev	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
liborangepower::containers::SizeT2d	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<size_t> SizeT2d;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<size_t>
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<double>$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<float>$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2() : x(Type()), y(Type())$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:()
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(Vec2<OtherType> && to_move)
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Type1& s_x, const Type2& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type1 & s_x,const Type2 & s_y)
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Vec2<OtherType> & to_copy)
liborangepower::containers::Vec2::dot_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type dot_prod(const Vec2<OtherType>& to_dot) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_dot) const
liborangepower::containers::Vec2::generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
liborangepower::containers::Vec2::generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
liborangepower::containers::Vec2::generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
liborangepower::containers::Vec2::generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
liborangepower::containers::Vec2::operator !=	liborangepower_src/vec2_classes.hpp	/^	inline bool operator != (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
liborangepower::containers::Vec2::operator *	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator * (const OtherType& scale) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const OtherType & scale) const
liborangepower::containers::Vec2::operator *=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator *= (const OtherType& scale)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const OtherType & scale)
liborangepower::containers::Vec2::operator +	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator + (const Vec2<OtherType>& to_add) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_add) const
liborangepower::containers::Vec2::operator +=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator += (const Vec2<OtherType>& to_add)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_add)
liborangepower::containers::Vec2::operator -	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator - (const Vec2<OtherType>& to_sub) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_sub) const
liborangepower::containers::Vec2::operator -=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator -= (const Vec2<OtherType>& to_sub)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_sub)
liborangepower::containers::Vec2::operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(Vec2<OtherType> && to_move)
liborangepower::containers::Vec2::operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_copy)
liborangepower::containers::Vec2::operator ==	liborangepower_src/vec2_classes.hpp	/^	inline bool operator == (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
liborangepower::containers::Vec2::operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline Type& operator [] (size_t index)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type &	access:public	signature:(size_t index)
liborangepower::containers::Vec2::operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline const Type& operator [] (size_t index) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:const Type &	access:public	signature:(size_t index) const
liborangepower::containers::Vec2::x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::zcross_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type zcross_prod(const Vec2<OtherType>& to_zcross) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_zcross) const
liborangepower::containers::Vec2S16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s16> Vec2S16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s16>
liborangepower::containers::Vec2S32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s32> Vec2S32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s32>
liborangepower::containers::Vec2S64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s64> Vec2S64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s64>
liborangepower::containers::Vec2U16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u16> Vec2U16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u16>
liborangepower::containers::Vec2U32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u32> Vec2U32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u32>
liborangepower::containers::Vec2U64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u64> Vec2U64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u64>
liborangepower::containers::Vec2_dbl	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<double> Vec2_dbl;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<double>
liborangepower::containers::Vec2_flt	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<float> Vec2_flt;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<float>
liborangepower::containers::custom_abs	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> custom_abs(const Vec2<Type>& val)$/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Vec2<Type> & val)
liborangepower::containers::operator *	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> operator * (const Type& scale, $/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Type & scale,const Vec2<Type> & vec2_to_mul)
liborangepower::containers::vec2_index_for_x	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
liborangepower::containers::vec2_index_for_y	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
liborangepower::integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
liborangepower::integer_types::s16	liborangepower_src/misc_types.hpp	/^typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
liborangepower::integer_types::s32	liborangepower_src/misc_types.hpp	/^typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
liborangepower::integer_types::s64	liborangepower_src/misc_types.hpp	/^typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
liborangepower::integer_types::s8	liborangepower_src/misc_types.hpp	/^typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
liborangepower::integer_types::u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
liborangepower::integer_types::u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
liborangepower::integer_types::u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
liborangepower::integer_types::u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
liborangepower::integer_types::uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
liborangepower::json	liborangepower_src/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
liborangepower::json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::err	liborangepower_src/json_stuff.hpp	/^void err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(arg_types &&...args)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
liborangepower::json::write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
liborangepower::misc_input::get_istream_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_istream_as_str(std::istream& to_get_from)$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:(std::istream & to_get_from)
liborangepower::misc_input::get_stdin_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_as_str()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
liborangepower::misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util::__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
liborangepower::misc_util::__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val, const SecondType& next, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val,const SecondType & next,RemArgTypes &&...rem_args)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
liborangepower::misc_util::cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
liborangepower::misc_util::custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
liborangepower::misc_util::init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstType max_va(const FirstType& arg_0, const SecondType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType max_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
liborangepower::mpi	liborangepower_src/mpi_handler_class.hpp	/^namespace mpi$/;"	kind:n	namespace:liborangepower
liborangepower::mpi::MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^class MpiHandler$/;"	kind:c	namespace:liborangepower::mpi
liborangepower::mpi::MpiHandler::ErrorCode	liborangepower_src/mpi_handler_class.hpp	/^	enum class ErrorCode : int$/;"	kind:g	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
liborangepower::mpi::MpiHandler::MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	inline MpiHandler(int& s_argc, char** s_argv,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:(int & s_argc,char ** s_argv,size_t s_num_threads_per_proc=1,size_t s_min_world_size=1)
liborangepower::mpi::MpiHandler::__argc_ptr	liborangepower_src/mpi_handler_class.hpp	/^	int* __argc_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int *	access:protected
liborangepower::mpi::MpiHandler::__argv_ptr	liborangepower_src/mpi_handler_class.hpp	/^	char*** __argv_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:char ***	access:protected
liborangepower::mpi::MpiHandler::__min_world_size	liborangepower_src/mpi_handler_class.hpp	/^	size_t __num_threads_per_proc, __min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
liborangepower::mpi::MpiHandler::__num_threads_per_proc	liborangepower_src/mpi_handler_class.hpp	/^	size_t __num_threads_per_proc, __min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
liborangepower::mpi::MpiHandler::__world_rank	liborangepower_src/mpi_handler_class.hpp	/^	int __world_rank, __world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
liborangepower::mpi::MpiHandler::__world_size	liborangepower_src/mpi_handler_class.hpp	/^	int __world_rank, __world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
liborangepower::mpi::MpiHandler::argc	liborangepower_src/mpi_handler_class.hpp	/^	inline int argc() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:() const
liborangepower::mpi::MpiHandler::argv	liborangepower_src/mpi_handler_class.hpp	/^	inline char** argv() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:char **	access:public	signature:() const
liborangepower::mpi::MpiHandler::quit_with_misc_output	liborangepower_src/mpi_handler_class.hpp	/^	inline void quit_with_misc_output(arg_types&&... args) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:void	access:protected	signature:(arg_types &&...args) const
liborangepower::mpi::MpiHandler::raw_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_abort(MPI_Comm comm, int ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm,int ec) const
liborangepower::mpi::MpiHandler::raw_comm_rank	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_rank(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
liborangepower::mpi::MpiHandler::raw_comm_size	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_size(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
liborangepower::mpi::MpiHandler::raw_finalize	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_finalize() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:() const
liborangepower::mpi::MpiHandler::raw_init	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_init(int& argc, char**& argv) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(int & argc,char ** & argv) const
liborangepower::mpi::MpiHandler::recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(ArrType& buf, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(ArrType & buf,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(Type* buf, int num_instances, int src, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type * buf,int num_instances,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv_single(Type& some_var, int src, int tag=MPI_ANY_TAG,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type & some_var,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::reduce	liborangepower_src/mpi_handler_class.hpp	/^	inline int reduce(const void* send_buf, void* recv_buf, int count, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const void * send_buf,void * recv_buf,int count,MPI_Datatype data_type,MPI_Op op,int root,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::regular_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int regular_abort(const ErrorCode& ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const ErrorCode & ec) const
liborangepower::mpi::MpiHandler::root	liborangepower_src/mpi_handler_class.hpp	/^	static constexpr int root = 0;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
liborangepower::mpi::MpiHandler::send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const ArrType& buf, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const ArrType & buf,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * buf,int num_instances,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv(const Type* send_buf, int num_send_instances, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * send_buf,int num_send_instances,int dst,Type * recv_buf,int num_recv_instances,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, Type& to_recv, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,Type & to_recv,int partner,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,int dst,Type & to_recv,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::send_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_single(const Type& some_var, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & some_var,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::starting_thread_num	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t starting_thread_num() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
liborangepower::mpi::MpiHandler::total_num_threads	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t total_num_threads() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
liborangepower::mpi::MpiHandler::wrapped_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_recv(Type* buf, int num_instances, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(Type * buf,int num_instances,int src,int tag,MPI_Comm comm,MPI_Status * status) const
liborangepower::mpi::MpiHandler::wrapped_send	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * buf,int num_instances,int dst,int tag,MPI_Comm comm) const
liborangepower::mpi::MpiHandler::wrapped_send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send_recv(const Type* send_buf, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * send_buf,int num_send_instances,int dst,int send_tag,Type * recv_buf,int num_recv_instances,int src,int recv_tag,MPI_Comm comm,MPI_Status * status) const
liborangepower::mpi::MpiHandler::~MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	virtual inline ~MpiHandler()$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:()
liborangepower::printout_etc	liborangepower_src/misc_output_classes.hpp	/^namespace printout_etc$/;"	kind:n	namespace:liborangepower
liborangepower::printout_etc::AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::printout_etc
liborangepower::printout_etc::AnyPrintoutBackend::func	liborangepower_src/misc_output_classes.hpp	/^	static inline void func(std::ostream& os)$/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os)
liborangepower::printout_etc::AnyPrintoutBackend::func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, const FirstType& first_val, $/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::AnyPrintoutBackend::osprintout	liborangepower_src/misc_output_classes.hpp	/^	friend std::ostream& osprintout(std::ostream& os, $/;"	kind:p	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:std::ostream &	access:private	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
liborangepower::printout_etc::osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
liborangepower::printout_etc::osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::printout_etc::printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::printout_etc::sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstType& first_val, $/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:()
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const Type & to_concat)
liborangepower::printout_etc::strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
liborangepower::range::clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
liborangepower::range::in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(Type range_start_inclusive, Type range_end_exclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_check)
liborangepower::range::in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_inclusive,Type to_check)
liborangepower::range::vec2_in_range	liborangepower_src/range_funcs.hpp	/^inline bool vec2_in_range(containers::Vec2<Type> range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(containers::Vec2<Type> range_start_inclusive,containers::Vec2<Type> range_end_exclusive,containers::Vec2<Type> to_check)
liborangepower::strings	liborangepower_src/string_conversion_stuff.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
liborangepower::strings::convert_str_to	liborangepower_src/string_conversion_stuff.hpp	/^inline Type convert_str_to(const std::string& to_convert)$/;"	kind:f	namespace:liborangepower::strings	typeref:typename:Type	signature:(const std::string & to_convert)
liborangepower::time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
liborangepower::time::Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Prng::InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
liborangepower::time::Prng::Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
liborangepower::time::Prng::SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
liborangepower::time::Prng::__instance	liborangepower_src/time_stuff.hpp	/^	InstanceType __instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
liborangepower::time::Prng::__param_0	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::__param_1	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::gen_getter_by_con_ref	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_con_ref(instance);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(instance)
liborangepower::time::Prng::gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_0);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_0)
liborangepower::time::Prng::gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_1);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_1)
liborangepower::time::Prng::initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool saturate=false)
liborangepower::time::Prng::run	liborangepower_src/time_stuff.hpp	/^	inline auto run()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Profiler::end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
liborangepower::time::Profiler::start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
liborangepower::time::put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower::time::put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower_array_2d_helper_classes_hpp	liborangepower_src/array_2d_helper_classes.hpp	/^#define liborangepower_array_2d_helper_classes_hpp$/;"	kind:d
liborangepower_array_helper_classes_hpp	liborangepower_src/array_helper_classes.hpp	/^#define liborangepower_array_helper_classes_hpp$/;"	kind:d
liborangepower_gen_getter_setter_defines_hpp	liborangepower_src/gen_getter_setter_defines.hpp	/^#define liborangepower_gen_getter_setter_defines_hpp$/;"	kind:d
liborangepower_gmp_stuff_hpp	liborangepower_src/gmp_stuff.hpp	/^#define liborangepower_gmp_stuff_hpp$/;"	kind:d
liborangepower_json_stuff_hpp	liborangepower_src/json_stuff.hpp	/^#define liborangepower_json_stuff_hpp$/;"	kind:d
liborangepower_lexer_classes_hpp	liborangepower_src/quoted_str_converter_stuff.hpp	/^#define liborangepower_lexer_classes_hpp$/;"	kind:d
liborangepower_memwhatever_wrappers_hpp	liborangepower_src/memwhatever_wrappers.hpp	/^#define liborangepower_memwhatever_wrappers_hpp$/;"	kind:d
liborangepower_misc_bitwise_funcs_hpp	liborangepower_src/misc_bitwise_funcs.hpp	/^#define liborangepower_misc_bitwise_funcs_hpp$/;"	kind:d
liborangepower_misc_defines_hpp	liborangepower_src/misc_defines.hpp	/^#define liborangepower_misc_defines_hpp$/;"	kind:d
liborangepower_misc_includes_hpp	liborangepower_src/misc_includes.hpp	/^#define liborangepower_misc_includes_hpp$/;"	kind:d
liborangepower_misc_input_classes_hpp	liborangepower_src/misc_input_classes.hpp	/^#define liborangepower_misc_input_classes_hpp$/;"	kind:d
liborangepower_misc_output_classes_hpp	liborangepower_src/misc_output_classes.hpp	/^#define liborangepower_misc_output_classes_hpp$/;"	kind:d
liborangepower_misc_types_hpp	liborangepower_src/misc_types.hpp	/^#define liborangepower_misc_types_hpp$/;"	kind:d
liborangepower_misc_utility_funcs_hpp	liborangepower_src/misc_utility_funcs.hpp	/^#define liborangepower_misc_utility_funcs_hpp$/;"	kind:d
liborangepower_mpi_handler_class_hpp	liborangepower_src/mpi_handler_class.hpp	/^#define liborangepower_mpi_handler_class_hpp$/;"	kind:d
liborangepower_prev_curr_pair_class_hpp	liborangepower_src/prev_curr_pair_class.hpp	/^#define liborangepower_prev_curr_pair_class_hpp$/;"	kind:d
liborangepower_range_funcs_hpp	liborangepower_src/range_funcs.hpp	/^#define liborangepower_range_funcs_hpp$/;"	kind:d
liborangepower_str_split_helper_classes_hpp	liborangepower_src/deprecated/str_split_helper_classes.hpp	/^#define liborangepower_str_split_helper_classes_hpp$/;"	kind:d
liborangepower_string_conversion_stuff_hpp	liborangepower_src/string_conversion_stuff.hpp	/^#define liborangepower_string_conversion_stuff_hpp$/;"	kind:d
liborangepower_time_stuff_hpp	liborangepower_src/time_stuff.hpp	/^#define liborangepower_time_stuff_hpp$/;"	kind:d
liborangepower_vec2_classes_hpp	liborangepower_src/vec2_classes.hpp	/^#define liborangepower_vec2_classes_hpp$/;"	kind:d
listIdentNames	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListIdentNamesContext* CompilerGrammarParser::DeclVarListContext::listIde/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:CompilerGrammarParser::ListIdentNamesContext *	signature:()
listIdentNames	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListIdentNamesContext* CompilerGrammarParser::listIdentNames() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ListIdentNamesContext *	signature:()
listIdentNames	gen_src/CompilerGrammarParser.h	/^    ListIdentNamesContext *listIdentNames();$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:ListIdentNamesContext *	access:public	signature:()
listIdentNames	gen_src/CompilerGrammarParser.h	/^  ListIdentNamesContext* listIdentNames();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ListIdentNamesContext *	access:public	signature:()
listModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListModulePortsContext* CompilerGrammarParser::MultiListModulePortsContex/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:CompilerGrammarParser::ListModulePortsContext *	signature:(size_t i)
listModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListModulePortsContext* CompilerGrammarParser::listModulePorts() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ListModulePortsContext *	signature:()
listModulePorts	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::ListModulePortsContext *> CompilerGrammarParser::MultiListMod/;"	kind:f	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<CompilerGrammarParser::ListModulePortsContext * >	signature:()
listModulePorts	gen_src/CompilerGrammarParser.h	/^    ListModulePortsContext* listModulePorts(size_t i);$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:ListModulePortsContext *	access:public	signature:(size_t i)
listModulePorts	gen_src/CompilerGrammarParser.h	/^    std::vector<ListModulePortsContext *> listModulePorts();$/;"	kind:p	class:CompilerGrammarParser::MultiListModulePortsContext	typeref:typename:std::vector<ListModulePortsContext * >	access:public	signature:()
listModulePorts	gen_src/CompilerGrammarParser.h	/^  ListModulePortsContext* listModulePorts();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ListModulePortsContext *	access:public	signature:()
listPortParams	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListPortParamsContext* CompilerGrammarParser::DeclParametersContext::list/;"	kind:f	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:CompilerGrammarParser::ListPortParamsContext *	signature:()
listPortParams	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ListPortParamsContext* CompilerGrammarParser::listPortParams() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ListPortParamsContext *	signature:()
listPortParams	gen_src/CompilerGrammarParser.h	/^    ListPortParamsContext *listPortParams();$/;"	kind:p	class:CompilerGrammarParser::DeclParametersContext	typeref:typename:ListPortParamsContext *	access:public	signature:()
listPortParams	gen_src/CompilerGrammarParser.h	/^  ListPortParamsContext* listPortParams();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ListPortParamsContext *	access:public	signature:()
main	main.cpp	/^int main(int argc, char** argv)$/;"	kind:f	typeref:typename:int	signature:(int argc,char ** argv)
max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstType max_va(const FirstType& arg_0, const SecondType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType max_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
mkscope	scoped_table_base_class.hpp	/^	void mkscope(Node*& some_curr_node) __attribute__((noinline))$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * & some_curr_node)
mpi	liborangepower_src/mpi_handler_class.hpp	/^namespace mpi$/;"	kind:n	namespace:liborangepower
multiListModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::MultiListModulePortsContext* CompilerGrammarParser::DeclModuleContext::mu/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:CompilerGrammarParser::MultiListModulePortsContext *	signature:()
multiListModulePorts	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::MultiListModulePortsContext* CompilerGrammarParser::multiListModulePorts(/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::MultiListModulePortsContext *	signature:()
multiListModulePorts	gen_src/CompilerGrammarParser.h	/^    MultiListModulePortsContext *multiListModulePorts();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:MultiListModulePortsContext *	access:public	signature:()
multiListModulePorts	gen_src/CompilerGrammarParser.h	/^  MultiListModulePortsContext* multiListModulePorts();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:MultiListModulePortsContext *	access:public	signature:()
not_found_level	scoped_table_base_class.hpp	/^	static constexpr s64 not_found_level = builtin_scope_level - 1;$/;"	kind:m	class:frost_hdl::ScopedTableBase	typeref:typename:s64	access:public
now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
numExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::NumExprContext* CompilerGrammarParser::ExprMulDivModEtcContext::numExpr()/;"	kind:f	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:CompilerGrammarParser::NumExprContext *	signature:()
numExpr	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::NumExprContext* CompilerGrammarParser::numExpr() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::NumExprContext *	signature:()
numExpr	gen_src/CompilerGrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:CompilerGrammarParser::ExprMulDivModEtcContext	typeref:typename:NumExprContext *	access:public	signature:()
numExpr	gen_src/CompilerGrammarParser.h	/^  NumExprContext* numExpr();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:NumExprContext *	access:public	signature:()
operator !=	liborangepower_src/vec2_classes.hpp	/^	inline bool operator != (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool saturate=false)
operator *	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator * (const OtherType& scale) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const OtherType & scale) const
operator *	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> operator * (const Type& scale, $/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Type & scale,const Vec2<Type> & vec2_to_mul)
operator *=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator *= (const OtherType& scale)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const OtherType & scale)
operator +	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator + (const Vec2<OtherType>& to_add) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_add) const
operator +=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator += (const Vec2<OtherType>& to_add)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_add)
operator -	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator - (const Vec2<OtherType>& to_sub) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_sub) const
operator -=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator -= (const Vec2<OtherType>& to_sub)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_sub)
operator <	expr_chunk_class.hpp	/^	inline bool operator < (const ExprChunk& to_cmp) const$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:bool	access:public	signature:(const ExprChunk & to_cmp) const
operator <	expr_num_class.hpp	/^	inline bool operator < (const ExprNum& to_cmp) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:(const ExprNum & to_cmp) const
operator <	expr_symbol_ref_class.hpp	/^	inline bool operator < (const ExprSymbolRef& to_cmp) const$/;"	kind:f	class:frost_hdl::ExprSymbolRef	typeref:typename:bool	access:public	signature:(const ExprSymbolRef & to_cmp) const
operator =	expr_chunk_class.hpp	/^	inline ExprChunk& operator = (const ExprChunk& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprChunk	typeref:typename:ExprChunk &	access:public	signature:(const ExprChunk & to_copy)
operator =	expr_num_class.hpp	/^	inline ExprNum& operator = (const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:ExprNum &	access:public	signature:(const ExprNum & to_copy)
operator =	expr_symbol_ref_class.hpp	/^	inline ExprSymbolRef& operator = (const ExprSymbolRef& to_copy)$/;"	kind:p	class:frost_hdl::ExprSymbolRef	typeref:typename:ExprSymbolRef &	access:public	signature:(const ExprSymbolRef & to_copy)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(Vec2<OtherType> && to_move)
operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_copy)
operator =	symbol_class.hpp	/^	inline Symbol& operator = (Symbol&& to_move) = default;$/;"	kind:p	class:frost_hdl::Symbol	typeref:typename:Symbol &	access:public	signature:(Symbol && to_move)
operator =	symbol_class.hpp	/^	inline Symbol& operator = (const Symbol& to_copy) = default;$/;"	kind:p	class:frost_hdl::Symbol	typeref:typename:Symbol &	access:public	signature:(const Symbol & to_copy)
operator ==	liborangepower_src/vec2_classes.hpp	/^	inline bool operator == (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline Type& operator [] (size_t index)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type &	access:public	signature:(size_t index)
operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline const Type& operator [] (size_t index) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:const Type &	access:public	signature:(size_t index) const
osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
osprintout	liborangepower_src/misc_output_classes.hpp	/^	friend std::ostream& osprintout(std::ostream& os, $/;"	kind:p	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:std::ostream &	access:private	signature:(std::ostream & os,ArgTypes &&...args)
osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
outerStatement	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::OuterStatementContext* CompilerGrammarParser::ScopedOuterStatementsContex/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:CompilerGrammarParser::OuterStatementContext *	signature:(size_t i)
outerStatement	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::OuterStatementContext* CompilerGrammarParser::outerStatement() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::OuterStatementContext *	signature:()
outerStatement	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::OuterStatementContext *> CompilerGrammarParser::ScopedOuterSt/;"	kind:f	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:std::vector<CompilerGrammarParser::OuterStatementContext * >	signature:()
outerStatement	gen_src/CompilerGrammarParser.h	/^    OuterStatementContext* outerStatement(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:OuterStatementContext *	access:public	signature:(size_t i)
outerStatement	gen_src/CompilerGrammarParser.h	/^    std::vector<OuterStatementContext *> outerStatement();$/;"	kind:p	class:CompilerGrammarParser::ScopedOuterStatementsContext	typeref:typename:std::vector<OuterStatementContext * >	access:public	signature:()
outerStatement	gen_src/CompilerGrammarParser.h	/^  OuterStatementContext* outerStatement();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:OuterStatementContext *	access:public	signature:()
parent	scoped_table_base_class.hpp	/^	ScopedTableNode* parent;$/;"	kind:m	class:frost_hdl::ScopedTableNode	typeref:typename:ScopedTableNode *	access:public
parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
pop_expr_chunk	compiler_class.hpp	/^	inline auto pop_expr_chunk()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
pop_scope_child_num	compiler_class.hpp	/^	inline auto pop_scope_child_num()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
pop_str	compiler_class.hpp	/^	inline auto pop_str()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:auto	access:private	signature:()
portParam	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::PortParamContext* CompilerGrammarParser::ListPortParamsContext::portParam/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:CompilerGrammarParser::PortParamContext *	signature:(size_t i)
portParam	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::PortParamContext* CompilerGrammarParser::portParam() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::PortParamContext *	signature:()
portParam	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::PortParamContext *> CompilerGrammarParser::ListPortParamsCont/;"	kind:f	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<CompilerGrammarParser::PortParamContext * >	signature:()
portParam	gen_src/CompilerGrammarParser.h	/^    PortParamContext* portParam(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:PortParamContext *	access:public	signature:(size_t i)
portParam	gen_src/CompilerGrammarParser.h	/^    std::vector<PortParamContext *> portParam();$/;"	kind:p	class:CompilerGrammarParser::ListPortParamsContext	typeref:typename:std::vector<PortParamContext * >	access:public	signature:()
portParam	gen_src/CompilerGrammarParser.h	/^  PortParamContext* portParam();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:PortParamContext *	access:public	signature:()
prev	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
printout_etc	liborangepower_src/misc_output_classes.hpp	/^namespace printout_etc$/;"	kind:n	namespace:liborangepower
program	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ProgramContext* CompilerGrammarParser::program() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ProgramContext *	signature:()
program	gen_src/CompilerGrammarParser.h	/^  ProgramContext* program();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ProgramContext *	access:public	signature:()
push_expr_chunk	compiler_class.hpp	/^	inline void push_expr_chunk(ExprChunk to_push)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(ExprChunk to_push)
push_scope_child_num	compiler_class.hpp	/^	inline void push_scope_child_num(s64 to_push)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(s64 to_push)
push_str	compiler_class.hpp	/^	inline void push_str(std::string* to_push)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(std::string * to_push)
put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
quit_with_misc_output	liborangepower_src/mpi_handler_class.hpp	/^	inline void quit_with_misc_output(arg_types&&... args) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:void	access:protected	signature:(arg_types &&...args) const
range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
raw_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_abort(MPI_Comm comm, int ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm,int ec) const
raw_comm_rank	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_rank(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
raw_comm_size	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_size(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
raw_finalize	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_finalize() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:() const
raw_init	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_init(int& argc, char**& argv) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(int & argc,char ** & argv) const
recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(ArrType& buf, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(ArrType & buf,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(Type* buf, int num_instances, int src, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type * buf,int num_instances,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv_single(Type& some_var, int src, int tag=MPI_ANY_TAG,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type & some_var,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
reduce	liborangepower_src/mpi_handler_class.hpp	/^	inline int reduce(const void* send_buf, void* recv_buf, int count, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const void * send_buf,void * recv_buf,int count,MPI_Datatype data_type,MPI_Op op,int root,MPI_Comm comm=MPI_COMM_WORLD) const
regular_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int regular_abort(const ErrorCode& ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const ErrorCode & ec) const
reportAmbiguity	compiler_error_listener_class.cpp	/^void CompilerErrorListener::reportAmbiguity(antlr4::Parser *recognizer, $/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,bool exact,const antlrcpp::BitSet & ambigAlts,antlr4::atn::ATNConfigSet * configs)
reportAmbiguity	compiler_error_listener_class.hpp	/^	void reportAmbiguity(antlr4::Parser *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,bool exact,const antlrcpp::BitSet & ambigAlts,antlr4::atn::ATNConfigSet * configs)
reportAttemptingFullContext	compiler_error_listener_class.cpp	/^void CompilerErrorListener::reportAttemptingFullContext$/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,const antlrcpp::BitSet & conflictingAlts,antlr4::atn::ATNConfigSet * configs)
reportAttemptingFullContext	compiler_error_listener_class.hpp	/^	void reportAttemptingFullContext(antlr4::Parser *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,const antlrcpp::BitSet & conflictingAlts,antlr4::atn::ATNConfigSet * configs)
reportContextSensitivity	compiler_error_listener_class.cpp	/^void CompilerErrorListener::reportContextSensitivity$/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,size_t prediction,antlr4::atn::ATNConfigSet * configs)
reportContextSensitivity	compiler_error_listener_class.hpp	/^	void reportContextSensitivity(antlr4::Parser *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Parser * recognizer,const antlr4::dfa::DFA & dfa,size_t startIndex,size_t stopIndex,size_t prediction,antlr4::atn::ATNConfigSet * configs)
rmscope	scoped_table_base_class.hpp	/^	void rmscope(Node*& some_curr_node) __attribute__((noinline))$/;"	kind:f	class:frost_hdl::ScopedTableBase	typeref:typename:void	access:public	signature:(Node * & some_curr_node)
root	liborangepower_src/mpi_handler_class.hpp	/^	static constexpr int root = 0;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
run	compiler_class.cpp	/^int Compiler::run()$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:int	signature:()
run	compiler_class.hpp	/^	int run();$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:int	access:public	signature:()
run	liborangepower_src/time_stuff.hpp	/^	inline auto run()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
s16	liborangepower_src/misc_types.hpp	/^typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
s32	liborangepower_src/misc_types.hpp	/^typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
s64	liborangepower_src/misc_types.hpp	/^typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
s8	liborangepower_src/misc_types.hpp	/^typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstType& first_val, $/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
scopedOuterStatements	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ScopedOuterStatementsContext* CompilerGrammarParser::DeclModuleContext::s/;"	kind:f	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:CompilerGrammarParser::ScopedOuterStatementsContext *	signature:()
scopedOuterStatements	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::ScopedOuterStatementsContext* CompilerGrammarParser::scopedOuterStatement/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::ScopedOuterStatementsContext *	signature:()
scopedOuterStatements	gen_src/CompilerGrammarParser.h	/^    ScopedOuterStatementsContext *scopedOuterStatements();$/;"	kind:p	class:CompilerGrammarParser::DeclModuleContext	typeref:typename:ScopedOuterStatementsContext *	access:public	signature:()
scopedOuterStatements	gen_src/CompilerGrammarParser.h	/^  ScopedOuterStatementsContext* scopedOuterStatements();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:ScopedOuterStatementsContext *	access:public	signature:()
sempred	gen_src/CompilerGrammarParser.cpp	/^bool CompilerGrammarParser::sempred(RuleContext *context, size_t ruleIndex, size_t predicateInde/;"	kind:f	class:CompilerGrammarParser	typeref:typename:bool	signature:(RuleContext * context,size_t ruleIndex,size_t predicateIndex)
sempred	gen_src/CompilerGrammarParser.h	/^  virtual bool sempred(antlr4::RuleContext *_localctx, size_t ruleIndex, size_t predicateIndex) /;"	kind:p	class:CompilerGrammarParser	typeref:typename:bool	access:public	signature:(antlr4::RuleContext * _localctx,size_t ruleIndex,size_t predicateIndex)
send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const ArrType& buf, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const ArrType & buf,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * buf,int num_instances,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv(const Type* send_buf, int num_send_instances, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * send_buf,int num_send_instances,int dst,Type * recv_buf,int num_recv_instances,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, Type& to_recv, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,Type & to_recv,int partner,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,int dst,Type & to_recv,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
send_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_single(const Type& some_var, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & some_var,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits_with_range(Type& to_set, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
set_expr_num	expr_chunk_class.hpp	/^	inline void set_expr_num(ExprNum* n_val)$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:void	access:public	signature:(ExprNum * n_val)
set_expr_symbol_ref	expr_chunk_class.hpp	/^	inline void set_expr_symbol_ref(ExprSymbolRef* n_val)$/;"	kind:f	class:frost_hdl::ExprChunk	typeref:typename:void	access:public	signature:(ExprSymbolRef * n_val)
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
slice	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext* CompilerGrammarParser::IdentSlicedContext::slice() {$/;"	kind:f	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:CompilerGrammarParser::SliceContext *	signature:()
slice	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext* CompilerGrammarParser::TypeNameContext::slice() {$/;"	kind:f	class:CompilerGrammarParser::TypeNameContext	typeref:typename:CompilerGrammarParser::SliceContext *	signature:()
slice	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SliceContext* CompilerGrammarParser::slice() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::SliceContext *	signature:()
slice	gen_src/CompilerGrammarParser.h	/^    SliceContext *slice();$/;"	kind:p	class:CompilerGrammarParser::IdentSlicedContext	typeref:typename:SliceContext *	access:public	signature:()
slice	gen_src/CompilerGrammarParser.h	/^    SliceContext *slice();$/;"	kind:p	class:CompilerGrammarParser::TypeNameContext	typeref:typename:SliceContext *	access:public	signature:()
slice	gen_src/CompilerGrammarParser.h	/^  SliceContext* slice();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:SliceContext *	access:public	signature:()
src_allocation_stuff_hpp	allocation_stuff.hpp	/^#define src_allocation_stuff_hpp$/;"	kind:d
src_compiler_class_hpp	compiler_class.hpp	/^#define src_compiler_class_hpp$/;"	kind:d
src_compiler_error_listener_class_hpp	compiler_error_listener_class.hpp	/^#define src_compiler_error_listener_class_hpp$/;"	kind:d
src_expr_chunk_class_hpp	expr_chunk_class.hpp	/^#define src_expr_chunk_class_hpp$/;"	kind:d
src_expr_num_class_hpp	expr_num_class.hpp	/^#define src_expr_num_class_hpp$/;"	kind:d
src_expr_symbol_ref_class_hpp	expr_symbol_ref_class.hpp	/^#define src_expr_symbol_ref_class_hpp$/;"	kind:d
src_ident_table_classes_hpp	ident_table_classes.hpp	/^#define src_ident_table_classes_hpp$/;"	kind:d
src_misc_includes_hpp	misc_includes.hpp	/^#define src_misc_includes_hpp$/;"	kind:d
src_scoped_table_base_class_hpp	scoped_table_base_class.hpp	/^#define src_scoped_table_base_class_hpp$/;"	kind:d
src_symbol_class_hpp	symbol_class.hpp	/^#define src_symbol_class_hpp$/;"	kind:d
src_symbol_table_class_hpp	symbol_table_class.hpp	/^#define src_symbol_table_class_hpp$/;"	kind:d
start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
starting_thread_num	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t starting_thread_num() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
str_is_integer_bignum	liborangepower_src/gmp_stuff.cpp	/^bool str_is_integer_bignum(const std::string& str, BigNum& ret)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
str_is_integer_bignum	liborangepower_src/gmp_stuff.hpp	/^bool str_is_integer_bignum(const std::string& str, BigNum& ret);$/;"	kind:p	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:()
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const Type & to_concat)
strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
strings	liborangepower_src/string_conversion_stuff.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
subProgram	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SubProgramContext* CompilerGrammarParser::ProgramContext::subProgram(size/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:CompilerGrammarParser::SubProgramContext *	signature:(size_t i)
subProgram	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::SubProgramContext* CompilerGrammarParser::subProgram() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::SubProgramContext *	signature:()
subProgram	gen_src/CompilerGrammarParser.cpp	/^std::vector<CompilerGrammarParser::SubProgramContext *> CompilerGrammarParser::ProgramContext::s/;"	kind:f	class:CompilerGrammarParser::ProgramContext	typeref:typename:std::vector<CompilerGrammarParser::SubProgramContext * >	signature:()
subProgram	gen_src/CompilerGrammarParser.h	/^    SubProgramContext* subProgram(size_t i);$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:SubProgramContext *	access:public	signature:(size_t i)
subProgram	gen_src/CompilerGrammarParser.h	/^    std::vector<SubProgramContext *> subProgram();$/;"	kind:p	class:CompilerGrammarParser::ProgramContext	typeref:typename:std::vector<SubProgramContext * >	access:public	signature:()
subProgram	gen_src/CompilerGrammarParser.h	/^  SubProgramContext* subProgram();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:SubProgramContext *	access:public	signature:()
syntaxError	compiler_error_listener_class.cpp	/^void CompilerErrorListener::syntaxError(antlr4::Recognizer *recognizer, $/;"	kind:f	class:frost_hdl::CompilerErrorListener	typeref:typename:void	signature:(antlr4::Recognizer * recognizer,antlr4::Token * offendingSymbol,size_t line,size_t charPositionInLine,const std::string & msg,std::exception_ptr e)
syntaxError	compiler_error_listener_class.hpp	/^	void syntaxError(antlr4::Recognizer *recognizer, $/;"	kind:p	class:frost_hdl::CompilerErrorListener	typeref:typename:void	access:public	signature:(antlr4::Recognizer * recognizer,antlr4::Token * offendingSymbol,size_t line,size_t charPositionInLine,const std::string & msg,std::exception_ptr e)
table	scoped_table_base_class.hpp	/^	IdentToPointerTable<Type> table;$/;"	kind:m	class:frost_hdl::ScopedTableNode	typeref:typename:IdentToPointerTable<Type>	access:public
time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
total_num_threads	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t total_num_threads() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
typeName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::TypeNameContext* CompilerGrammarParser::DeclVarListContext::typeName() {$/;"	kind:f	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:CompilerGrammarParser::TypeNameContext *	signature:()
typeName	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::TypeNameContext* CompilerGrammarParser::typeName() {$/;"	kind:f	class:CompilerGrammarParser	typeref:typename:CompilerGrammarParser::TypeNameContext *	signature:()
typeName	gen_src/CompilerGrammarParser.h	/^    TypeNameContext *typeName();$/;"	kind:p	class:CompilerGrammarParser::DeclVarListContext	typeref:typename:TypeNameContext *	access:public	signature:()
typeName	gen_src/CompilerGrammarParser.h	/^  TypeNameContext* typeName();$/;"	kind:p	class:CompilerGrammarParser	typeref:typename:TypeNameContext *	access:public	signature:()
type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
vec2_in_range	liborangepower_src/range_funcs.hpp	/^inline bool vec2_in_range(containers::Vec2<Type> range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(containers::Vec2<Type> range_start_inclusive,containers::Vec2<Type> range_end_exclusive,containers::Vec2<Type> to_check)
vec2_index_for_x	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
vec2_index_for_y	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
visitDeclModule	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclModule$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclModuleContext * ctx)
visitDeclModule	compiler_class.hpp	/^	VisitorRetType visitDeclModule$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclModuleContext * ctx)
visitDeclModule	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclModule(CompilerGrammarParser::DeclModuleContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclModuleContext * ctx)
visitDeclModule	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclModule(CompilerGrammarParser::DeclModuleContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclModuleContext * context)
visitDeclParameters	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclParameters$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclParametersContext * ctx)
visitDeclParameters	compiler_class.hpp	/^	VisitorRetType visitDeclParameters$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclParametersContext * ctx)
visitDeclParameters	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclParameters(CompilerGrammarParser::DeclParametersContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclParametersContext * ctx)
visitDeclParameters	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclParameters(CompilerGrammarParser::DeclParametersContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclParametersContext * context)
visitDeclStruct	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclStruct$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclStructContext * ctx)
visitDeclStruct	compiler_class.hpp	/^	VisitorRetType visitDeclStruct$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclStructContext * ctx)
visitDeclStruct	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclStruct(CompilerGrammarParser::DeclStructContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclStructContext * ctx)
visitDeclStruct	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclStruct(CompilerGrammarParser::DeclStructContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclStructContext * context)
visitDeclVarList	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitDeclVarList$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::DeclVarListContext * ctx)
visitDeclVarList	compiler_class.hpp	/^	VisitorRetType visitDeclVarList$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::DeclVarListContext * ctx)
visitDeclVarList	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDeclVarList(CompilerGrammarParser::DeclVarListContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclVarListContext * ctx)
visitDeclVarList	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitDeclVarList(CompilerGrammarParser::DeclVarListContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::DeclVarListContext * context)
visitExpr	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExpr$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprContext * ctx)
visitExpr	compiler_class.hpp	/^	VisitorRetType visitExpr$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprContext * ctx)
visitExpr	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExpr(CompilerGrammarParser::ExprContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprContext * ctx)
visitExpr	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExpr(CompilerGrammarParser::ExprContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprContext * context)
visitExprAddSub	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprAddSub$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprAddSubContext * ctx)
visitExprAddSub	compiler_class.hpp	/^	VisitorRetType visitExprAddSub$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprAddSubContext * ctx)
visitExprAddSub	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprAddSub(CompilerGrammarParser::ExprAddSubContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprAddSubContext * ctx)
visitExprAddSub	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprAddSub(CompilerGrammarParser::ExprAddSubContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprAddSubContext * context)
visitExprBitInvert	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprBitInvert$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprBitInvertContext * ctx)
visitExprBitInvert	compiler_class.hpp	/^	VisitorRetType visitExprBitInvert$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprBitInvertContext * ctx)
visitExprBitInvert	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprBitInvert(CompilerGrammarParser::ExprBitInvertContext *ctx) ove/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprBitInvertContext * ctx)
visitExprBitInvert	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprBitInvert(CompilerGrammarParser::ExprBitInvertContext *contex/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprBitInvertContext * context)
visitExprCompare	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprCompare$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprCompareContext * ctx)
visitExprCompare	compiler_class.hpp	/^	VisitorRetType visitExprCompare$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprCompareContext * ctx)
visitExprCompare	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprCompare(CompilerGrammarParser::ExprCompareContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprCompareContext * ctx)
visitExprCompare	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprCompare(CompilerGrammarParser::ExprCompareContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprCompareContext * context)
visitExprLogNot	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprLogNot$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprLogNotContext * ctx)
visitExprLogNot	compiler_class.hpp	/^	VisitorRetType visitExprLogNot$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprLogNotContext * ctx)
visitExprLogNot	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogNot(CompilerGrammarParser::ExprLogNotContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogNotContext * ctx)
visitExprLogNot	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogNot(CompilerGrammarParser::ExprLogNotContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogNotContext * context)
visitExprLogical	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprLogical$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprLogicalContext * ctx)
visitExprLogical	compiler_class.hpp	/^	VisitorRetType visitExprLogical$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprLogicalContext * ctx)
visitExprLogical	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogical(CompilerGrammarParser::ExprLogicalContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogicalContext * ctx)
visitExprLogical	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogical(CompilerGrammarParser::ExprLogicalContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprLogicalContext * context)
visitExprMulDivModEtc	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprMulDivModEtc$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	compiler_class.hpp	/^	VisitorRetType visitExprMulDivModEtc$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprMulDivModEtc(CompilerGrammarParser::ExprMulDivModEtcContext *ct/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprMulDivModEtc(CompilerGrammarParser::ExprMulDivModEtcContext */;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprMulDivModEtcContext * context)
visitExprNegate	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprNegate$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprNegateContext * ctx)
visitExprNegate	compiler_class.hpp	/^	VisitorRetType visitExprNegate$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprNegateContext * ctx)
visitExprNegate	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprNegate(CompilerGrammarParser::ExprNegateContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprNegateContext * ctx)
visitExprNegate	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprNegate(CompilerGrammarParser::ExprNegateContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprNegateContext * context)
visitExprUnary	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitExprUnary$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ExprUnaryContext * ctx)
visitExprUnary	compiler_class.hpp	/^	VisitorRetType visitExprUnary$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ExprUnaryContext * ctx)
visitExprUnary	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprUnary(CompilerGrammarParser::ExprUnaryContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprUnaryContext * ctx)
visitExprUnary	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitExprUnary(CompilerGrammarParser::ExprUnaryContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ExprUnaryContext * context)
visitIdentExpr	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitIdentExpr$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::IdentExprContext * ctx)
visitIdentExpr	compiler_class.hpp	/^	VisitorRetType visitIdentExpr$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::IdentExprContext * ctx)
visitIdentExpr	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentExpr(CompilerGrammarParser::IdentExprContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentExprContext * ctx)
visitIdentExpr	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentExpr(CompilerGrammarParser::IdentExprContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentExprContext * context)
visitIdentName	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitIdentName$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::IdentNameContext * ctx)
visitIdentName	compiler_class.hpp	/^	VisitorRetType visitIdentName$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::IdentNameContext * ctx)
visitIdentName	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentName(CompilerGrammarParser::IdentNameContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentNameContext * ctx)
visitIdentName	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentName(CompilerGrammarParser::IdentNameContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentNameContext * context)
visitIdentSliced	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitIdentSliced$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::IdentSlicedContext * ctx)
visitIdentSliced	compiler_class.hpp	/^	VisitorRetType visitIdentSliced$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::IdentSlicedContext * ctx)
visitIdentSliced	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentSliced(CompilerGrammarParser::IdentSlicedContext *ctx) overrid/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentSlicedContext * ctx)
visitIdentSliced	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentSliced(CompilerGrammarParser::IdentSlicedContext *context) =/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::IdentSlicedContext * context)
visitListIdentNames	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitListIdentNames$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ListIdentNamesContext * ctx)
visitListIdentNames	compiler_class.hpp	/^	VisitorRetType visitListIdentNames$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ListIdentNamesContext * ctx)
visitListIdentNames	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitListIdentNames(CompilerGrammarParser::ListIdentNamesContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListIdentNamesContext * ctx)
visitListIdentNames	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitListIdentNames(CompilerGrammarParser::ListIdentNamesContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListIdentNamesContext * context)
visitListModulePorts	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitListModulePorts$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ListModulePortsContext * ctx)
visitListModulePorts	compiler_class.hpp	/^	VisitorRetType visitListModulePorts$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ListModulePortsContext * ctx)
visitListModulePorts	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitListModulePorts(CompilerGrammarParser::ListModulePortsContext *ctx)/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListModulePortsContext * ctx)
visitListModulePorts	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitListModulePorts(CompilerGrammarParser::ListModulePortsContext *co/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListModulePortsContext * context)
visitListPortParams	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitListPortParams$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ListPortParamsContext * ctx)
visitListPortParams	compiler_class.hpp	/^	VisitorRetType visitListPortParams$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ListPortParamsContext * ctx)
visitListPortParams	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitListPortParams(CompilerGrammarParser::ListPortParamsContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListPortParamsContext * ctx)
visitListPortParams	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitListPortParams(CompilerGrammarParser::ListPortParamsContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ListPortParamsContext * context)
visitMultiListModulePorts	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitMultiListModulePorts$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::MultiListModulePortsContext * ctx)
visitMultiListModulePorts	compiler_class.hpp	/^	VisitorRetType visitMultiListModulePorts$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::MultiListModulePortsContext * ctx)
visitMultiListModulePorts	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitMultiListModulePorts(CompilerGrammarParser::MultiListModulePortsCon/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::MultiListModulePortsContext * ctx)
visitMultiListModulePorts	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitMultiListModulePorts(CompilerGrammarParser::MultiListModulePortsC/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::MultiListModulePortsContext * context)
visitNumExpr	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitNumExpr$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::NumExprContext * ctx)
visitNumExpr	compiler_class.hpp	/^	VisitorRetType visitNumExpr$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::NumExprContext * ctx)
visitNumExpr	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNumExpr(CompilerGrammarParser::NumExprContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::NumExprContext * ctx)
visitNumExpr	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitNumExpr(CompilerGrammarParser::NumExprContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::NumExprContext * context)
visitOuterStatement	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitOuterStatement$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::OuterStatementContext * ctx)
visitOuterStatement	compiler_class.hpp	/^	VisitorRetType visitOuterStatement$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::OuterStatementContext * ctx)
visitOuterStatement	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitOuterStatement(CompilerGrammarParser::OuterStatementContext *ctx) o/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::OuterStatementContext * ctx)
visitOuterStatement	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitOuterStatement(CompilerGrammarParser::OuterStatementContext *cont/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::OuterStatementContext * context)
visitPortParam	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitPortParam$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::PortParamContext * ctx)
visitPortParam	compiler_class.hpp	/^	VisitorRetType visitPortParam$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::PortParamContext * ctx)
visitPortParam	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitPortParam(CompilerGrammarParser::PortParamContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::PortParamContext * ctx)
visitPortParam	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitPortParam(CompilerGrammarParser::PortParamContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::PortParamContext * context)
visitProgram	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitProgram$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ProgramContext * ctx)
visitProgram	compiler_class.hpp	/^	VisitorRetType visitProgram$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ProgramContext * ctx)
visitProgram	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitProgram(CompilerGrammarParser::ProgramContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ProgramContext * ctx)
visitProgram	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitProgram(CompilerGrammarParser::ProgramContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ProgramContext * context)
visitScopedOuterStatements	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitScopedOuterStatements$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::ScopedOuterStatementsContext * ctx)
visitScopedOuterStatements	compiler_class.hpp	/^	VisitorRetType visitScopedOuterStatements$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::ScopedOuterStatementsContext * ctx)
visitScopedOuterStatements	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitScopedOuterStatements(CompilerGrammarParser::ScopedOuterStatementsC/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ScopedOuterStatementsContext * ctx)
visitScopedOuterStatements	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitScopedOuterStatements(CompilerGrammarParser::ScopedOuterStatement/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::ScopedOuterStatementsContext * context)
visitSlice	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitSlice$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::SliceContext * ctx)
visitSlice	compiler_class.hpp	/^	VisitorRetType visitSlice$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::SliceContext * ctx)
visitSlice	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSlice(CompilerGrammarParser::SliceContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SliceContext * ctx)
visitSlice	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitSlice(CompilerGrammarParser::SliceContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SliceContext * context)
visitSubProgram	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitSubProgram$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::SubProgramContext * ctx)
visitSubProgram	compiler_class.hpp	/^	VisitorRetType visitSubProgram$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::SubProgramContext * ctx)
visitSubProgram	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSubProgram(CompilerGrammarParser::SubProgramContext *ctx) override /;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SubProgramContext * ctx)
visitSubProgram	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitSubProgram(CompilerGrammarParser::SubProgramContext *context) = 0/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::SubProgramContext * context)
visitTypeName	compiler_class.cpp	/^Compiler::VisitorRetType Compiler::visitTypeName$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:Compiler::VisitorRetType	signature:(Parser::TypeNameContext * ctx)
visitTypeName	compiler_class.hpp	/^	VisitorRetType visitTypeName$/;"	kind:p	class:frost_hdl::Compiler	typeref:typename:VisitorRetType	access:private	signature:(Parser::TypeNameContext * ctx)
visitTypeName	gen_src/CompilerGrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitTypeName(CompilerGrammarParser::TypeNameContext *ctx) override {$/;"	kind:f	class:CompilerGrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::TypeNameContext * ctx)
visitTypeName	gen_src/CompilerGrammarVisitor.h	/^    virtual antlrcpp::Any visitTypeName(CompilerGrammarParser::TypeNameContext *context) = 0;$/;"	kind:p	class:CompilerGrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(CompilerGrammarParser::TypeNameContext * context)
warn	compiler_class.hpp	/^	inline void warn(ParserRuleContext* ctx, const std::string& msg)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(ParserRuleContext * ctx,const std::string & msg)
warn	compiler_class.hpp	/^	inline void warn(const std::string& msg)$/;"	kind:f	class:frost_hdl::Compiler	typeref:typename:void	access:private	signature:(const std::string & msg)
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type()$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:()
width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type(const Type& to_check)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(const Type & to_check)
wrapped_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_recv(Type* buf, int num_instances, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(Type * buf,int num_instances,int src,int tag,MPI_Comm comm,MPI_Status * status) const
wrapped_send	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * buf,int num_instances,int dst,int tag,MPI_Comm comm) const
wrapped_send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send_recv(const Type* send_buf, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * send_buf,int num_send_instances,int dst,int send_tag,Type * recv_buf,int num_recv_instances,int src,int recv_tag,MPI_Comm comm,MPI_Status * status) const
write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
zcross_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type zcross_prod(const Vec2<OtherType>& to_zcross) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_zcross) const
~Compiler	compiler_class.cpp	/^Compiler::~Compiler()$/;"	kind:f	class:frost_hdl::Compiler	signature:()
~Compiler	compiler_class.hpp	/^	virtual ~Compiler();$/;"	kind:p	class:frost_hdl::Compiler	access:public	signature:()
~CompilerErrorListener	compiler_error_listener_class.cpp	/^CompilerErrorListener::~CompilerErrorListener()$/;"	kind:f	class:frost_hdl::CompilerErrorListener	signature:()
~CompilerErrorListener	compiler_error_listener_class.hpp	/^	virtual ~CompilerErrorListener();$/;"	kind:p	class:frost_hdl::CompilerErrorListener	access:public	signature:()
~CompilerGrammarLexer	gen_src/CompilerGrammarLexer.cpp	/^CompilerGrammarLexer::~CompilerGrammarLexer() {$/;"	kind:f	class:CompilerGrammarLexer	signature:()
~CompilerGrammarLexer	gen_src/CompilerGrammarLexer.h	/^  ~CompilerGrammarLexer();$/;"	kind:p	class:CompilerGrammarLexer	access:public	signature:()
~CompilerGrammarParser	gen_src/CompilerGrammarParser.cpp	/^CompilerGrammarParser::~CompilerGrammarParser() {$/;"	kind:f	class:CompilerGrammarParser	signature:()
~CompilerGrammarParser	gen_src/CompilerGrammarParser.h	/^  ~CompilerGrammarParser();$/;"	kind:p	class:CompilerGrammarParser	access:public	signature:()
~MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	virtual inline ~MpiHandler()$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:()
~ScopedTableBase	scoped_table_base_class.hpp	/^	virtual ~ScopedTableBase()$/;"	kind:f	class:frost_hdl::ScopedTableBase	access:public	signature:()
~ScopedTableNode	scoped_table_base_class.hpp	/^	virtual ~ScopedTableNode()$/;"	kind:f	class:frost_hdl::ScopedTableNode	access:public	signature:()
~SymbolTable	symbol_table_class.cpp	/^SymbolTable::~SymbolTable()$/;"	kind:f	class:frost_hdl::SymbolTable	signature:()
~SymbolTable	symbol_table_class.hpp	/^	virtual ~SymbolTable();$/;"	kind:p	class:frost_hdl::SymbolTable	access:public	signature:()
