syn keyword CTagsMember _subpass _can_be_parameterized _is_task _str_pool MAX_SUBPASS _ctx _condition
syn keyword CTagsMember frost_statement_table _iter_sym _exprs _frost_full_type _lexer _parameter_connection_table _param_1 _edge_sens_type _temp_value _filename _list_parsed_src_code _argc_ptr _size _data _right parent _symbol_table _src_line curr_frost_package _decisionToDFA frost_module_instance_table _tree _ident_expr _frost_lhs_type_table _handles_children_eval _frost_program _semi_hidden_children _world_size _left_dim_expr _value _module_scope _vocabulary _children _context _output_symbol_table
syn keyword CTagsMember _frost_lhs_type _min_world_size _param_0 _init _pass _table y _parent _port_type frost_full_type_table _symbol _parameter_symbol_table _arr _literalNames _where _modeNames frost_module_table end_tp table _tokens _component_data _ruleNames _what _ptvisitor_error_listener _channelNames _serializedATN frost_function_table _frost_function_table _type _parser _size_2d _ident children _tokenNames _prev start_tp _node_pool _size_expr _input_symbol_table frost_package_table
syn keyword CTagsMember frost_lhs_type_table local_symbol_table _left _instance _composite_vars _is_signed root _data_pool _argv_ptr _handles_value_set_size _frost_statement_table _is_self_determined _world_rank frost_generate_block_table _funcs _is_constant _curr _atn _expr_num_data_pool _stacks _input_stream _src_code_pos _inner_map x _header curr_frost_module _src_pos_in_line _sharedContextCache _num_threads_per_proc _scope_num _symbolicNames _port_connection_table _is_constexpr _right_dim_expr
syn keyword CTagsEnumeratorName __anon9adf63450203 EdgeSensType PortType ErrorCode DriverType ComponentType __anon9adf63450103 __anon94b0bf380103 ScalarOrArray FrostSourceType SliceType ModuleOrInterface LhsCategory Pass
syn keyword CTagsEnumerationValue RuleGenerateBlockInModule Done TokKwInitial
syn keyword CTagsEnumerationValue TokKwSwitch TokKwDefault BehavBlockAlwaysSeq TokKwInout TokKwDollarPow DollarFunction TokOther ListModuleInnerDecl RuleLhsBuiltinTypeName BehavBlockInitial RuleLhsUnscopedCstmTypeName RuleIdentConcatExpr TokKwDollarSize RuleDeclPortVarList TokColon RuleExprLogical Unpacked RuleGenerateBlockHeaderForLoop TokKwWhile Posedge TokQmark RuleRawNumExpr TokKwInterface TokKwVirtual TokKwPseudoFuncRepl Packed RuleSliceWithAny Sliced TokKwFunction Interface TokLBrace
syn keyword CTagsEnumerationValue RuleModuleScope RuleStmtBehavHeaderForLoop RuleExpr RuleIdentName RuleLhsScopedCstmTypeName RuleDeclLocalparamList RuleExprBitNot RuleGenerateBlockAnyHeader RuleIdentSizedNumExpr TokKwPrivate TokKwDollarMsbpos RuleScopedIdentName RuleDeclParameterVar UnOp TokKwDollarIsUnsgn ContAssign IndexedAndSlicedArray TooFewProcs SlicedVector IndexedAndOneBitSlicedArray TokKwUnpacked RuleExprPlusUnary FinishRawPackageConstruct TokKwDollarHigh Concat RuleDeclParameterVarList
syn keyword CTagsEnumerationValue RuleDeclOnePortVar TokKwParameter RuleExprMinusUnary TokRParen RuleProgram RuleRawSizedNumExpr RuleExprCompare RuleSliceWithRange RuleInsidePackage RuleDeclModule TokKwModport TokKwStruct TokKwPacked TokKwAlwaysComb Module RuleExprLogNot RuleSliceWithOne LexLineComment MemberAccess TokKwUnion TokKwDo RuleStmtBehavHeaderIf Scalar SizeTooBig NonSliced RuleStmtBehavHeaderElseif RuleModuleStmtInstantiateModule RuleDeclNoLhsTypeVar BehavBlockAlwaysComb RuleNumExpr RulePureIdent
syn keyword CTagsEnumerationValue RuleExprAddSub TokKwEnum RulePseudoFuncCallRange TokNumber TokSemicolon RuleExprCastSgn OneBitSlicedVector DidQuitWithMiscOutput TokQuote Enum TokKwDollarLast TokKwNegedge TokKwSwitchz TokRBracket RuleInstantiateModuleParameterConnectionList LexWhitespace TokComma Negedge RuleSlicedPureIdentExpr NonPort IndexedArray RuleInstantiateModuleConnectionList ListPackageInnerDecl TokKwProtected FakeError TokKwTask TokPeriod TokRBrace RuleExprMulDivModEtc TokGenScope
syn keyword CTagsEnumerationValue None TokKwDollarIsSgn RuleDeclPortDirectionalVarList RuleExprClog2 TokLBracket TokKwDollarFirst RuleStmtBehavHeaderElse RuleDeclPackage TokKwAlwaysSeq ListModuleIdentifiers Input RuleExprCastUnsgn TokLParen Array TokKwDollarLow RuleDeclNoKwLocalparam ListPackageIdentifiers Output TokKwCase RuleGenerateBlockHeaderIf RuleNonSlicedPureIdentExpr RuleDeclVarList RuleModuleStmtContAssign FinishRawModuleConstruct RuleIdentExpr TokKwPosedge RuleLhsTypeName TokKwPublic TokKwClass
syn keyword CTagsFunction set_header Initializer visitInstantiateModuleConnectionList start stop now_as_gmtime fprintout test_expr_num_conversion reportContextSensitivity dblpretabbed TokKwUnsigned is_valid_lhs exprBitNot _inner_make_expr_concat component_type moduleStmtContAssign change_full_type is_same_builtin_ignore_signedness reduce
syn keyword CTagsFunction str_is_base_10_sint_bignum _set_semi_hidden_children in_range has_changed construct_str_from_pointer insert_or_assign _condition_child write_json TokKwInput err put_now_as_gmtime TokKwDollarClog2 recv min_va mkscope _binop_str attempt_push_back next_top_node is_array declParameterVarList convert_to_string _set_value _frost_source_type raw_comm_rank _unop_str reportAmbiguity TokKwPackage is_unpacked_composite data find_symbol TokKwFor syntaxError in_frost_lhs_type declVarList
syn keyword CTagsFunction _range_left_expr _starting_length getVocabulary expr in_range_inclusive make_expr_ident_sized_hc_num convert_to_errwarn_string visitPureIdent clear_and_set_bits _is_always_constant _all_children in_frost_module sconcat wrapped_send_recv instantiateModuleConnectionList _condition_child_value declParameterVar visitExprMulDivModEtc quit_with_misc_output total_num_threads strappcom2 TokKwInstance TokOpCompare width printout can_be_parameterized getModeNames convert_str_to syntax_error
syn keyword CTagsFunction _highest_desc_size_with_effect set_bits_with_range get_stdin_as_str custom_abs raw_abort slicedPureIdentExpr TokOpMulDivMod _only_child_value _make_src_code_pos visitInsidePackage pseudoFuncCallRange getATN _left_child_value put_now_as_localtime visitInstantiateModuleParameterConnectionList is_enum lhsUnscopedCstmTypeName generateBlockInModule warn getChannelNames getGrammarFileName make_expr_hc_num_from_expr_num is_packed_composite send count_leading_zeros init_array
syn keyword CTagsFunction declOnePortVar clear_and_set_bits_with_range debug_print_json test_expr_num_slice_with_range exprLogical _left_child anything_matches visitDeclModule visitExprCastUnsgn visitNumExpr show_expr _has_only_constant_children perf_lsl getRuleNames visitLhsScopedCstmTypeName TokBinNum convert_to_verilog_literal sliceWithOne visitLhsTypeName _when_true_child stmtBehavHeaderIf visitLhsUnscopedCstmTypeName stmtBehavHeaderElseif visitStmtBehavHeaderForLoop set_multiple_bits num_children
syn keyword CTagsFunction identName test_expr_num_size_change sliceWithRange dup_expr_num_data visitExprLogical get_istream_as_str perf_slice_with_range stmtBehavHeaderForLoop get_bits_with_range back_up_and_update visitDeclPortDirectionalVarList regular_abort TokOpLogical stmtBehavHeaderElse height now_as_time_t _width_child size_2d TokBitInvert get_hrc_now visitSliceWithAny _children_affect_length _right_child_value identExpr visitStmtBehavHeaderElse _warn to_hdl_source visitRawSizedNumExpr TokKwOutput
syn keyword CTagsFunction make_expr_concat lhsScopedCstmTypeName copy_from_bignum_with_smallest_size is_builtin visitDeclNoLhsTypeVar _extra_check_for_references_symbol bprange_is_all scopedIdentName TokDecNum TokKwLocalparam _perf_mega_descs_cast printerr instantiateModuleParameterConnectionList exprLogNot left_dim _in_package_pass visitIdentSizedNumExpr moduleStmtInstantiateModule osprint_arr visitExprLogNot visitDeclLocalparamList EOF wrapped_send back_up visitGenerateBlockInModule _right_child
syn keyword CTagsFunction TokExclamPoint _inner_finish_init_value declModule pretabbed now_as_localtime construct_initial_type_ident_from_pointer exprCastUnsgn one_bit raw_init visitIdentExpr is_constant TokKwGenerate getTokenNames visitStmtBehavHeaderIf inner_full_evaluate visitExprBitNot wrapped_recv vals_of_enum rawNumExpr insidePackage TokKwLogic _when_true_child_value make_expr_unop visitSliceWithOne visitDeclVarList contains_symbol declLocalparamList strappcom identSizedNumExpr is_leaf
syn keyword CTagsFunction visitExprPlusUnary arr_memcpy dup_str contains_symbol_in_top_scope is_same_rhs_type visitIdentConcatExpr _inner_save_generic clear_bits TokKwDollarUnsgn moduleScope _set_exprs evaluate size perf_lsr _one_bit_index_expr visitProgram driver_type nonSlicedPureIdentExpr visitModuleStmtInstantiateModule _when_false_child_value max_va arr_memset _make_for_loop_iter_lhs_type arr full_evaluate_if_constant osprintout type_is_signed exprCastSgn visitLhsBuiltinTypeName set_bits
syn keyword CTagsFunction _insert_module_port_var parse_json send_single visitIdentName visitGenerateBlockAnyHeader copy_from_bignum _pseudo_func_call_range _only_child reportAttemptingFullContext rmscope multiple_bits visitExprCompare ident _width_child_index visitExpr visitExprAddSub declPackage pureIdent TokMinus declPortVarList set_bit test_cpp_expressions find_in_this_blklev get_hrc_now_time_t raw_finalize find_symbol_in_top_scope _in_module_pass declNoKwLocalparam program _when_false_child
syn keyword CTagsFunction make_expr_hc_num TokKwPseudoFuncConcat construct_initial_type_ident_from_two_ptrs clear_bits_with_range exprPlusUnary recv_single TokKwModule TokKwPseudoFuncRange slice_type visitGenerateBlockHeaderForLoop TokKwElse is_ascending get_json_value_type_as_str lhs_category send_recv is_vector insert TokPlus _evaluate _reparse exprCompare is_same_builtin_strict_signedness TokKwDollarSgn in_frost_package print_json_value_type main exprMulDivModEtc convert_bignum_to_str _set_children
syn keyword CTagsFunction argv is_negative TokIdent exprAddSub rawSizedNumExpr construct_initial_builtin_type_ident sliceWithAny TokKwIf visitGenerateBlockHeaderIf find starting_thread_num _default_initial_seed TokHexNum convert_to_unsigned_bignum visitDeclNoKwLocalparam declNoLhsTypeVar generateBlockAnyHeader generateBlockHeaderForLoop argc _has_any_unsigned_first_layer_non_sd_descs _init_array_backend TokAssign visitExprCastSgn TokKwSigned _array_index_expr visitDeclPortVarList get_bits run _err
syn keyword CTagsFunction convert_to_bignum cmpeq_array lhsTypeName visitDeclParameterVarList visitModuleStmtContAssign finish_init_value lhsBuiltinTypeName visitDeclPackage visitExprClog2 accept TokOpBitwise _get_first_layer_ptln_descs TokScope exprMinusUnary _is_pseudo_top_level_node set_parent visitSlicedPureIdentExpr set_size numExpr references_symbol find_or_insert test_implemented_expressions visitPseudoFuncCallRange generateBlockHeaderIf visitNonSlicedPureIdentExpr is_descending getSerializedATN
syn keyword CTagsFunction raw_comm_size getRuleIndex right_dim _full_evaluate TokApostrophe has_default_value visitScopedIdentName width_of_type perf_asr set_data visitRawNumExpr exprClog2 append_child back_up_move_only_pcps func TokKwAssign visitModuleScope clamp_to_range _range_right_expr make_expr_binop visitStmtBehavHeaderElseif visitExprMinusUnary init identConcatExpr visitDeclOnePortVar at _perf_compare visitSliceWithRange send_recv_single visitDeclParameterVar declPortDirectionalVarList
syn keyword CTagsType FrostModuleTable s32 Ident s64 InstanceType Node s16 ChildrenList FrostGenerateBlockInModuleTable FrostInstModuleTable VisitorRetType s8 EnumVals SeedType RawExprNumData u32
syn keyword CTagsType Temp1 FrostFullTypeTable DimensionExpr FrostStatementTable u16 BigNum SmallNum CompositeVars Parser ExprNumData ScopeLevel FrostFunctionTable ModuleScopeParent ModuleInstConnectionTable ListParsedSrcCode PassUint u64 DescendantsList FrostGenerateBlockInInterfaceTable SymbolTable uint ParserRuleContext Temp0 FrostModuleInstanceTable CompositeFuncs SavedString ExprsList FrostInterfaceTable FrostPackageTable AnyGenerateBlockHeader RawSavedString u8 CmpEvalFunc Base FrostLhsTypeTable
syn keyword CTagsDefinedName TO_HDL_SOURCE liborangepower_gmp_stuff_hpp ANY_ACCEPT_IF_BASIC src_frost_package_class_hpp GEN_STATIC_GENERIC_GETTER_BY_CON_REF src_super_expression_classes_hpp GEN_WITH_STACKS liborangepower_vec2_classes_hpp src_frost_function_class_hpp src_generate_block_header_classes_hpp
syn keyword CTagsDefinedName GEN_STACK GEN_STATIC_SETTER_BY_RVAL_REF liborangepower_lexer_classes_hpp DUP_CHILD src_frost_generate_block_classes_hpp ASM_COMMENT src_pseudo_func_call_range_class_hpp GEN_EXPR_GETTER _ALIGN2 src_expression_class_hpp src_module_scope_class_hpp liborangepower_str_split_helper_classes_hpp GEN_STATIC_GENERIC_SETTER_BY_RVAL_REF GEN_STATIC_GENERIC_GETTER_BY_REF GEN_STATIC_GENERIC_SETTER_BY_CON_REF src_scoped_table_classes_hpp GEN_GETTER_BY_REF src_expr_dot_cpp_defines_hpp
syn keyword CTagsDefinedName src_frost_lhs_type_class_hpp GEN_GENERIC_SETTER_BY_CON_REF liborangepower_gen_class_innards_defines_hpp ANY_JUST_ACCEPT_BASIC GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN GEN_STATIC_GETTER_BY_CON_REF liborangepower_mpi_handler_class_hpp GEN_SETTER_BY_RVAL_REF liborangepower_misc_includes_hpp src_expression_builder_class_hpp src_frost_program_class_hpp src_in_scope_errwarn_base_class_hpp src_misc_types_hpp src_symbol_value_class_hpp with liborangepower_string_conversion_stuff_hpp
syn keyword CTagsDefinedName TOK_TO_DUPPED_STR awith src_frost_module_class_hpp GEN_STATIC_SETTER_BY_VAL GEN_STATIC_SETTER_BY_CON_REF src_ptvisitor_class_hpp src_expr_expr_bin_op_classes_hpp GEN_GENERIC_GETTER_BY_REF TOKENPASTE4 src_frost_module_instance_class_hpp src_general_allocator_class_hpp src_expr_expr_ternary_class_hpp TOKENPASTE2 liborangepower_misc_defines_hpp liborangepower_with_defines_hpp liborangepower_misc_input_classes_hpp src_expr_expr_ident_classes_hpp GEN_STATIC_GENERIC_GETTER_BY_VAL
syn keyword CTagsDefinedName GEN_GETTER_BY_VAL src_expr_expr_derived_classes_hpp liborangepower_array_helper_classes_hpp GEN_GETTER_AS_POINTER GEN_SETTER_BY_VAL TOKENPASTE3 BPRANGE2SHIFTED_MASK GEN_GENERIC_CM_CONSTRUCTORS_AND_ASSIGN src_symbol_driver_block_context_class_hpp src_expr_expr_un_op_classes_hpp INNER_TOKENPASTE2 GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN src_testing_hpp GEN_GENERIC_SETTER_BY_VAL ANY_JUST_ACCEPT_LOOPED GEN_COPY_CONSTRUCTOR_AND_ASSIGN GEN_SAVE_FORWARD_DECLARE LIST_FOR_GEN_SAVE
syn keyword CTagsDefinedName GEN_STATIC_GETTER_BY_REF GEN_GETTER_AND_SETTER_BY_VAL GEN_SETTER_BY_CON_REF src_symbol_class_hpp src_expr_expr_concat_repl_classes_hpp src_src_code_pos_class_hpp GEN_SAVE liborangepower_json_stuff_hpp GEN_GETTER_BY_CON_REF GEN_STATIC_GENERIC_SETTER_BY_VAL src_scope_parent_classes_hpp src_misc_utility_funcs_hpp src_expr_num_class_hpp src_interface_scope_class_hpp INNER_TOKENPASTE1 src_frost_full_type_class_hpp MPI_HANDLER_STATIC_ASSERT_1 liborangepower_misc_utility_funcs_hpp
syn keyword CTagsDefinedName GEN_SAVE_POOLS liborangepower_misc_output_classes_hpp GEN_GENERIC_GETTER_AS_POINTER GEN_STACK_FUNCS DEBUG_EXPR GEN_GENERIC_SETTER_BY_RVAL_REF src_table_types_hpp src_expr_expr_hard_coded_num_classes_hpp src_ptvisitor_error_listener_class_hpp zwith GEN_GETTERS_BY_CON_REF_AND_REF liborangepower_misc_bitwise_funcs_hpp src_frost_statement_class_hpp liborangepower_misc_types_hpp src_parsed_src_code_class_hpp liborangepower_prev_curr_pair_classes_hpp SAFE_SAVE_EXPR BPRANGE2MASK
syn keyword CTagsDefinedName ALIGNAS_REGULAR GEN_GENERIC_GETTER_BY_VAL liborangepower_memwhatever_wrappers_hpp TOKENPASTE1 GEN_GETTER_AND_SETTER_BY_CON_REF src_has_src_code_pos_base_classes_hpp GEN_STATIC_GETTER_BY_VAL liborangepower_time_stuff_hpp ANY_PUSH_TOK_IF src_ident_table_classes_hpp liborangepower_array_2d_helper_classes_hpp GEN_GENERIC_GETTER_BY_CON_REF MPI_HANDLER_STATIC_ASSERT_0 src_misc_includes_hpp WIDTH2MP _ALIGN4 REMOVE_CONST_REF LIST_FOR_GEN_STACK liborangepower_range_funcs_hpp
syn keyword CTagsClass ExprCompareContext ExprUnOpCastUnsigned ScopedTableNode DeclModuleContext GenerateBlockHeaderForLoopContext ExprBinOpBitAsr LhsUnscopedCstmTypeNameContext ExprBaseUnOp ModuleStmtInstantiateModuleContext ExprIdentIndexedAndOneBitSlicedArray ScopedIdentTable IdentSizedNumExprContext Prng ExprUnOpLogNot
syn keyword CTagsClass PTVisitor LhsTypeNameContext ExprIdentIndexedArray IdentToPointerTable ExprBinOpBitLsl DeclParameterVarListContext DeclVarListContext Symbol FrostStmtBehavIf ExprBinOpPlus PureIdentContext SuperExpression ExprBinOpCmpGt PrevCurrPair GenerateBlockAnyHeaderContext StmtBehavHeaderElseifContext FrostStatement FrostHdlGrammarBaseVisitor ExprBinOpBitLsr FrostStmtContAssign ProgramContext ExprBinOpBitAnd ExprCastSgnContext SymbolDriverBlockContext ExprBaseArithBinOp ExprBaseBitShiftBinOp
syn keyword CTagsClass AnyPrintoutBackend ExprBinOpMul Expression FrostStmtBehavBlockAlwaysSeq ExprBinOpCmpLe ExprContext ExprBaseBinOp FrostModule GeneralAllocator ScopedIdentNameContext Profiler LhsScopedCstmTypeNameContext Vec2 PseudoFuncCallRange ExprIdentRefBase ArrayCszHelper ExprIdentIndexedAndSlicedArray FrostStmtBehavAssign ReplaceSymsMap ExprBinOpMinus ExprBaseArithLogBitUnOp IdentConcatExprContext ExprBitNotContext StmtBehavHeaderForLoopContext ParsedSrcCode ExprMinusUnaryContext NumExprContext
syn keyword CTagsClass ExprRepl ExprIdentOneBitSlicedVector DeclParameterVarContext FrostFunction PTVisitorErrorListener ExprUnOpClog2 ExprBinOpBitXor FrostHdlGrammarLexer FrostModuleInstance ExprCastUnsgnContext ExprIdentSlicedVector ModuleStmtContAssignContext StmtBehavHeaderElseContext HasSrcCodePosBase Stacks ExprBaseBitNonShiftBinOp ExprAddSubContext FrostLhsType DeclPortDirectionalVarListContext ScopedTableBase ExprBinOpCmpLt GenerateBlockInModuleContext IdentTable ModuleScopeContext
syn keyword CTagsClass FrostStmtBehavBlockAlwaysComb ExprBinOpLogAnd ExprMulDivModEtcContext InterfaceScope ExprUnOpCastSigned DeclOnePortVarContext InsidePackageContext ModuleScope PointerVector NonSlicedPureIdentExprContext ExprBinOpCmpNe LhsBuiltinTypeNameContext MpiHandler FrostGenerateBlockInModule HasSrcCodePosAndIdentBase ExprPlusUnaryContext GenerateBlockHeaderIf DeclPortVarListContext DeclPackageContext ExpressionBuilder DeclNoLhsTypeVarContext InstantiateModuleParameterConnectionListContext
syn keyword CTagsClass DeclLocalparamListContext RawNumExprContext PseudoFuncCallRangeContext SlicedPureIdentExprContext ModuleInstConnection RawSizedNumExprContext ExprLogNotContext Array2dHelper ExprUnOpMinus SliceWithAnyContext ExprBinOpLogOr ExprNum FrostHdlGrammarVisitor SliceWithRangeContext ExprUnOpPlus ExprBinOpCmpEq ExprBaseLogCmpBinOp GenerateBlockHeaderIfContext ExprBaseDollarFuncUnOp DeclNoKwLocalparamContext ArrayCsz2dHelper SliceWithOneContext FrostStmtBehavBlockInitial FrostPackage
syn keyword CTagsClass FrostHdlGrammarParser ExprBinOpMod GenerateBlockHeaderFor SrcCodePos ExprBinOpDiv ExprBinOpCmpGe FrostFullType ExprIdentSizedHardCodedNum IdentNameContext ComponentData ExprTernary ExprUnOpBitNot ExprHardCodedNum SymbolValue StmtBehavHeaderIfContext ExprConcat ExprBinOpBitOr ExprClog2Context ArrayHelper ScopedUnnamedTable OrderedIdentToPointerTable ExprLogicalContext MoveOnlyPrevCurrPair FrostProgram ExprIdentName IdentExprContext InstantiateModuleConnectionListContext
syn keyword CTagsNamespace containers range json strings bignum printout_etc misc_util mpi time bitwise frost_hdl misc_input integer_types liborangepower

syn match CTagsFunction /\<contains\>/
" Matches for file gen_src/FrostHdlGrammarLexer.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "gen_src/FrostHdlGrammarLexer.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsFunction _vocabulary
	
endif
" Matches for file gen_src/FrostHdlGrammarParser.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "gen_src/FrostHdlGrammarParser.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsFunction __anond04542201902 __anond04542202902 __anond04542203802 __anond04542201102 __anond04542203502 __anond04542201c02 __anond04542202802 __anond04542200f02
	syn keyword CTagsFunction __anond04542203702 __anond04542200902 __anond04542202402 __anond04542202d02 __anond04542203002 __anond04542203602 __anond04542200c02 __anond04542200602 __anond04542201b02 __anond04542201702 __anond04542202502 __anond04542203402 __anond04542201a02 _vocabulary __anond04542201502 __anond04542203302 __anond04542200702 __anond04542201202 __anond04542202e02 __anond04542200b02 __anond04542201d02 __anond04542201f02 __anond04542202f02 __anond04542200a02 __anond04542201002
	syn keyword CTagsFunction __anond04542202102 __anond04542202b02 __anond04542200502 __anond04542201302 __anond04542201402 __anond04542203202 __anond04542201602 __anond04542200102 __anond04542200202 __anond04542200d02 __anond04542202302 __anond04542203102 __anond04542200e02 __anond04542200302 __anond04542200402 __anond04542203902 __anond04542202002 __anond04542202a02 __anond04542202602 __anond04542201802 __anond04542202c02 __anond04542201e02 __anond04542200802 __anond04542202202 __anond04542202702
	
endif
" Matches for file general_allocator_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "general_allocator_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsDefinedName GEN_SAVE_POOLS GEN_SAVE_BACK_UP
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file liborangepower_src/json_stuff/json_stuff.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "liborangepower_src/json_stuff/json_stuff.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsFunction __anon12bbe81d0302 __anon12bbe81d0402 json_err __anon12bbe81d0602 __anon12bbe81d0502 __anon12bbe81d0202 __anon12bbe81d0102
	syn keyword CTagsNamespace json liborangepower
	
endif
" Matches for file expr/expr_bin_op_classes.hpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr/expr_bin_op_classes.hpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsFunction __anonfd5579cb0502 __anonfd5579cb0402 __anonfd5579cb0202 __anonfd5579cb0302 __anonfd5579cb0602 __anonfd5579cb0102
	
endif
" Matches for file liborangepower_src/gmp_stuff/gmp_stuff.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "liborangepower_src/gmp_stuff/gmp_stuff.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace liborangepower bignum
	
endif
" Matches for file expr/expr_bin_op_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr/expr_bin_op_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file expr/expr_concat_repl_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr/expr_concat_repl_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file expr/expr_hard_coded_num_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr/expr_hard_coded_num_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file expr/expr_ident_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr/expr_ident_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file expr/expr_ternary_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr/expr_ternary_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file expr/expr_un_op_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr/expr_un_op_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file expr_num_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expr_num_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file expression_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "expression_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_full_type_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_full_type_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_function_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_function_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_generate_block_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_generate_block_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_lhs_type_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_lhs_type_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_module_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_module_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_module_instance_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_module_instance_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_package_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_package_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_program_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_program_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file frost_statement_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "frost_statement_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file has_src_code_pos_base_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "has_src_code_pos_base_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file misc_types.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "misc_types.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file module_scope_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "module_scope_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file parsed_src_code_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "parsed_src_code_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file pseudo_func_call_range_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "pseudo_func_call_range_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_decl_var_funcs.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_decl_var_funcs.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_expr_funcs.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_expr_funcs.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_generate_funcs.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_generate_funcs.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_module_funcs.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_module_funcs.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_package_funcs.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_package_funcs.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_program_func.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_program_func.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_stmt_behav_funcs.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_stmt_behav_funcs.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor/ptvisitor_class_visit_type_funcs.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor/ptvisitor_class_visit_type_funcs.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file ptvisitor_error_listener_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ptvisitor_error_listener_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file scope_parent_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "scope_parent_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file src_code_pos_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "src_code_pos_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file super_expression_classes.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "super_expression_classes.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file symbol_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "symbol_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file symbol_driver_block_context_class.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "symbol_driver_block_context_class.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
" Matches for file testing.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "testing.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace frost_hdl
	
endif
