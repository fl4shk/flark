!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/bb4f87cd/
ALIGNAS_REGULAR	liborangepower_src/misc_defines.hpp	/^#define ALIGNAS_REGULAR /;"	kind:d
ASM_COMMENT	liborangepower_src/misc_defines.hpp	/^#define ASM_COMMENT(/;"	kind:d	signature:(stuff)
AlwaysBlkBlock	ast_node_type_enum.hpp	/^	AlwaysBlkBlock,$/;"	kind:e	enum:Type	access:public
AlwaysCombBlock	ast_node_type_enum.hpp	/^	AlwaysCombBlock,$/;"	kind:e	enum:Type	access:public
AlwaysFfBlock	ast_node_type_enum.hpp	/^	AlwaysFfBlock,$/;"	kind:e	enum:Type	access:public
AnyForStmt	ast_node_type_enum.hpp	/^	AnyForStmt,$/;"	kind:e	enum:Type	access:public
AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::misc_output
ArgList	ast_node_type_enum.hpp	/^	ArgList,$/;"	kind:e	enum:Type	access:public
ArgPortSublist	ast_node_type_enum.hpp	/^	ArgPortSublist,$/;"	kind:e	enum:Type	access:public
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s_arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s_arr,const Vec2<size_t> & s_size_2d)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s_arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s_arr)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : _arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
AssertStmt	ast_node_type_enum.hpp	/^	AssertStmt,$/;"	kind:e	enum:Type	access:public
AssumeStmt	ast_node_type_enum.hpp	/^	AssumeStmt,$/;"	kind:e	enum:Type	access:public
Auto	ast_node_type_enum.hpp	/^	Auto,$/;"	kind:e	enum:Type	access:public
BPRANGE2MASK	liborangepower_src/misc_defines.hpp	/^#define BPRANGE2MASK(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
BPRANGE2SHIFTED_MASK	liborangepower_src/misc_defines.hpp	/^#define BPRANGE2SHIFTED_MASK(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
Base	ast_node_type_enum.hpp	/^	Base,$/;"	kind:e	enum:Type	access:public
Base	liborangepower_src/stateful_parser_base_class.hpp	/^		using Base = SeqParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:SeqParse<DerivedType>	access:public
Base	liborangepower_src/stateful_parser_base_class.hpp	/^		using Base = SeqParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:SeqParse<DerivedType>	access:public
Base	parser_class.hpp	/^	using Base = OptAsFuncArgParserBase<Lexer>;$/;"	kind:t	class:frost_hdl::Parser	typeref:typename:OptAsFuncArgParserBase<Lexer>	access:public
BehavAssignStmt	ast_node_type_enum.hpp	/^	BehavAssignStmt,$/;"	kind:e	enum:Type	access:public
BigNum	liborangepower_src/gmp_stuff.hpp	/^typedef mpz_class BigNum;$/;"	kind:t	namespace:liborangepower::bignum	typeref:typename:mpz_class
BinopExprBase	ast_node_type_enum.hpp	/^	BinopExprBase,$/;"	kind:e	enum:Type	access:public
BinopExprBitAnd	ast_node_type_enum.hpp	/^	BinopExprBitAnd,$/;"	kind:e	enum:Type	access:public
BinopExprBitAsr	ast_node_type_enum.hpp	/^	BinopExprBitAsr,$/;"	kind:e	enum:Type	access:public
BinopExprBitLsl	ast_node_type_enum.hpp	/^	BinopExprBitLsl,$/;"	kind:e	enum:Type	access:public
BinopExprBitLsr	ast_node_type_enum.hpp	/^	BinopExprBitLsr,$/;"	kind:e	enum:Type	access:public
BinopExprBitOr	ast_node_type_enum.hpp	/^	BinopExprBitOr,$/;"	kind:e	enum:Type	access:public
BinopExprBitXor	ast_node_type_enum.hpp	/^	BinopExprBitXor,$/;"	kind:e	enum:Type	access:public
BinopExprCmpEq	ast_node_type_enum.hpp	/^	BinopExprCmpEq,$/;"	kind:e	enum:Type	access:public
BinopExprCmpGe	ast_node_type_enum.hpp	/^	BinopExprCmpGe,$/;"	kind:e	enum:Type	access:public
BinopExprCmpGt	ast_node_type_enum.hpp	/^	BinopExprCmpGt,$/;"	kind:e	enum:Type	access:public
BinopExprCmpLe	ast_node_type_enum.hpp	/^	BinopExprCmpLe,$/;"	kind:e	enum:Type	access:public
BinopExprCmpLt	ast_node_type_enum.hpp	/^	BinopExprCmpLt,$/;"	kind:e	enum:Type	access:public
BinopExprCmpNe	ast_node_type_enum.hpp	/^	BinopExprCmpNe,$/;"	kind:e	enum:Type	access:public
BinopExprDiv	ast_node_type_enum.hpp	/^	BinopExprDiv,$/;"	kind:e	enum:Type	access:public
BinopExprDollarPow	ast_node_type_enum.hpp	/^	BinopExprDollarPow,$/;"	kind:e	enum:Type	access:public
BinopExprLogAnd	ast_node_type_enum.hpp	/^	BinopExprLogAnd,$/;"	kind:e	enum:Type	access:public
BinopExprLogOr	ast_node_type_enum.hpp	/^	BinopExprLogOr,$/;"	kind:e	enum:Type	access:public
BinopExprMinus	ast_node_type_enum.hpp	/^	BinopExprMinus,$/;"	kind:e	enum:Type	access:public
BinopExprMod	ast_node_type_enum.hpp	/^	BinopExprMod,$/;"	kind:e	enum:Type	access:public
BinopExprMul	ast_node_type_enum.hpp	/^	BinopExprMul,$/;"	kind:e	enum:Type	access:public
BinopExprPlus	ast_node_type_enum.hpp	/^	BinopExprPlus,$/;"	kind:e	enum:Type	access:public
BracketPair	ast_node_type_enum.hpp	/^	BracketPair,$/;"	kind:e	enum:Type	access:public
Call	ast_node_type_enum.hpp	/^	Call,$/;"	kind:e	enum:Type	access:public
CatExpr	ast_node_type_enum.hpp	/^	CatExpr,$/;"	kind:e	enum:Type	access:public
Child	ast_node_classes.hpp	/^	using Child = unique_ptr<NodeBase>;$/;"	kind:t	class:frost_hdl::ast::NodeBase	typeref:typename:unique_ptr<NodeBase>	access:public
Child	liborangepower_src/parse_tree_base_class.hpp	/^	using Child = std::variant<OneChild, ChildVec>;$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::variant<OneChild,ChildVec>	access:public
ChildVec	liborangepower_src/parse_tree_base_class.hpp	/^	using ChildVec = std::vector<OneChild>;$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::vector<OneChild>	access:public
CircLinkedList	liborangepower_src/linked_list_classes.hpp	/^	inline CircLinkedList()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	access:public	signature:()
CircLinkedList	liborangepower_src/linked_list_classes.hpp	/^class CircLinkedList$/;"	kind:c	namespace:liborangepower::containers
Class	ast_node_type_enum.hpp	/^	Class,$/;"	kind:e	enum:Type	access:public
ConstString	ast_node_type_enum.hpp	/^	ConstString,$/;"	kind:e	enum:Type	access:public
ContAssignStmt	ast_node_type_enum.hpp	/^	ContAssignStmt,$/;"	kind:e	enum:Type	access:public
CoverStmt	ast_node_type_enum.hpp	/^	CoverStmt,$/;"	kind:e	enum:Type	access:public
DataElem	liborangepower_src/parse_tree_base_class.hpp	/^	using DataElem = std::variant<bool, std::string, bignum::BigNum,$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::variant<bool,std::string,bignum::BigNum,TokType>	access:public
DeclCallable	ast_node_type_enum.hpp	/^	DeclCallable,$/;"	kind:e	enum:Type	access:public
DeclConstList	ast_node_type_enum.hpp	/^	DeclConstList,$/;"	kind:e	enum:Type	access:public
DeclFunc	ast_node_type_enum.hpp	/^	DeclFunc,$/;"	kind:e	enum:Type	access:public
DeclProc	ast_node_type_enum.hpp	/^	DeclProc,$/;"	kind:e	enum:Type	access:public
DeclTask	ast_node_type_enum.hpp	/^	DeclTask,$/;"	kind:e	enum:Type	access:public
DeclVarList	ast_node_type_enum.hpp	/^	DeclVarList,$/;"	kind:e	enum:Type	access:public
DefaultCaseItem	ast_node_type_enum.hpp	/^	DefaultCaseItem,$/;"	kind:e	enum:Type	access:public
DidQuitWithMiscOutput	liborangepower_src/mpi_handler_class.hpp	/^		DidQuitWithMiscOutput,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
DollarResizeStmt	ast_node_type_enum.hpp	/^	DollarResizeStmt,$/;"	kind:e	enum:Type	access:public
EdgeList	ast_node_type_enum.hpp	/^	EdgeList,$/;"	kind:e	enum:Type	access:public
Enum	ast_node_type_enum.hpp	/^	Enum,$/;"	kind:e	enum:Type	access:public
ErrWarnBase	err_warn_base_class.hpp	/^	inline ErrWarnBase() = default;$/;"	kind:p	class:frost_hdl::ErrWarnBase	access:public	signature:()
ErrWarnBase	err_warn_base_class.hpp	/^class ErrWarnBase$/;"	kind:c	namespace:frost_hdl
ErrorCode	liborangepower_src/mpi_handler_class.hpp	/^	enum class ErrorCode : int$/;"	kind:g	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
Exec	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		Exec,$/;"	kind:e	enum:liborangepower::lang::OptAsFuncArgParserBase::Opt	access:public
ExprBase	ast_node_type_enum.hpp	/^	ExprBase,$/;"	kind:e	enum:Type	access:public
ExprCaseItem	ast_node_type_enum.hpp	/^	ExprCaseItem,$/;"	kind:e	enum:Type	access:public
ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(ExprNumData&& s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(ExprNumData && s_data,bool s_is_signed)
ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(bool s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(bool s_data,bool s_is_signed)
ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const BigNum& s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const BigNum & s_data,bool s_is_signed)
ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const BigNum& s_data, size_t s_data_size,$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const BigNum & s_data,size_t s_data_size,bool s_is_signed)
ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const ExprNum& src, size_t s_data_size)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const ExprNum & src,size_t s_data_size)
ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const ExprNum& src, size_t s_data_size, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const ExprNum & src,size_t s_data_size,bool s_is_signed)
ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const ExprNumData& s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const ExprNumData & s_data,bool s_is_signed)
ExprNum	expr_num_class.hpp	/^	ExprNum() = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:()
ExprNum	expr_num_class.hpp	/^	ExprNum(ExprNumData&& s_data, bool s_is_signed=false);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(ExprNumData && s_data,bool s_is_signed=false)
ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNum& src, size_t s_data_size);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & src,size_t s_data_size)
ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNum& src, size_t s_data_size, bool s_is_signed);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & src,size_t s_data_size,bool s_is_signed)
ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & to_copy)
ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNumData& s_data, bool s_is_signed=false);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNumData & s_data,bool s_is_signed=false)
ExprNum	expr_num_class.hpp	/^	explicit ExprNum(bool s_data, bool s_is_signed=false);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(bool s_data,bool s_is_signed=false)
ExprNum	expr_num_class.hpp	/^	explicit ExprNum(const BigNum& s_data, bool s_is_signed);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const BigNum & s_data,bool s_is_signed)
ExprNum	expr_num_class.hpp	/^	explicit ExprNum(const BigNum& s_data, size_t s_data_size,$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const BigNum & s_data,size_t s_data_size,bool s_is_signed)
ExprNum	expr_num_class.hpp	/^class ExprNum final$/;"	kind:c	namespace:frost_hdl
ExprNumData	expr_num_class.hpp	/^	typedef std::vector<bool> ExprNumData;$/;"	kind:t	class:frost_hdl::ExprNum	typeref:typename:std::vector<bool>	access:public
ExprValue	expr_value_class.cpp	/^ExprValue::ExprValue()$/;"	kind:f	class:frost_hdl::ExprValue	signature:()
ExprValue	expr_value_class.hpp	/^	ExprValue();$/;"	kind:p	class:frost_hdl::ExprValue	access:public	signature:()
ExprValue	expr_value_class.hpp	/^class ExprValue final$/;"	kind:c	namespace:frost_hdl
Extends	ast_node_type_enum.hpp	/^	Extends,$/;"	kind:e	enum:Type	access:public
FakeError	liborangepower_src/mpi_handler_class.hpp	/^		FakeError,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
FirstValidInvalidInst	liborangepower_src/stateful_parser_base_class.hpp	/^		class FirstValidInvalidInst$/;"	kind:c	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public
ForStmt	ast_node_type_enum.hpp	/^	ForStmt,$/;"	kind:e	enum:Type	access:public
GEN_ACCEPT	ast_node_classes.cpp	/^#define GEN_ACCEPT(/;"	kind:d	file:	signature:(AstNodeType,suffix)
GEN_ACCEPT	ast_node_classes.hpp	/^#define GEN_ACCEPT /;"	kind:d
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	err_warn_base_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(ErrWarnBase);$/;"	kind:p	class:frost_hdl::ErrWarnBase	access:public	signature:(ErrWarnBase)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	expr_value_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(ExprValue);$/;"	kind:p	class:frost_hdl::ExprValue	access:public	signature:(ExprValue)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(/;"	kind:d	signature:(Type)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/linked_list_classes.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(Node);$/;"	kind:p	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:(Node)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/linked_list_classes.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(NodeIterator);$/;"	kind:p	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:(NodeIterator)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/prev_curr_pair_classes.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(PrevCurrPair);$/;"	kind:p	class:liborangepower::containers::PrevCurrPair	access:public	signature:(PrevCurrPair)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(ListParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::ListParse	access:public	signature:(ListParse)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(OrParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::OrParse	access:public	signature:(OrParse)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(SeqParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:(SeqParse)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(UnitParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public	signature:(UnitParse)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/vec2_classes.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(Vec2);$/;"	kind:p	class:liborangepower::containers::Vec2	access:public	signature:(Vec2)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	pt_visitor_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(PtVisitor);$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:(PtVisitor)
GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	src_code_chunk_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(SrcCodeChunk);$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:(SrcCodeChunk)
GEN_COPY_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_COPY_ONLY_CONSTRUCTORS_AND_ASSIGN(/;"	kind:d	signature:(Type)
GEN_GENERIC_CM_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_CM_CONSTRUCTORS_AND_ASSIGN(/;"	kind:d	signature:(Type,copy_dd,move_dd)
GEN_GENERIC_GETTER_AS_POINTER	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_GETTER_AS_POINTER(/;"	kind:d	signature:(prefix,suffix)
GEN_GENERIC_GETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_GETTER_BY_CON_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_GENERIC_GETTER_BY_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_GETTER_BY_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_GENERIC_GETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_GETTER_BY_VAL(/;"	kind:d	signature:(prefix,suffix)
GEN_GENERIC_SETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_SETTER_BY_CON_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_GENERIC_SETTER_BY_RVAL_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_SETTER_BY_RVAL_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_GENERIC_SETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GENERIC_SETTER_BY_VAL(/;"	kind:d	signature:(prefix,suffix)
GEN_GETTERS_BY_CON_REF_AND_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GETTERS_BY_CON_REF_AND_REF(/;"	kind:d	signature:(suffix)
GEN_GETTER_AND_SETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GETTER_AND_SETTER_BY_CON_REF(/;"	kind:d	signature:(stuff)
GEN_GETTER_AND_SETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GETTER_AND_SETTER_BY_VAL(/;"	kind:d	signature:(stuff)
GEN_GETTER_AND_SETTER_BY_VAL	pt_visitor_class.hpp	/^	GEN_GETTER_AND_SETTER_BY_VAL(pt_root)$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:(pt_root)
GEN_GETTER_AS_POINTER	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GETTER_AS_POINTER(/;"	kind:d	signature:(suffix)
GEN_GETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GETTER_BY_CON_REF(/;"	kind:d	signature:(suffix)
GEN_GETTER_BY_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GETTER_BY_REF(/;"	kind:d	signature:(suffix)
GEN_GETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_GETTER_BY_VAL(/;"	kind:d	signature:(suffix)
GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(/;"	kind:d	signature:(Type)
GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(OptAsFuncArgParserBase);$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase	access:public	signature:(OptAsFuncArgParserBase)
GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/parse_tree_base_class.hpp	/^	GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(ParseTreeBase);$/;"	kind:p	class:liborangepower::lang::ParseTreeBase	access:public	signature:(ParseTreeBase)
GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/prev_curr_pair_classes.hpp	/^	GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(MoveOnlyPrevCurrPair);$/;"	kind:p	class:liborangepower::containers::MoveOnlyPrevCurrPair	access:public	signature:(MoveOnlyPrevCurrPair)
GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(WExpect);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::WExpect	access:public	signature:(WExpect)
GEN_NO_CM_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_NO_CM_CONSTRUCTORS_AND_ASSIGN(/;"	kind:d	signature:(Type)
GEN_POST_CONSTRUCTOR	ast_node_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBase);$/;"	kind:p	class:frost_hdl::ast::NodeBase	access:public	signature:(NodeBase)
GEN_POST_CONSTRUCTOR	ast_node_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeList);$/;"	kind:p	class:frost_hdl::ast::NodeList	access:public	signature:(NodeList)
GEN_POST_CONSTRUCTOR	ast_node_classes.hpp	/^#define GEN_POST_CONSTRUCTOR(/;"	kind:d	signature:(AstNodeType)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAlwaysBlkBlock);$/;"	kind:p	class:NodeAlwaysBlkBlock	access:public	signature:(NodeAlwaysBlkBlock)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAlwaysCombBlock);$/;"	kind:p	class:NodeAlwaysCombBlock	access:public	signature:(NodeAlwaysCombBlock)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAlwaysFfBlock);$/;"	kind:p	class:NodeAlwaysFfBlock	access:public	signature:(NodeAlwaysFfBlock)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAnyForStmt);$/;"	kind:p	class:NodeAnyForStmt	access:public	signature:(NodeAnyForStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeArgList);$/;"	kind:p	class:NodeArgList	access:public	signature:(NodeArgList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeArgPortSublist);$/;"	kind:p	class:NodeArgPortSublist	access:public	signature:(NodeArgPortSublist)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAssertStmt);$/;"	kind:p	class:NodeAssertStmt	access:public	signature:(NodeAssertStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAssumeStmt);$/;"	kind:p	class:NodeAssumeStmt	access:public	signature:(NodeAssumeStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAuto);$/;"	kind:p	class:NodeAuto	access:public	signature:(NodeAuto)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBehavAssignStmt);$/;"	kind:p	class:NodeBehavAssignStmt	access:public	signature:(NodeBehavAssignStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBase);$/;"	kind:p	class:NodeBinopExprBase	access:public	signature:(NodeBinopExprBase)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitAnd);$/;"	kind:p	class:NodeBinopExprBitAnd	access:public	signature:(NodeBinopExprBitAnd)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitAsr);$/;"	kind:p	class:NodeBinopExprBitAsr	access:public	signature:(NodeBinopExprBitAsr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitLsl);$/;"	kind:p	class:NodeBinopExprBitLsl	access:public	signature:(NodeBinopExprBitLsl)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitLsr);$/;"	kind:p	class:NodeBinopExprBitLsr	access:public	signature:(NodeBinopExprBitLsr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitOr);$/;"	kind:p	class:NodeBinopExprBitOr	access:public	signature:(NodeBinopExprBitOr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitXor);$/;"	kind:p	class:NodeBinopExprBitXor	access:public	signature:(NodeBinopExprBitXor)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpEq);$/;"	kind:p	class:NodeBinopExprCmpEq	access:public	signature:(NodeBinopExprCmpEq)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpGe);$/;"	kind:p	class:NodeBinopExprCmpGe	access:public	signature:(NodeBinopExprCmpGe)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpGt);$/;"	kind:p	class:NodeBinopExprCmpGt	access:public	signature:(NodeBinopExprCmpGt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpLe);$/;"	kind:p	class:NodeBinopExprCmpLe	access:public	signature:(NodeBinopExprCmpLe)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpLt);$/;"	kind:p	class:NodeBinopExprCmpLt	access:public	signature:(NodeBinopExprCmpLt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpNe);$/;"	kind:p	class:NodeBinopExprCmpNe	access:public	signature:(NodeBinopExprCmpNe)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprDiv);$/;"	kind:p	class:NodeBinopExprDiv	access:public	signature:(NodeBinopExprDiv)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprDollarPow);$/;"	kind:p	class:NodeBinopExprDollarPow	access:public	signature:(NodeBinopExprDollarPow)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprLogAnd);$/;"	kind:p	class:NodeBinopExprLogAnd	access:public	signature:(NodeBinopExprLogAnd)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprLogOr);$/;"	kind:p	class:NodeBinopExprLogOr	access:public	signature:(NodeBinopExprLogOr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprMinus);$/;"	kind:p	class:NodeBinopExprMinus	access:public	signature:(NodeBinopExprMinus)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprMod);$/;"	kind:p	class:NodeBinopExprMod	access:public	signature:(NodeBinopExprMod)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprMul);$/;"	kind:p	class:NodeBinopExprMul	access:public	signature:(NodeBinopExprMul)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprPlus);$/;"	kind:p	class:NodeBinopExprPlus	access:public	signature:(NodeBinopExprPlus)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBracketPair);$/;"	kind:p	class:NodeBracketPair	access:public	signature:(NodeBracketPair)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeCall);$/;"	kind:p	class:NodeCall	access:public	signature:(NodeCall)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeCatExpr);$/;"	kind:p	class:NodeCatExpr	access:public	signature:(NodeCatExpr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeClass);$/;"	kind:p	class:NodeClass	access:public	signature:(NodeClass)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeConstString);$/;"	kind:p	class:NodeConstString	access:public	signature:(NodeConstString)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeContAssignStmt);$/;"	kind:p	class:NodeContAssignStmt	access:public	signature:(NodeContAssignStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeCoverStmt);$/;"	kind:p	class:NodeCoverStmt	access:public	signature:(NodeCoverStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclCallable);$/;"	kind:p	class:NodeDeclCallable	access:public	signature:(NodeDeclCallable)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclConstList);$/;"	kind:p	class:NodeDeclConstList	access:public	signature:(NodeDeclConstList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclFunc);$/;"	kind:p	class:NodeDeclFunc	access:public	signature:(NodeDeclFunc)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclProc);$/;"	kind:p	class:NodeDeclProc	access:public	signature:(NodeDeclProc)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclTask);$/;"	kind:p	class:NodeDeclTask	access:public	signature:(NodeDeclTask)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclVarList);$/;"	kind:p	class:NodeDeclVarList	access:public	signature:(NodeDeclVarList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDefaultCaseItem);$/;"	kind:p	class:NodeDefaultCaseItem	access:public	signature:(NodeDefaultCaseItem)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDollarResizeStmt);$/;"	kind:p	class:NodeDollarResizeStmt	access:public	signature:(NodeDollarResizeStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeEdgeList);$/;"	kind:p	class:NodeEdgeList	access:public	signature:(NodeEdgeList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeEnum);$/;"	kind:p	class:NodeEnum	access:public	signature:(NodeEnum)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeExprBase);$/;"	kind:p	class:NodeExprBase	access:public	signature:(NodeExprBase)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeExprCaseItem);$/;"	kind:p	class:NodeExprCaseItem	access:public	signature:(NodeExprCaseItem)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeExtends);$/;"	kind:p	class:NodeExtends	access:public	signature:(NodeExtends)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeForStmt);$/;"	kind:p	class:NodeForStmt	access:public	signature:(NodeForStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeGenerateForStmt);$/;"	kind:p	class:NodeGenerateForStmt	access:public	signature:(NodeGenerateForStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeGenerateIfStmt);$/;"	kind:p	class:NodeGenerateIfStmt	access:public	signature:(NodeGenerateIfStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeHasString);$/;"	kind:p	class:NodeHasString	access:public	signature:(NodeHasString)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdent);$/;"	kind:p	class:NodeIdent	access:public	signature:(NodeIdent)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentEtc);$/;"	kind:p	class:NodeIdentEtc	access:public	signature:(NodeIdentEtc)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentList);$/;"	kind:p	class:NodeIdentList	access:public	signature:(NodeIdentList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentMemberAccess);$/;"	kind:p	class:NodeIdentMemberAccess	access:public	signature:(NodeIdentMemberAccess)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentScopeAccess);$/;"	kind:p	class:NodeIdentScopeAccess	access:public	signature:(NodeIdentScopeAccess)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentTermEqualsExtra);$/;"	kind:p	class:NodeIdentTermEqualsExtra	access:public	signature:(NodeIdentTermEqualsExtra)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentTermEqualsExtraList);$/;"	kind:p	class:NodeIdentTermEqualsExtraList	access:public	signature:(NodeIdentTermEqualsExtraList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentTerminal);$/;"	kind:p	class:NodeIdentTerminal	access:public	signature:(NodeIdentTerminal)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIfStmt);$/;"	kind:p	class:NodeIfStmt	access:public	signature:(NodeIfStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeInitialBlock);$/;"	kind:p	class:NodeInitialBlock	access:public	signature:(NodeInitialBlock)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeInstModuleStmt);$/;"	kind:p	class:NodeInstModuleStmt	access:public	signature:(NodeInstModuleStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeLeftRightBase);$/;"	kind:p	class:NodeLeftRightBase	access:public	signature:(NodeLeftRightBase)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeListCat);$/;"	kind:p	class:NodeListCat	access:public	signature:(NodeListCat)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberAccessPrivateStmt);$/;"	kind:p	class:NodeMemberAccessPrivateStmt	access:public	signature:(NodeMemberAccessPrivateStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberAccessProtectedStmt);$/;"	kind:p	class:NodeMemberAccessProtectedStmt	access:public	signature:(NodeMemberAccessProtectedStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberAccessPublicStmt);$/;"	kind:p	class:NodeMemberAccessPublicStmt	access:public	signature:(NodeMemberAccessPublicStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberCallable);$/;"	kind:p	class:NodeMemberCallable	access:public	signature:(NodeMemberCallable)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeModport);$/;"	kind:p	class:NodeModport	access:public	signature:(NodeModport)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeModportSubList);$/;"	kind:p	class:NodeModportSubList	access:public	signature:(NodeModportSubList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeModule);$/;"	kind:p	class:NodeModule	access:public	signature:(NodeModule)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNamedParamArgInstList);$/;"	kind:p	class:NodeNamedParamArgInstList	access:public	signature:(NodeNamedParamArgInstList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNegedgeInst);$/;"	kind:p	class:NodeNegedgeInst	access:public	signature:(NodeNegedgeInst)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNoParamPossibleTypename);$/;"	kind:p	class:NodeNoParamPossibleTypename	access:public	signature:(NodeNoParamPossibleTypename)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNumExpr);$/;"	kind:p	class:NodeNumExpr	access:public	signature:(NodeNumExpr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeOneParamArgInst);$/;"	kind:p	class:NodeOneParamArgInst	access:public	signature:(NodeOneParamArgInst)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePackage);$/;"	kind:p	class:NodePackage	access:public	signature:(NodePackage)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamArgTypeSublist);$/;"	kind:p	class:NodeParamArgTypeSublist	access:public	signature:(NodeParamArgTypeSublist)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamArgVarSublist);$/;"	kind:p	class:NodeParamArgVarSublist	access:public	signature:(NodeParamArgVarSublist)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamList);$/;"	kind:p	class:NodeParamList	access:public	signature:(NodeParamList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamModuleSublist);$/;"	kind:p	class:NodeParamModuleSublist	access:public	signature:(NodeParamModuleSublist)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamPossibleTypename);$/;"	kind:p	class:NodeParamPossibleTypename	access:public	signature:(NodeParamPossibleTypename)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParenPair);$/;"	kind:p	class:NodeParenPair	access:public	signature:(NodeParenPair)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePosParamArgInstList);$/;"	kind:p	class:NodePosParamArgInstList	access:public	signature:(NodePosParamArgInstList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePosedgeInst);$/;"	kind:p	class:NodePosedgeInst	access:public	signature:(NodePosedgeInst)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeProgram);$/;"	kind:p	class:NodeProgram	access:public	signature:(NodeProgram)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarBase);$/;"	kind:p	class:NodePseudoExprDollarBase	access:public	signature:(NodePseudoExprDollarBase)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarFell);$/;"	kind:p	class:NodePseudoExprDollarFell	access:public	signature:(NodePseudoExprDollarFell)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarGlobalClock);$/;"	kind:p	class:NodePseudoExprDollarGlobalClock	access:public	signature:(NodePseudoExprDollarGlobalClock)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarPast);$/;"	kind:p	class:NodePseudoExprDollarPast	access:public	signature:(NodePseudoExprDollarPast)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarRose);$/;"	kind:p	class:NodePseudoExprDollarRose	access:public	signature:(NodePseudoExprDollarRose)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarStable);$/;"	kind:p	class:NodePseudoExprDollarStable	access:public	signature:(NodePseudoExprDollarStable)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeExprAny);$/;"	kind:p	class:NodeRangeExprAny	access:public	signature:(NodeRangeExprAny)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeOne);$/;"	kind:p	class:NodeRangeOne	access:public	signature:(NodeRangeOne)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeSuffix);$/;"	kind:p	class:NodeRangeSuffix	access:public	signature:(NodeRangeSuffix)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeTwo);$/;"	kind:p	class:NodeRangeTwo	access:public	signature:(NodeRangeTwo)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeReplExpr);$/;"	kind:p	class:NodeReplExpr	access:public	signature:(NodeReplExpr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRestrictStmt);$/;"	kind:p	class:NodeRestrictStmt	access:public	signature:(NodeRestrictStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeReturnStmt);$/;"	kind:p	class:NodeReturnStmt	access:public	signature:(NodeReturnStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSbit);$/;"	kind:p	class:NodeSbit	access:public	signature:(NodeSbit)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSbyte);$/;"	kind:p	class:NodeSbyte	access:public	signature:(NodeSbyte)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeBehav);$/;"	kind:p	class:NodeScopeBehav	access:public	signature:(NodeScopeBehav)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeClass);$/;"	kind:p	class:NodeScopeClass	access:public	signature:(NodeScopeClass)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeEnum);$/;"	kind:p	class:NodeScopeEnum	access:public	signature:(NodeScopeEnum)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeModproc);$/;"	kind:p	class:NodeScopeModproc	access:public	signature:(NodeScopeModproc)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopePackage);$/;"	kind:p	class:NodeScopePackage	access:public	signature:(NodeScopePackage)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeSwitch);$/;"	kind:p	class:NodeScopeSwitch	access:public	signature:(NodeScopeSwitch)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeUnion);$/;"	kind:p	class:NodeScopeUnion	access:public	signature:(NodeScopeUnion)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSelf);$/;"	kind:p	class:NodeSelf	access:public	signature:(NodeSelf)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSint);$/;"	kind:p	class:NodeSint	access:public	signature:(NodeSint)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSizedNumExpr);$/;"	kind:p	class:NodeSizedNumExpr	access:public	signature:(NodeSizedNumExpr)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSlongint);$/;"	kind:p	class:NodeSlongint	access:public	signature:(NodeSlongint)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSshortint);$/;"	kind:p	class:NodeSshortint	access:public	signature:(NodeSshortint)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeStaticAssertStmt);$/;"	kind:p	class:NodeStaticAssertStmt	access:public	signature:(NodeStaticAssertStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeStmtList);$/;"	kind:p	class:NodeStmtList	access:public	signature:(NodeStmtList)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSwire);$/;"	kind:p	class:NodeSwire	access:public	signature:(NodeSwire)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSwitchStmt);$/;"	kind:p	class:NodeSwitchStmt	access:public	signature:(NodeSwitchStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSwitchzStmt);$/;"	kind:p	class:NodeSwitchzStmt	access:public	signature:(NodeSwitchzStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeTypeRange);$/;"	kind:p	class:NodeTypeRange	access:public	signature:(NodeTypeRange)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeTypeof);$/;"	kind:p	class:NodeTypeof	access:public	signature:(NodeTypeof)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUbit);$/;"	kind:p	class:NodeUbit	access:public	signature:(NodeUbit)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUbyte);$/;"	kind:p	class:NodeUbyte	access:public	signature:(NodeUbyte)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUint);$/;"	kind:p	class:NodeUint	access:public	signature:(NodeUint)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUlongint);$/;"	kind:p	class:NodeUlongint	access:public	signature:(NodeUlongint)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnion);$/;"	kind:p	class:NodeUnion	access:public	signature:(NodeUnion)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprBase);$/;"	kind:p	class:NodeUnopExprBase	access:public	signature:(NodeUnopExprBase)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprBitNot);$/;"	kind:p	class:NodeUnopExprBitNot	access:public	signature:(NodeUnopExprBitNot)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarClog2);$/;"	kind:p	class:NodeUnopExprDollarClog2	access:public	signature:(NodeUnopExprDollarClog2)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarFirst);$/;"	kind:p	class:NodeUnopExprDollarFirst	access:public	signature:(NodeUnopExprDollarFirst)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarHigh);$/;"	kind:p	class:NodeUnopExprDollarHigh	access:public	signature:(NodeUnopExprDollarHigh)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarIsSigned);$/;"	kind:p	class:NodeUnopExprDollarIsSigned	access:public	signature:(NodeUnopExprDollarIsSigned)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarIsUnsigned);$/;"	kind:p	class:NodeUnopExprDollarIsUnsigned	access:public	signature:(NodeUnopExprDollarIsUnsigned)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarLast);$/;"	kind:p	class:NodeUnopExprDollarLast	access:public	signature:(NodeUnopExprDollarLast)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarLow);$/;"	kind:p	class:NodeUnopExprDollarLow	access:public	signature:(NodeUnopExprDollarLow)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarRange);$/;"	kind:p	class:NodeUnopExprDollarRange	access:public	signature:(NodeUnopExprDollarRange)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarRevrange);$/;"	kind:p	class:NodeUnopExprDollarRevrange	access:public	signature:(NodeUnopExprDollarRevrange)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarSigned);$/;"	kind:p	class:NodeUnopExprDollarSigned	access:public	signature:(NodeUnopExprDollarSigned)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarSize);$/;"	kind:p	class:NodeUnopExprDollarSize	access:public	signature:(NodeUnopExprDollarSize)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarUnsigned);$/;"	kind:p	class:NodeUnopExprDollarUnsigned	access:public	signature:(NodeUnopExprDollarUnsigned)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprLogNot);$/;"	kind:p	class:NodeUnopExprLogNot	access:public	signature:(NodeUnopExprLogNot)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprMinus);$/;"	kind:p	class:NodeUnopExprMinus	access:public	signature:(NodeUnopExprMinus)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprPlus);$/;"	kind:p	class:NodeUnopExprPlus	access:public	signature:(NodeUnopExprPlus)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprTypeof);$/;"	kind:p	class:NodeUnopExprTypeof	access:public	signature:(NodeUnopExprTypeof)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUshortint);$/;"	kind:p	class:NodeUshortint	access:public	signature:(NodeUshortint)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUsingStmt);$/;"	kind:p	class:NodeUsingStmt	access:public	signature:(NodeUsingStmt)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUwire);$/;"	kind:p	class:NodeUwire	access:public	signature:(NodeUwire)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeVoid);$/;"	kind:p	class:NodeVoid	access:public	signature:(NodeVoid)
GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeWhileStmt);$/;"	kind:p	class:NodeWhileStmt	access:public	signature:(NodeWhileStmt)
GEN_SETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_SETTER_BY_CON_REF(/;"	kind:d	signature:(suffix)
GEN_SETTER_BY_RVAL_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_SETTER_BY_RVAL_REF(/;"	kind:d	signature:(suffix)
GEN_SETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_SETTER_BY_VAL(/;"	kind:d	signature:(suffix)
GEN_STACK	gen_stacks_stuff.hpp	/^	#define GEN_STACK(/;"	kind:d	signature:(stack_type,dummy,whateverfix)
GEN_STACK_FUNCS	gen_stacks_stuff.hpp	/^	#define GEN_STACK_FUNCS(/;"	kind:d	signature:(dummy,ret_type,whateverfix)
GEN_STATIC_GENERIC_GETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GENERIC_GETTER_BY_CON_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_STATIC_GENERIC_GETTER_BY_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GENERIC_GETTER_BY_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_STATIC_GENERIC_GETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GENERIC_GETTER_BY_VAL(/;"	kind:d	signature:(prefix,suffix)
GEN_STATIC_GENERIC_SETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GENERIC_SETTER_BY_CON_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_STATIC_GENERIC_SETTER_BY_RVAL_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GENERIC_SETTER_BY_RVAL_REF(/;"	kind:d	signature:(prefix,suffix)
GEN_STATIC_GENERIC_SETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GENERIC_SETTER_BY_VAL(/;"	kind:d	signature:(prefix,suffix)
GEN_STATIC_GETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GETTER_BY_CON_REF(/;"	kind:d	signature:(suffix)
GEN_STATIC_GETTER_BY_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GETTER_BY_REF(/;"	kind:d	signature:(suffix)
GEN_STATIC_GETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_GETTER_BY_VAL(/;"	kind:d	signature:(suffix)
GEN_STATIC_SETTER_BY_CON_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_SETTER_BY_CON_REF(/;"	kind:d	signature:(suffix)
GEN_STATIC_SETTER_BY_RVAL_REF	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_SETTER_BY_RVAL_REF(/;"	kind:d	signature:(suffix)
GEN_STATIC_SETTER_BY_VAL	liborangepower_src/gen_class_innards_defines.hpp	/^#define GEN_STATIC_SETTER_BY_VAL(/;"	kind:d	signature:(suffix)
GEN_WITH_STACKS	gen_stacks_stuff.hpp	/^#define GEN_WITH_STACKS(/;"	kind:d	signature:(stack_type,var_type,whateverfix)
GenerateForStmt	ast_node_type_enum.hpp	/^	GenerateForStmt,$/;"	kind:e	enum:Type	access:public
GenerateIfStmt	ast_node_type_enum.hpp	/^	GenerateIfStmt,$/;"	kind:e	enum:Type	access:public
HasString	ast_node_type_enum.hpp	/^	HasString,$/;"	kind:e	enum:Type	access:public
INNER_TOKENPASTE1	liborangepower_src/misc_defines.hpp	/^#define INNER_TOKENPASTE1(/;"	kind:d	signature:(x)
INNER_TOKENPASTE2	liborangepower_src/misc_defines.hpp	/^#define INNER_TOKENPASTE2(/;"	kind:d	signature:(x,y)
Ident	ast_node_type_enum.hpp	/^	Ident,$/;"	kind:e	enum:Type	access:public
IdentEtc	ast_node_type_enum.hpp	/^	IdentEtc,$/;"	kind:e	enum:Type	access:public
IdentList	ast_node_type_enum.hpp	/^	IdentList,$/;"	kind:e	enum:Type	access:public
IdentMemberAccess	ast_node_type_enum.hpp	/^	IdentMemberAccess,$/;"	kind:e	enum:Type	access:public
IdentScopeAccess	ast_node_type_enum.hpp	/^	IdentScopeAccess,$/;"	kind:e	enum:Type	access:public
IdentTermEqualsExtra	ast_node_type_enum.hpp	/^	IdentTermEqualsExtra,$/;"	kind:e	enum:Type	access:public
IdentTermEqualsExtraList	ast_node_type_enum.hpp	/^	IdentTermEqualsExtraList,$/;"	kind:e	enum:Type	access:public
IdentTerminal	ast_node_type_enum.hpp	/^	IdentTerminal,$/;"	kind:e	enum:Type	access:public
IfStmt	ast_node_type_enum.hpp	/^	IfStmt,$/;"	kind:e	enum:Type	access:public
InitialBlock	ast_node_type_enum.hpp	/^	InitialBlock,$/;"	kind:e	enum:Type	access:public
InstModuleStmt	ast_node_type_enum.hpp	/^	InstModuleStmt,$/;"	kind:e	enum:Type	access:public
InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
JustParse	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		JustParse,$/;"	kind:e	enum:liborangepower::lang::OptAsFuncArgParserBase::Opt	access:public
LIST_FOR_GEN_STACK	parser_class.hpp	/^	#define LIST_FOR_GEN_STACK(/;"	kind:d	signature:(X)
LIST_OF_AST_NODE_CLASSES	list_of_ast_node_classes_define.hpp	/^#define LIST_OF_AST_NODE_CLASSES(/;"	kind:d	signature:(X)
LIST_OF_KW_DOLLAR_TOK	list_of_tok_defines.hpp	/^#define LIST_OF_KW_DOLLAR_TOK(/;"	kind:d	signature:(X)
LIST_OF_KW_NON_DOLLAR_TOK	list_of_tok_defines.hpp	/^#define LIST_OF_KW_NON_DOLLAR_TOK(/;"	kind:d	signature:(X)
LIST_OF_PARSE_TREE_NODES	list_of_parse_tree_nodes_define.hpp	/^#define LIST_OF_PARSE_TREE_NODES(/;"	kind:d	signature:(X)
LIST_OF_TOK	list_of_tok_defines.hpp	/^#define LIST_OF_TOK(/;"	kind:d	signature:(X)
LIST_OF_TOK	tok_enum.hpp	/^	LIST_OF_TOK(X)$/;"	kind:e	enum:frost_hdl::Tok	access:public
LeftRightBase	ast_node_type_enum.hpp	/^	LeftRightBase,$/;"	kind:e	enum:Type	access:public
LexStateSets	liborangepower_src/stateful_parser_base_class.hpp	/^		LexStateSets()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	access:public	signature:()
LexStateSets	liborangepower_src/stateful_parser_base_class.hpp	/^	class LexStateSets final$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
Lexer	lexer_class.cpp	/^Lexer::Lexer(const string& s_filename, string* s_text)$/;"	kind:f	class:frost_hdl::Lexer	signature:(const string & s_filename,string * s_text)
Lexer	lexer_class.hpp	/^	Lexer(const string& s_filename, string* s_text);$/;"	kind:p	class:frost_hdl::Lexer	access:public	signature:(const string & s_filename,string * s_text)
Lexer	lexer_class.hpp	/^class Lexer final : public LexerBase<Tok>$/;"	kind:c	namespace:frost_hdl	inherits:LexerBase<Tok>
LexerBase	liborangepower_src/lexer_base_class.hpp	/^	inline LexerBase(const std::string& s_filename, std::string* s_text)$/;"	kind:f	class:liborangepower::lang::LexerBase	access:public	signature:(const std::string & s_filename,std::string * s_text)
LexerBase	liborangepower_src/lexer_base_class.hpp	/^class LexerBase$/;"	kind:c	namespace:liborangepower::lang
LexerState	liborangepower_src/stateful_parser_base_class.hpp	/^	using LexerState = typename LexerType::State;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexerType::State	access:public
List	ast_node_type_enum.hpp	/^	List,$/;"	kind:e	enum:Type	access:public
ListCat	ast_node_type_enum.hpp	/^	ListCat,$/;"	kind:e	enum:Type	access:public
ListParse	liborangepower_src/stateful_parser_base_class.hpp	/^		ListParse(DerivedType* s_self, Vec&& s_vec,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	access:public	signature:(DerivedType * s_self,Vec && s_vec,bool s_optional=false)
ListParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class ListParse : public SeqParse<DerivedType>$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	inherits:SeqParse<DerivedType>	access:public
MP11_DECLARE_IDENT_STATIC_VARS	liborangepower_src/mp11_defines.hpp	/^#define MP11_DECLARE_IDENT_STATIC_VARS /;"	kind:d
MP11_DEFINE_IDENT_STATIC_VARS	liborangepower_src/mp11_defines.hpp	/^#define MP11_DEFINE_IDENT_STATIC_VARS(/;"	kind:d	signature:(some_class,hierarchy_list)
MP11_MAKE_BASE_CLASS_ARR_GETTER_INSIDES	liborangepower_src/mp11_defines.hpp	/^#define MP11_MAKE_BASE_CLASS_ARR_GETTER_INSIDES /;"	kind:d
MP11_MAKE_BASE_CLASS_ARR_GETTER_OUTSIDES	liborangepower_src/mp11_defines.hpp	/^	hierarchy_list) \\$/;"	kind:d	signature:(some_class,\\\nhierarchy_list)
MP11_MAKE_BASE_CLASS_ESSENTIAL_INSIDES	liborangepower_src/mp11_defines.hpp	/^#define MP11_MAKE_BASE_CLASS_ESSENTIAL_INSIDES /;"	kind:d
MP11_MAKE_BASE_CLASS_ESSENTIAL_OUTSIDES	liborangepower_src/mp11_defines.hpp	/^	hierarchy_list) \\$/;"	kind:d	signature:(base_class,\\\nhierarchy_list)
MP11_MAKE_BASE_CLASS_INSIDES	liborangepower_src/mp11_defines.hpp	/^#define MP11_MAKE_BASE_CLASS_INSIDES /;"	kind:d
MPI_HANDLER_STATIC_ASSERT_0	liborangepower_src/mpi_handler_class.hpp	/^#define MPI_HANDLER_STATIC_ASSERT_0(/;"	kind:d	signature:(type,func_name_str)
MPI_HANDLER_STATIC_ASSERT_1	liborangepower_src/mpi_handler_class.hpp	/^#define MPI_HANDLER_STATIC_ASSERT_1(/;"	kind:d	signature:(type,func_name_str)
MapSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^	using MapSeqParse = std::map<std::string, SomeSeqParseType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::map<std::string,SomeSeqParseType>	access:public
MemberAccessPrivateStmt	ast_node_type_enum.hpp	/^	MemberAccessPrivateStmt,$/;"	kind:e	enum:Type	access:public
MemberAccessProtectedStmt	ast_node_type_enum.hpp	/^	MemberAccessProtectedStmt,$/;"	kind:e	enum:Type	access:public
MemberAccessPublicStmt	ast_node_type_enum.hpp	/^	MemberAccessPublicStmt,$/;"	kind:e	enum:Type	access:public
MemberCallable	ast_node_type_enum.hpp	/^	MemberCallable,$/;"	kind:e	enum:Type	access:public
Modport	ast_node_type_enum.hpp	/^	Modport,$/;"	kind:e	enum:Type	access:public
ModportSubList	ast_node_type_enum.hpp	/^	ModportSubList,$/;"	kind:e	enum:Type	access:public
Module	ast_node_type_enum.hpp	/^	Module,$/;"	kind:e	enum:Type	access:public
MoveOnlyPrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline MoveOnlyPrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::MoveOnlyPrevCurrPair	access:public	signature:()
MoveOnlyPrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^class MoveOnlyPrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	inline MpiHandler(int& s_argc, char** s_argv,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:(int & s_argc,char ** s_argv,size_t s_num_threads_per_proc=1,size_t s_min_world_size=1)
MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^class MpiHandler$/;"	kind:c	namespace:liborangepower::mpi
MultiParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class MultiParse$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
NamedParamArgInstList	ast_node_type_enum.hpp	/^	NamedParamArgInstList,$/;"	kind:e	enum:Type	access:public
NegedgeInst	ast_node_type_enum.hpp	/^	NegedgeInst,$/;"	kind:e	enum:Type	access:public
NoParamPossibleTypename	ast_node_type_enum.hpp	/^	NoParamPossibleTypename,$/;"	kind:e	enum:Type	access:public
NoRefFirstArgType	liborangepower_src/stateful_parser_base_class.hpp	/^			using NoRefFirstArgType$/;"	kind:t	function:liborangepower::lang::StatefulParserBase::MultiParse::_inner_seq_parse	typeref:typename:std::remove_reference<FirstArgType>::type
Node	liborangepower_src/linked_list_classes.hpp	/^		Node() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:()
Node	liborangepower_src/linked_list_classes.hpp	/^		inline Node(Type&& s_data)$/;"	kind:f	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:(Type && s_data)
Node	liborangepower_src/linked_list_classes.hpp	/^		inline Node(const Type& s_data)$/;"	kind:f	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:(const Type & s_data)
Node	liborangepower_src/linked_list_classes.hpp	/^	class Node final$/;"	kind:c	class:liborangepower::containers::CircLinkedList	access:public
NodeAlwaysBlkBlock	ast_node_main_classes.hpp	/^	inline NodeAlwaysBlkBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAlwaysBlkBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_edge_list,Child && s_scope)
NodeAlwaysBlkBlock	ast_node_main_classes.hpp	/^class NodeAlwaysBlkBlock : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeAlwaysBlkBlock::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAlwaysBlkBlock);$/;"	kind:p	class:NodeAlwaysBlkBlock	access:public	signature:(NodeAlwaysBlkBlock)
NodeAlwaysBlkBlock::NodeAlwaysBlkBlock	ast_node_main_classes.hpp	/^	inline NodeAlwaysBlkBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAlwaysBlkBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_edge_list,Child && s_scope)
NodeAlwaysBlkBlock::_edge_list	ast_node_main_classes.hpp	/^	Child _edge_list,$/;"	kind:m	class:NodeAlwaysBlkBlock	typeref:typename:Child	access:protected
NodeAlwaysBlkBlock::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeAlwaysBlkBlock	typeref:typename:Child	access:protected
NodeAlwaysBlkBlock::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAlwaysBlkBlock	typeref:typename:string	access:public	signature:() const
NodeAlwaysBlkBlock::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAlwaysBlkBlock	typeref:typename:string	access:public	signature:() const
NodeAlwaysBlkBlock::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAlwaysBlkBlock	typeref:typename:Type	access:public	signature:() const
NodeAlwaysCombBlock	ast_node_main_classes.hpp	/^	inline NodeAlwaysCombBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAlwaysCombBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_scope)
NodeAlwaysCombBlock	ast_node_main_classes.hpp	/^class NodeAlwaysCombBlock : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeAlwaysCombBlock::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAlwaysCombBlock);$/;"	kind:p	class:NodeAlwaysCombBlock	access:public	signature:(NodeAlwaysCombBlock)
NodeAlwaysCombBlock::NodeAlwaysCombBlock	ast_node_main_classes.hpp	/^	inline NodeAlwaysCombBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAlwaysCombBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_scope)
NodeAlwaysCombBlock::_scope	ast_node_main_classes.hpp	/^	Child _scope;$/;"	kind:m	class:NodeAlwaysCombBlock	typeref:typename:Child	access:protected
NodeAlwaysCombBlock::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAlwaysCombBlock	typeref:typename:string	access:public	signature:() const
NodeAlwaysCombBlock::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAlwaysCombBlock	typeref:typename:string	access:public	signature:() const
NodeAlwaysCombBlock::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAlwaysCombBlock	typeref:typename:Type	access:public	signature:() const
NodeAlwaysFfBlock	ast_node_main_classes.hpp	/^	inline NodeAlwaysFfBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAlwaysFfBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_edge_list,Child && s_scope)
NodeAlwaysFfBlock	ast_node_main_classes.hpp	/^class NodeAlwaysFfBlock : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeAlwaysFfBlock::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAlwaysFfBlock);$/;"	kind:p	class:NodeAlwaysFfBlock	access:public	signature:(NodeAlwaysFfBlock)
NodeAlwaysFfBlock::NodeAlwaysFfBlock	ast_node_main_classes.hpp	/^	inline NodeAlwaysFfBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAlwaysFfBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_edge_list,Child && s_scope)
NodeAlwaysFfBlock::_edge_list	ast_node_main_classes.hpp	/^	Child _edge_list,$/;"	kind:m	class:NodeAlwaysFfBlock	typeref:typename:Child	access:protected
NodeAlwaysFfBlock::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeAlwaysFfBlock	typeref:typename:Child	access:protected
NodeAlwaysFfBlock::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAlwaysFfBlock	typeref:typename:string	access:public	signature:() const
NodeAlwaysFfBlock::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAlwaysFfBlock	typeref:typename:string	access:public	signature:() const
NodeAlwaysFfBlock::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAlwaysFfBlock	typeref:typename:Type	access:public	signature:() const
NodeAnyForStmt	ast_node_main_classes.hpp	/^	inline NodeAnyForStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAnyForStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_var,Child && s_items,Child && s_scope)
NodeAnyForStmt	ast_node_main_classes.hpp	/^class NodeAnyForStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeAnyForStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAnyForStmt);$/;"	kind:p	class:NodeAnyForStmt	access:public	signature:(NodeAnyForStmt)
NodeAnyForStmt::NodeAnyForStmt	ast_node_main_classes.hpp	/^	inline NodeAnyForStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAnyForStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_var,Child && s_items,Child && s_scope)
NodeAnyForStmt::_items	ast_node_main_classes.hpp	/^		_items,$/;"	kind:m	class:NodeAnyForStmt	typeref:typename:Child	access:protected
NodeAnyForStmt::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeAnyForStmt	typeref:typename:Child	access:protected
NodeAnyForStmt::_var	ast_node_main_classes.hpp	/^	Child _var,$/;"	kind:m	class:NodeAnyForStmt	typeref:typename:Child	access:protected
NodeAnyForStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAnyForStmt	typeref:typename:string	access:public	signature:() const
NodeAnyForStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAnyForStmt	typeref:typename:string	access:public	signature:() const
NodeAnyForStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAnyForStmt	typeref:typename:Type	access:public	signature:() const
NodeArgList	ast_node_main_classes.hpp	/^	inline NodeArgList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeArgList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeArgList	ast_node_main_classes.hpp	/^class NodeArgList : public NodeList$/;"	kind:c	inherits:NodeList
NodeArgList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeArgList);$/;"	kind:p	class:NodeArgList	access:public	signature:(NodeArgList)
NodeArgList::NodeArgList	ast_node_main_classes.hpp	/^	inline NodeArgList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeArgList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeArgList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeArgList	typeref:typename:string	access:public	signature:() const
NodeArgList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeArgList	typeref:typename:string	access:public	signature:() const
NodeArgList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeArgList	typeref:typename:Type	access:public	signature:() const
NodeArgPortSublist	ast_node_main_classes.hpp	/^	inline NodeArgPortSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeArgPortSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_port_dir,Child && s_param_arg_var_sublist)
NodeArgPortSublist	ast_node_main_classes.hpp	/^class NodeArgPortSublist : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeArgPortSublist::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeArgPortSublist);$/;"	kind:p	class:NodeArgPortSublist	access:public	signature:(NodeArgPortSublist)
NodeArgPortSublist::NodeArgPortSublist	ast_node_main_classes.hpp	/^	inline NodeArgPortSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeArgPortSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_port_dir,Child && s_param_arg_var_sublist)
NodeArgPortSublist::_param_arg_var_sublist	ast_node_main_classes.hpp	/^	Child _param_arg_var_sublist;$/;"	kind:m	class:NodeArgPortSublist	typeref:typename:Child	access:protected
NodeArgPortSublist::_port_dir	ast_node_main_classes.hpp	/^	string _port_dir;$/;"	kind:m	class:NodeArgPortSublist	typeref:typename:string	access:protected
NodeArgPortSublist::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeArgPortSublist	typeref:typename:string	access:public	signature:() const
NodeArgPortSublist::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeArgPortSublist	typeref:typename:string	access:public	signature:() const
NodeArgPortSublist::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeArgPortSublist	typeref:typename:Type	access:public	signature:() const
NodeAssertStmt	ast_node_main_classes.hpp	/^	inline NodeAssertStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAssertStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeAssertStmt	ast_node_main_classes.hpp	/^class NodeAssertStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeAssertStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAssertStmt);$/;"	kind:p	class:NodeAssertStmt	access:public	signature:(NodeAssertStmt)
NodeAssertStmt::NodeAssertStmt	ast_node_main_classes.hpp	/^	inline NodeAssertStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAssertStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeAssertStmt::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeAssertStmt	typeref:typename:Child	access:protected
NodeAssertStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAssertStmt	typeref:typename:string	access:public	signature:() const
NodeAssertStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAssertStmt	typeref:typename:string	access:public	signature:() const
NodeAssertStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAssertStmt	typeref:typename:Type	access:public	signature:() const
NodeAssumeStmt	ast_node_main_classes.hpp	/^	inline NodeAssumeStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAssumeStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeAssumeStmt	ast_node_main_classes.hpp	/^class NodeAssumeStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeAssumeStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAssumeStmt);$/;"	kind:p	class:NodeAssumeStmt	access:public	signature:(NodeAssumeStmt)
NodeAssumeStmt::NodeAssumeStmt	ast_node_main_classes.hpp	/^	inline NodeAssumeStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeAssumeStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeAssumeStmt::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeAssumeStmt	typeref:typename:Child	access:protected
NodeAssumeStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAssumeStmt	typeref:typename:string	access:public	signature:() const
NodeAssumeStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAssumeStmt	typeref:typename:string	access:public	signature:() const
NodeAssumeStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAssumeStmt	typeref:typename:Type	access:public	signature:() const
NodeAuto	ast_node_main_classes.hpp	/^	inline NodeAuto(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeAuto	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeAuto	ast_node_main_classes.hpp	/^class NodeAuto : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeAuto::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeAuto);$/;"	kind:p	class:NodeAuto	access:public	signature:(NodeAuto)
NodeAuto::NodeAuto	ast_node_main_classes.hpp	/^	inline NodeAuto(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeAuto	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeAuto::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAuto	typeref:typename:string	access:public	signature:() const
NodeAuto::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAuto	typeref:typename:string	access:public	signature:() const
NodeAuto::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAuto	typeref:typename:Type	access:public	signature:() const
NodeBase	ast_node_classes.hpp	/^	inline NodeBase()$/;"	kind:f	class:frost_hdl::ast::NodeBase	access:public	signature:()
NodeBase	ast_node_classes.hpp	/^	inline NodeBase(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:frost_hdl::ast::NodeBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeBase	ast_node_classes.hpp	/^class NodeBase$/;"	kind:c	namespace:frost_hdl::ast
NodeBehavAssignStmt	ast_node_main_classes.hpp	/^	inline NodeBehavAssignStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBehavAssignStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBehavAssignStmt	ast_node_main_classes.hpp	/^class NodeBehavAssignStmt : public NodeLeftRightBase$/;"	kind:c	inherits:NodeLeftRightBase
NodeBehavAssignStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBehavAssignStmt);$/;"	kind:p	class:NodeBehavAssignStmt	access:public	signature:(NodeBehavAssignStmt)
NodeBehavAssignStmt::NodeBehavAssignStmt	ast_node_main_classes.hpp	/^	inline NodeBehavAssignStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBehavAssignStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBehavAssignStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBehavAssignStmt	typeref:typename:string	access:public	signature:() const
NodeBehavAssignStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBehavAssignStmt	typeref:typename:string	access:public	signature:() const
NodeBehavAssignStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBehavAssignStmt	typeref:typename:Type	access:public	signature:() const
NodeBinopExprBase	ast_node_main_classes.hpp	/^	inline NodeBinopExprBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBase	ast_node_main_classes.hpp	/^class NodeBinopExprBase : public NodeExprBase$/;"	kind:c	inherits:NodeExprBase
NodeBinopExprBase::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBase);$/;"	kind:p	class:NodeBinopExprBase	access:public	signature:(NodeBinopExprBase)
NodeBinopExprBase::NodeBinopExprBase	ast_node_main_classes.hpp	/^	inline NodeBinopExprBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBase::_left	ast_node_main_classes.hpp	/^	Child _left,$/;"	kind:m	class:NodeBinopExprBase	typeref:typename:Child	access:protected
NodeBinopExprBase::_right	ast_node_main_classes.hpp	/^		_right;$/;"	kind:m	class:NodeBinopExprBase	typeref:typename:Child	access:protected
NodeBinopExprBase::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBase	typeref:typename:string	access:public	signature:() const
NodeBinopExprBase::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBase	typeref:typename:string	access:public	signature:() const
NodeBinopExprBase::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBase	typeref:typename:Type	access:public	signature:() const
NodeBinopExprBitAnd	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitAnd(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitAnd	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitAnd	ast_node_main_classes.hpp	/^class NodeBinopExprBitAnd : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprBitAnd::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitAnd);$/;"	kind:p	class:NodeBinopExprBitAnd	access:public	signature:(NodeBinopExprBitAnd)
NodeBinopExprBitAnd::NodeBinopExprBitAnd	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitAnd(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitAnd	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitAnd::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitAnd	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitAnd::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitAnd	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitAnd::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitAnd	typeref:typename:Type	access:public	signature:() const
NodeBinopExprBitAsr	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitAsr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitAsr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitAsr	ast_node_main_classes.hpp	/^class NodeBinopExprBitAsr : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprBitAsr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitAsr);$/;"	kind:p	class:NodeBinopExprBitAsr	access:public	signature:(NodeBinopExprBitAsr)
NodeBinopExprBitAsr::NodeBinopExprBitAsr	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitAsr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitAsr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitAsr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitAsr	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitAsr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitAsr	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitAsr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitAsr	typeref:typename:Type	access:public	signature:() const
NodeBinopExprBitLsl	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitLsl(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitLsl	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitLsl	ast_node_main_classes.hpp	/^class NodeBinopExprBitLsl : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprBitLsl::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitLsl);$/;"	kind:p	class:NodeBinopExprBitLsl	access:public	signature:(NodeBinopExprBitLsl)
NodeBinopExprBitLsl::NodeBinopExprBitLsl	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitLsl(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitLsl	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitLsl::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitLsl	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitLsl::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitLsl	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitLsl::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitLsl	typeref:typename:Type	access:public	signature:() const
NodeBinopExprBitLsr	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitLsr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitLsr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitLsr	ast_node_main_classes.hpp	/^class NodeBinopExprBitLsr : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprBitLsr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitLsr);$/;"	kind:p	class:NodeBinopExprBitLsr	access:public	signature:(NodeBinopExprBitLsr)
NodeBinopExprBitLsr::NodeBinopExprBitLsr	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitLsr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitLsr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitLsr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitLsr	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitLsr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitLsr	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitLsr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitLsr	typeref:typename:Type	access:public	signature:() const
NodeBinopExprBitOr	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitOr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitOr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitOr	ast_node_main_classes.hpp	/^class NodeBinopExprBitOr : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprBitOr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitOr);$/;"	kind:p	class:NodeBinopExprBitOr	access:public	signature:(NodeBinopExprBitOr)
NodeBinopExprBitOr::NodeBinopExprBitOr	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitOr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitOr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitOr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitOr	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitOr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitOr	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitOr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitOr	typeref:typename:Type	access:public	signature:() const
NodeBinopExprBitXor	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitXor(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitXor	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitXor	ast_node_main_classes.hpp	/^class NodeBinopExprBitXor : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprBitXor::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprBitXor);$/;"	kind:p	class:NodeBinopExprBitXor	access:public	signature:(NodeBinopExprBitXor)
NodeBinopExprBitXor::NodeBinopExprBitXor	ast_node_main_classes.hpp	/^	inline NodeBinopExprBitXor(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprBitXor	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprBitXor::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitXor	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitXor::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitXor	typeref:typename:string	access:public	signature:() const
NodeBinopExprBitXor::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitXor	typeref:typename:Type	access:public	signature:() const
NodeBinopExprCmpEq	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpEq(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpEq	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpEq	ast_node_main_classes.hpp	/^class NodeBinopExprCmpEq : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprCmpEq::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpEq);$/;"	kind:p	class:NodeBinopExprCmpEq	access:public	signature:(NodeBinopExprCmpEq)
NodeBinopExprCmpEq::NodeBinopExprCmpEq	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpEq(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpEq	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpEq::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpEq	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpEq::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpEq	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpEq::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpEq	typeref:typename:Type	access:public	signature:() const
NodeBinopExprCmpGe	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpGe(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpGe	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpGe	ast_node_main_classes.hpp	/^class NodeBinopExprCmpGe : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprCmpGe::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpGe);$/;"	kind:p	class:NodeBinopExprCmpGe	access:public	signature:(NodeBinopExprCmpGe)
NodeBinopExprCmpGe::NodeBinopExprCmpGe	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpGe(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpGe	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpGe::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpGe	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpGe::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpGe	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpGe::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpGe	typeref:typename:Type	access:public	signature:() const
NodeBinopExprCmpGt	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpGt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpGt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpGt	ast_node_main_classes.hpp	/^class NodeBinopExprCmpGt : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprCmpGt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpGt);$/;"	kind:p	class:NodeBinopExprCmpGt	access:public	signature:(NodeBinopExprCmpGt)
NodeBinopExprCmpGt::NodeBinopExprCmpGt	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpGt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpGt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpGt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpGt	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpGt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpGt	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpGt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpGt	typeref:typename:Type	access:public	signature:() const
NodeBinopExprCmpLe	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpLe(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpLe	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpLe	ast_node_main_classes.hpp	/^class NodeBinopExprCmpLe : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprCmpLe::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpLe);$/;"	kind:p	class:NodeBinopExprCmpLe	access:public	signature:(NodeBinopExprCmpLe)
NodeBinopExprCmpLe::NodeBinopExprCmpLe	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpLe(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpLe	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpLe::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpLe	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpLe::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpLe	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpLe::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpLe	typeref:typename:Type	access:public	signature:() const
NodeBinopExprCmpLt	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpLt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpLt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpLt	ast_node_main_classes.hpp	/^class NodeBinopExprCmpLt : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprCmpLt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpLt);$/;"	kind:p	class:NodeBinopExprCmpLt	access:public	signature:(NodeBinopExprCmpLt)
NodeBinopExprCmpLt::NodeBinopExprCmpLt	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpLt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpLt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpLt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpLt	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpLt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpLt	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpLt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpLt	typeref:typename:Type	access:public	signature:() const
NodeBinopExprCmpNe	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpNe(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpNe	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpNe	ast_node_main_classes.hpp	/^class NodeBinopExprCmpNe : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprCmpNe::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprCmpNe);$/;"	kind:p	class:NodeBinopExprCmpNe	access:public	signature:(NodeBinopExprCmpNe)
NodeBinopExprCmpNe::NodeBinopExprCmpNe	ast_node_main_classes.hpp	/^	inline NodeBinopExprCmpNe(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprCmpNe	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprCmpNe::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpNe	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpNe::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpNe	typeref:typename:string	access:public	signature:() const
NodeBinopExprCmpNe::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpNe	typeref:typename:Type	access:public	signature:() const
NodeBinopExprDiv	ast_node_main_classes.hpp	/^	inline NodeBinopExprDiv(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprDiv	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprDiv	ast_node_main_classes.hpp	/^class NodeBinopExprDiv : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprDiv::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprDiv);$/;"	kind:p	class:NodeBinopExprDiv	access:public	signature:(NodeBinopExprDiv)
NodeBinopExprDiv::NodeBinopExprDiv	ast_node_main_classes.hpp	/^	inline NodeBinopExprDiv(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprDiv	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprDiv::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprDiv	typeref:typename:string	access:public	signature:() const
NodeBinopExprDiv::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprDiv	typeref:typename:string	access:public	signature:() const
NodeBinopExprDiv::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprDiv	typeref:typename:Type	access:public	signature:() const
NodeBinopExprDollarPow	ast_node_main_classes.hpp	/^	inline NodeBinopExprDollarPow(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprDollarPow	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprDollarPow	ast_node_main_classes.hpp	/^class NodeBinopExprDollarPow : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprDollarPow::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprDollarPow);$/;"	kind:p	class:NodeBinopExprDollarPow	access:public	signature:(NodeBinopExprDollarPow)
NodeBinopExprDollarPow::NodeBinopExprDollarPow	ast_node_main_classes.hpp	/^	inline NodeBinopExprDollarPow(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprDollarPow	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprDollarPow::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprDollarPow	typeref:typename:string	access:public	signature:() const
NodeBinopExprDollarPow::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprDollarPow	typeref:typename:string	access:public	signature:() const
NodeBinopExprDollarPow::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprDollarPow	typeref:typename:Type	access:public	signature:() const
NodeBinopExprLogAnd	ast_node_main_classes.hpp	/^	inline NodeBinopExprLogAnd(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprLogAnd	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprLogAnd	ast_node_main_classes.hpp	/^class NodeBinopExprLogAnd : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprLogAnd::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprLogAnd);$/;"	kind:p	class:NodeBinopExprLogAnd	access:public	signature:(NodeBinopExprLogAnd)
NodeBinopExprLogAnd::NodeBinopExprLogAnd	ast_node_main_classes.hpp	/^	inline NodeBinopExprLogAnd(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprLogAnd	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprLogAnd::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprLogAnd	typeref:typename:string	access:public	signature:() const
NodeBinopExprLogAnd::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprLogAnd	typeref:typename:string	access:public	signature:() const
NodeBinopExprLogAnd::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprLogAnd	typeref:typename:Type	access:public	signature:() const
NodeBinopExprLogOr	ast_node_main_classes.hpp	/^	inline NodeBinopExprLogOr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprLogOr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprLogOr	ast_node_main_classes.hpp	/^class NodeBinopExprLogOr : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprLogOr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprLogOr);$/;"	kind:p	class:NodeBinopExprLogOr	access:public	signature:(NodeBinopExprLogOr)
NodeBinopExprLogOr::NodeBinopExprLogOr	ast_node_main_classes.hpp	/^	inline NodeBinopExprLogOr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprLogOr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprLogOr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprLogOr	typeref:typename:string	access:public	signature:() const
NodeBinopExprLogOr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprLogOr	typeref:typename:string	access:public	signature:() const
NodeBinopExprLogOr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprLogOr	typeref:typename:Type	access:public	signature:() const
NodeBinopExprMinus	ast_node_main_classes.hpp	/^	inline NodeBinopExprMinus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprMinus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprMinus	ast_node_main_classes.hpp	/^class NodeBinopExprMinus : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprMinus::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprMinus);$/;"	kind:p	class:NodeBinopExprMinus	access:public	signature:(NodeBinopExprMinus)
NodeBinopExprMinus::NodeBinopExprMinus	ast_node_main_classes.hpp	/^	inline NodeBinopExprMinus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprMinus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprMinus::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprMinus	typeref:typename:string	access:public	signature:() const
NodeBinopExprMinus::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprMinus	typeref:typename:string	access:public	signature:() const
NodeBinopExprMinus::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprMinus	typeref:typename:Type	access:public	signature:() const
NodeBinopExprMod	ast_node_main_classes.hpp	/^	inline NodeBinopExprMod(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprMod	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprMod	ast_node_main_classes.hpp	/^class NodeBinopExprMod : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprMod::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprMod);$/;"	kind:p	class:NodeBinopExprMod	access:public	signature:(NodeBinopExprMod)
NodeBinopExprMod::NodeBinopExprMod	ast_node_main_classes.hpp	/^	inline NodeBinopExprMod(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprMod	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprMod::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprMod	typeref:typename:string	access:public	signature:() const
NodeBinopExprMod::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprMod	typeref:typename:string	access:public	signature:() const
NodeBinopExprMod::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprMod	typeref:typename:Type	access:public	signature:() const
NodeBinopExprMul	ast_node_main_classes.hpp	/^	inline NodeBinopExprMul(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprMul	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprMul	ast_node_main_classes.hpp	/^class NodeBinopExprMul : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprMul::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprMul);$/;"	kind:p	class:NodeBinopExprMul	access:public	signature:(NodeBinopExprMul)
NodeBinopExprMul::NodeBinopExprMul	ast_node_main_classes.hpp	/^	inline NodeBinopExprMul(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprMul	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprMul::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprMul	typeref:typename:string	access:public	signature:() const
NodeBinopExprMul::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprMul	typeref:typename:string	access:public	signature:() const
NodeBinopExprMul::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprMul	typeref:typename:Type	access:public	signature:() const
NodeBinopExprPlus	ast_node_main_classes.hpp	/^	inline NodeBinopExprPlus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprPlus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprPlus	ast_node_main_classes.hpp	/^class NodeBinopExprPlus : public NodeBinopExprBase$/;"	kind:c	inherits:NodeBinopExprBase
NodeBinopExprPlus::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBinopExprPlus);$/;"	kind:p	class:NodeBinopExprPlus	access:public	signature:(NodeBinopExprPlus)
NodeBinopExprPlus::NodeBinopExprPlus	ast_node_main_classes.hpp	/^	inline NodeBinopExprPlus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBinopExprPlus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBinopExprPlus::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprPlus	typeref:typename:string	access:public	signature:() const
NodeBinopExprPlus::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprPlus	typeref:typename:string	access:public	signature:() const
NodeBinopExprPlus::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprPlus	typeref:typename:Type	access:public	signature:() const
NodeBracketPair	ast_node_main_classes.hpp	/^	inline NodeBracketPair(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBracketPair	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBracketPair	ast_node_main_classes.hpp	/^class NodeBracketPair : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeBracketPair::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBracketPair);$/;"	kind:p	class:NodeBracketPair	access:public	signature:(NodeBracketPair)
NodeBracketPair::NodeBracketPair	ast_node_main_classes.hpp	/^	inline NodeBracketPair(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeBracketPair	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeBracketPair::_left	ast_node_main_classes.hpp	/^	Child _left,$/;"	kind:m	class:NodeBracketPair	typeref:typename:Child	access:protected
NodeBracketPair::_right	ast_node_main_classes.hpp	/^		_right;$/;"	kind:m	class:NodeBracketPair	typeref:typename:Child	access:protected
NodeBracketPair::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBracketPair	typeref:typename:string	access:public	signature:() const
NodeBracketPair::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBracketPair	typeref:typename:string	access:public	signature:() const
NodeBracketPair::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBracketPair	typeref:typename:Type	access:public	signature:() const
NodeCall	ast_node_main_classes.hpp	/^	inline NodeCall(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeCall	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_or_ident_terminal,Child && s_param_inst_list,Child && s_arg_inst_list)
NodeCall	ast_node_main_classes.hpp	/^class NodeCall : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeCall::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeCall);$/;"	kind:p	class:NodeCall	access:public	signature:(NodeCall)
NodeCall::NodeCall	ast_node_main_classes.hpp	/^	inline NodeCall(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeCall	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_or_ident_terminal,Child && s_param_inst_list,Child && s_arg_inst_list)
NodeCall::_arg_inst_list	ast_node_main_classes.hpp	/^		_arg_inst_list;$/;"	kind:m	class:NodeCall	typeref:typename:Child	access:protected
NodeCall::_ident_or_ident_terminal	ast_node_main_classes.hpp	/^	Child _ident_or_ident_terminal,$/;"	kind:m	class:NodeCall	typeref:typename:Child	access:protected
NodeCall::_param_inst_list	ast_node_main_classes.hpp	/^		_param_inst_list,$/;"	kind:m	class:NodeCall	typeref:typename:Child	access:protected
NodeCall::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeCall	typeref:typename:string	access:public	signature:() const
NodeCall::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeCall	typeref:typename:string	access:public	signature:() const
NodeCall::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeCall	typeref:typename:Type	access:public	signature:() const
NodeCatExpr	ast_node_main_classes.hpp	/^	inline NodeCatExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeCatExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_list)
NodeCatExpr	ast_node_main_classes.hpp	/^class NodeCatExpr : public NodeExprBase$/;"	kind:c	inherits:NodeExprBase
NodeCatExpr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeCatExpr);$/;"	kind:p	class:NodeCatExpr	access:public	signature:(NodeCatExpr)
NodeCatExpr::NodeCatExpr	ast_node_main_classes.hpp	/^	inline NodeCatExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeCatExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_list)
NodeCatExpr::_list	ast_node_main_classes.hpp	/^	Child _list;$/;"	kind:m	class:NodeCatExpr	typeref:typename:Child	access:protected
NodeCatExpr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeCatExpr	typeref:typename:string	access:public	signature:() const
NodeCatExpr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeCatExpr	typeref:typename:string	access:public	signature:() const
NodeCatExpr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeCatExpr	typeref:typename:Type	access:public	signature:() const
NodeClass	ast_node_main_classes.hpp	/^	inline NodeClass(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeClass	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_packed,Child && s_ident,Child && s_param_list,Child && s_extends,Child && s_scope,Child && s_var_list)
NodeClass	ast_node_main_classes.hpp	/^class NodeClass : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeClass::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeClass);$/;"	kind:p	class:NodeClass	access:public	signature:(NodeClass)
NodeClass::NodeClass	ast_node_main_classes.hpp	/^	inline NodeClass(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeClass	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_packed,Child && s_ident,Child && s_param_list,Child && s_extends,Child && s_scope,Child && s_var_list)
NodeClass::_extends	ast_node_main_classes.hpp	/^		_extends,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
NodeClass::_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
NodeClass::_packed	ast_node_main_classes.hpp	/^	bool _packed;$/;"	kind:m	class:NodeClass	typeref:typename:bool	access:protected
NodeClass::_param_list	ast_node_main_classes.hpp	/^		_param_list,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
NodeClass::_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
NodeClass::_var_list	ast_node_main_classes.hpp	/^		_var_list;$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
NodeClass::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeClass	typeref:typename:string	access:public	signature:() const
NodeClass::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeClass	typeref:typename:string	access:public	signature:() const
NodeClass::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeClass	typeref:typename:Type	access:public	signature:() const
NodeConstString	ast_node_main_classes.hpp	/^	inline NodeConstString(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeConstString	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_s)
NodeConstString	ast_node_main_classes.hpp	/^class NodeConstString : public NodeHasString$/;"	kind:c	inherits:NodeHasString
NodeConstString::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeConstString);$/;"	kind:p	class:NodeConstString	access:public	signature:(NodeConstString)
NodeConstString::NodeConstString	ast_node_main_classes.hpp	/^	inline NodeConstString(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeConstString	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_s)
NodeConstString::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeConstString	typeref:typename:string	access:public	signature:() const
NodeConstString::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeConstString	typeref:typename:string	access:public	signature:() const
NodeConstString::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeConstString	typeref:typename:Type	access:public	signature:() const
NodeContAssignStmt	ast_node_main_classes.hpp	/^	inline NodeContAssignStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeContAssignStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeContAssignStmt	ast_node_main_classes.hpp	/^class NodeContAssignStmt : public NodeLeftRightBase$/;"	kind:c	inherits:NodeLeftRightBase
NodeContAssignStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeContAssignStmt);$/;"	kind:p	class:NodeContAssignStmt	access:public	signature:(NodeContAssignStmt)
NodeContAssignStmt::NodeContAssignStmt	ast_node_main_classes.hpp	/^	inline NodeContAssignStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeContAssignStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeContAssignStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeContAssignStmt	typeref:typename:string	access:public	signature:() const
NodeContAssignStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeContAssignStmt	typeref:typename:string	access:public	signature:() const
NodeContAssignStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeContAssignStmt	typeref:typename:Type	access:public	signature:() const
NodeCoverStmt	ast_node_main_classes.hpp	/^	inline NodeCoverStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeCoverStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeCoverStmt	ast_node_main_classes.hpp	/^class NodeCoverStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeCoverStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeCoverStmt);$/;"	kind:p	class:NodeCoverStmt	access:public	signature:(NodeCoverStmt)
NodeCoverStmt::NodeCoverStmt	ast_node_main_classes.hpp	/^	inline NodeCoverStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeCoverStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeCoverStmt::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeCoverStmt	typeref:typename:Child	access:protected
NodeCoverStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeCoverStmt	typeref:typename:string	access:public	signature:() const
NodeCoverStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeCoverStmt	typeref:typename:string	access:public	signature:() const
NodeCoverStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeCoverStmt	typeref:typename:Type	access:public	signature:() const
NodeDeclCallable	ast_node_main_classes.hpp	/^	inline NodeDeclCallable(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclCallable	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclCallable	ast_node_main_classes.hpp	/^class NodeDeclCallable : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeDeclCallable::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclCallable);$/;"	kind:p	class:NodeDeclCallable	access:public	signature:(NodeDeclCallable)
NodeDeclCallable::NodeDeclCallable	ast_node_main_classes.hpp	/^	inline NodeDeclCallable(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclCallable	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclCallable::_arg_list	ast_node_main_classes.hpp	/^		_arg_list,$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
NodeDeclCallable::_ident_or_op	ast_node_main_classes.hpp	/^		_ident_or_op,$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
NodeDeclCallable::_param_list	ast_node_main_classes.hpp	/^	Child _param_list,$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
NodeDeclCallable::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
NodeDeclCallable::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclCallable	typeref:typename:string	access:public	signature:() const
NodeDeclCallable::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclCallable	typeref:typename:string	access:public	signature:() const
NodeDeclCallable::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclCallable	typeref:typename:Type	access:public	signature:() const
NodeDeclConstList	ast_node_main_classes.hpp	/^	inline NodeDeclConstList(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclConstList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_ident_term_equals_extra_list)
NodeDeclConstList	ast_node_main_classes.hpp	/^class NodeDeclConstList : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeDeclConstList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclConstList);$/;"	kind:p	class:NodeDeclConstList	access:public	signature:(NodeDeclConstList)
NodeDeclConstList::NodeDeclConstList	ast_node_main_classes.hpp	/^	inline NodeDeclConstList(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclConstList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_ident_term_equals_extra_list)
NodeDeclConstList::_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^		_ident_term_equals_extra_list;$/;"	kind:m	class:NodeDeclConstList	typeref:typename:Child	access:protected
NodeDeclConstList::_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename,$/;"	kind:m	class:NodeDeclConstList	typeref:typename:Child	access:protected
NodeDeclConstList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclConstList	typeref:typename:string	access:public	signature:() const
NodeDeclConstList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclConstList	typeref:typename:string	access:public	signature:() const
NodeDeclConstList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclConstList	typeref:typename:Type	access:public	signature:() const
NodeDeclFunc	ast_node_main_classes.hpp	/^	inline NodeDeclFunc(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclFunc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclFunc	ast_node_main_classes.hpp	/^class NodeDeclFunc : public NodeDeclCallable$/;"	kind:c	inherits:NodeDeclCallable
NodeDeclFunc::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclFunc);$/;"	kind:p	class:NodeDeclFunc	access:public	signature:(NodeDeclFunc)
NodeDeclFunc::NodeDeclFunc	ast_node_main_classes.hpp	/^	inline NodeDeclFunc(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclFunc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclFunc::_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename;$/;"	kind:m	class:NodeDeclFunc	typeref:typename:Child	access:protected
NodeDeclFunc::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclFunc	typeref:typename:string	access:public	signature:() const
NodeDeclFunc::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclFunc	typeref:typename:string	access:public	signature:() const
NodeDeclFunc::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclFunc	typeref:typename:Type	access:public	signature:() const
NodeDeclProc	ast_node_main_classes.hpp	/^	inline NodeDeclProc(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclProc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_is_port,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclProc	ast_node_main_classes.hpp	/^class NodeDeclProc : public NodeDeclCallable$/;"	kind:c	inherits:NodeDeclCallable
NodeDeclProc::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclProc);$/;"	kind:p	class:NodeDeclProc	access:public	signature:(NodeDeclProc)
NodeDeclProc::NodeDeclProc	ast_node_main_classes.hpp	/^	inline NodeDeclProc(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclProc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_is_port,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclProc::_is_port	ast_node_main_classes.hpp	/^	bool _is_port;$/;"	kind:m	class:NodeDeclProc	typeref:typename:bool	access:protected
NodeDeclProc::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclProc	typeref:typename:string	access:public	signature:() const
NodeDeclProc::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclProc	typeref:typename:string	access:public	signature:() const
NodeDeclProc::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclProc	typeref:typename:Type	access:public	signature:() const
NodeDeclTask	ast_node_main_classes.hpp	/^	inline NodeDeclTask(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclTask	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclTask	ast_node_main_classes.hpp	/^class NodeDeclTask : public NodeDeclCallable$/;"	kind:c	inherits:NodeDeclCallable
NodeDeclTask::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclTask);$/;"	kind:p	class:NodeDeclTask	access:public	signature:(NodeDeclTask)
NodeDeclTask::NodeDeclTask	ast_node_main_classes.hpp	/^	inline NodeDeclTask(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclTask	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_param_list,Child && s_arg_list,Child && s_ident_or_op,Child && s_scope)
NodeDeclTask::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclTask	typeref:typename:string	access:public	signature:() const
NodeDeclTask::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclTask	typeref:typename:string	access:public	signature:() const
NodeDeclTask::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclTask	typeref:typename:Type	access:public	signature:() const
NodeDeclVarList	ast_node_main_classes.hpp	/^	inline NodeDeclVarList(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclVarList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_ident_term_equals_extra_list)
NodeDeclVarList	ast_node_main_classes.hpp	/^class NodeDeclVarList : public NodeDeclConstList$/;"	kind:c	inherits:NodeDeclConstList
NodeDeclVarList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDeclVarList);$/;"	kind:p	class:NodeDeclVarList	access:public	signature:(NodeDeclVarList)
NodeDeclVarList::NodeDeclVarList	ast_node_main_classes.hpp	/^	inline NodeDeclVarList(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDeclVarList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_ident_term_equals_extra_list)
NodeDeclVarList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclVarList	typeref:typename:string	access:public	signature:() const
NodeDeclVarList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclVarList	typeref:typename:string	access:public	signature:() const
NodeDeclVarList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclVarList	typeref:typename:Type	access:public	signature:() const
NodeDefaultCaseItem	ast_node_main_classes.hpp	/^	inline NodeDefaultCaseItem(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDefaultCaseItem	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_scope)
NodeDefaultCaseItem	ast_node_main_classes.hpp	/^class NodeDefaultCaseItem : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeDefaultCaseItem::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDefaultCaseItem);$/;"	kind:p	class:NodeDefaultCaseItem	access:public	signature:(NodeDefaultCaseItem)
NodeDefaultCaseItem::NodeDefaultCaseItem	ast_node_main_classes.hpp	/^	inline NodeDefaultCaseItem(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDefaultCaseItem	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_scope)
NodeDefaultCaseItem::_scope	ast_node_main_classes.hpp	/^	Child _scope;$/;"	kind:m	class:NodeDefaultCaseItem	typeref:typename:Child	access:protected
NodeDefaultCaseItem::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDefaultCaseItem	typeref:typename:string	access:public	signature:() const
NodeDefaultCaseItem::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDefaultCaseItem	typeref:typename:string	access:public	signature:() const
NodeDefaultCaseItem::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDefaultCaseItem	typeref:typename:Type	access:public	signature:() const
NodeDollarResizeStmt	ast_node_main_classes.hpp	/^	inline NodeDollarResizeStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDollarResizeStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_etc,Child && s_expr)
NodeDollarResizeStmt	ast_node_main_classes.hpp	/^class NodeDollarResizeStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeDollarResizeStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeDollarResizeStmt);$/;"	kind:p	class:NodeDollarResizeStmt	access:public	signature:(NodeDollarResizeStmt)
NodeDollarResizeStmt::NodeDollarResizeStmt	ast_node_main_classes.hpp	/^	inline NodeDollarResizeStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeDollarResizeStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_etc,Child && s_expr)
NodeDollarResizeStmt::_expr	ast_node_main_classes.hpp	/^		_expr;$/;"	kind:m	class:NodeDollarResizeStmt	typeref:typename:Child	access:protected
NodeDollarResizeStmt::_ident_etc	ast_node_main_classes.hpp	/^	Child _ident_etc,$/;"	kind:m	class:NodeDollarResizeStmt	typeref:typename:Child	access:protected
NodeDollarResizeStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDollarResizeStmt	typeref:typename:string	access:public	signature:() const
NodeDollarResizeStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDollarResizeStmt	typeref:typename:string	access:public	signature:() const
NodeDollarResizeStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDollarResizeStmt	typeref:typename:Type	access:public	signature:() const
NodeEdgeList	ast_node_main_classes.hpp	/^	inline NodeEdgeList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeEdgeList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeEdgeList	ast_node_main_classes.hpp	/^class NodeEdgeList : public NodeList$/;"	kind:c	inherits:NodeList
NodeEdgeList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeEdgeList);$/;"	kind:p	class:NodeEdgeList	access:public	signature:(NodeEdgeList)
NodeEdgeList::NodeEdgeList	ast_node_main_classes.hpp	/^	inline NodeEdgeList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeEdgeList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeEdgeList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeEdgeList	typeref:typename:string	access:public	signature:() const
NodeEdgeList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeEdgeList	typeref:typename:string	access:public	signature:() const
NodeEdgeList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeEdgeList	typeref:typename:Type	access:public	signature:() const
NodeEnum	ast_node_main_classes.hpp	/^	inline NodeEnum(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeEnum	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_ident,Child && s_scope,Child && s_var_list)
NodeEnum	ast_node_main_classes.hpp	/^class NodeEnum : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeEnum::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeEnum);$/;"	kind:p	class:NodeEnum	access:public	signature:(NodeEnum)
NodeEnum::NodeEnum	ast_node_main_classes.hpp	/^	inline NodeEnum(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeEnum	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_the_typename,Child && s_ident,Child && s_scope,Child && s_var_list)
NodeEnum::_ident	ast_node_main_classes.hpp	/^		_ident,$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
NodeEnum::_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
NodeEnum::_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename,$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
NodeEnum::_var_list	ast_node_main_classes.hpp	/^		_var_list;$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
NodeEnum::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeEnum	typeref:typename:string	access:public	signature:() const
NodeEnum::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeEnum	typeref:typename:string	access:public	signature:() const
NodeEnum::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeEnum	typeref:typename:Type	access:public	signature:() const
NodeExprBase	ast_node_main_classes.hpp	/^	inline NodeExprBase(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeExprBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeExprBase	ast_node_main_classes.hpp	/^class NodeExprBase : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeExprBase::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeExprBase);$/;"	kind:p	class:NodeExprBase	access:public	signature:(NodeExprBase)
NodeExprBase::NodeExprBase	ast_node_main_classes.hpp	/^	inline NodeExprBase(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeExprBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeExprBase::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeExprBase	typeref:typename:string	access:public	signature:() const
NodeExprBase::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeExprBase	typeref:typename:string	access:public	signature:() const
NodeExprBase::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeExprBase	typeref:typename:Type	access:public	signature:() const
NodeExprCaseItem	ast_node_main_classes.hpp	/^	inline NodeExprCaseItem(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeExprCaseItem	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr,Child && s_scope)
NodeExprCaseItem	ast_node_main_classes.hpp	/^class NodeExprCaseItem : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeExprCaseItem::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeExprCaseItem);$/;"	kind:p	class:NodeExprCaseItem	access:public	signature:(NodeExprCaseItem)
NodeExprCaseItem::NodeExprCaseItem	ast_node_main_classes.hpp	/^	inline NodeExprCaseItem(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeExprCaseItem	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr,Child && s_scope)
NodeExprCaseItem::_expr	ast_node_main_classes.hpp	/^	Child _expr,$/;"	kind:m	class:NodeExprCaseItem	typeref:typename:Child	access:protected
NodeExprCaseItem::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeExprCaseItem	typeref:typename:Child	access:protected
NodeExprCaseItem::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeExprCaseItem	typeref:typename:string	access:public	signature:() const
NodeExprCaseItem::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeExprCaseItem	typeref:typename:string	access:public	signature:() const
NodeExprCaseItem::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeExprCaseItem	typeref:typename:Type	access:public	signature:() const
NodeExtends	ast_node_main_classes.hpp	/^	inline NodeExtends(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeExtends	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_is_virtual,Child && s_the_typename)
NodeExtends	ast_node_main_classes.hpp	/^class NodeExtends : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeExtends::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeExtends);$/;"	kind:p	class:NodeExtends	access:public	signature:(NodeExtends)
NodeExtends::NodeExtends	ast_node_main_classes.hpp	/^	inline NodeExtends(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeExtends	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_is_virtual,Child && s_the_typename)
NodeExtends::_is_virtual	ast_node_main_classes.hpp	/^	bool _is_virtual;$/;"	kind:m	class:NodeExtends	typeref:typename:bool	access:protected
NodeExtends::_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename;$/;"	kind:m	class:NodeExtends	typeref:typename:Child	access:protected
NodeExtends::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeExtends	typeref:typename:string	access:public	signature:() const
NodeExtends::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeExtends	typeref:typename:string	access:public	signature:() const
NodeExtends::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeExtends	typeref:typename:Type	access:public	signature:() const
NodeForStmt	ast_node_main_classes.hpp	/^	inline NodeForStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeForStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_var,Child && s_items,Child && s_scope)
NodeForStmt	ast_node_main_classes.hpp	/^class NodeForStmt : public NodeAnyForStmt$/;"	kind:c	inherits:NodeAnyForStmt
NodeForStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeForStmt);$/;"	kind:p	class:NodeForStmt	access:public	signature:(NodeForStmt)
NodeForStmt::NodeForStmt	ast_node_main_classes.hpp	/^	inline NodeForStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeForStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_var,Child && s_items,Child && s_scope)
NodeForStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeForStmt	typeref:typename:string	access:public	signature:() const
NodeForStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeForStmt	typeref:typename:string	access:public	signature:() const
NodeForStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeForStmt	typeref:typename:Type	access:public	signature:() const
NodeGenerateForStmt	ast_node_main_classes.hpp	/^	inline NodeGenerateForStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeGenerateForStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_label,Child && s_var,Child && s_items,Child && s_scope)
NodeGenerateForStmt	ast_node_main_classes.hpp	/^class NodeGenerateForStmt : public NodeAnyForStmt$/;"	kind:c	inherits:NodeAnyForStmt
NodeGenerateForStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeGenerateForStmt);$/;"	kind:p	class:NodeGenerateForStmt	access:public	signature:(NodeGenerateForStmt)
NodeGenerateForStmt::NodeGenerateForStmt	ast_node_main_classes.hpp	/^	inline NodeGenerateForStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeGenerateForStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_label,Child && s_var,Child && s_items,Child && s_scope)
NodeGenerateForStmt::_label	ast_node_main_classes.hpp	/^	Child _label;$/;"	kind:m	class:NodeGenerateForStmt	typeref:typename:Child	access:protected
NodeGenerateForStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeGenerateForStmt	typeref:typename:string	access:public	signature:() const
NodeGenerateForStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeGenerateForStmt	typeref:typename:string	access:public	signature:() const
NodeGenerateForStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeGenerateForStmt	typeref:typename:Type	access:public	signature:() const
NodeGenerateIfStmt	ast_node_main_classes.hpp	/^	inline NodeGenerateIfStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeGenerateIfStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_cond_expr,Child && s_scope,Child && s_else_stmt)
NodeGenerateIfStmt	ast_node_main_classes.hpp	/^class NodeGenerateIfStmt : public NodeIfStmt$/;"	kind:c	inherits:NodeIfStmt
NodeGenerateIfStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeGenerateIfStmt);$/;"	kind:p	class:NodeGenerateIfStmt	access:public	signature:(NodeGenerateIfStmt)
NodeGenerateIfStmt::NodeGenerateIfStmt	ast_node_main_classes.hpp	/^	inline NodeGenerateIfStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeGenerateIfStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_cond_expr,Child && s_scope,Child && s_else_stmt)
NodeGenerateIfStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeGenerateIfStmt	typeref:typename:string	access:public	signature:() const
NodeGenerateIfStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeGenerateIfStmt	typeref:typename:string	access:public	signature:() const
NodeGenerateIfStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeGenerateIfStmt	typeref:typename:Type	access:public	signature:() const
NodeHasString	ast_node_main_classes.hpp	/^	inline NodeHasString(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeHasString	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_s)
NodeHasString	ast_node_main_classes.hpp	/^class NodeHasString : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeHasString::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeHasString);$/;"	kind:p	class:NodeHasString	access:public	signature:(NodeHasString)
NodeHasString::NodeHasString	ast_node_main_classes.hpp	/^	inline NodeHasString(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeHasString	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_s)
NodeHasString::_s	ast_node_main_classes.hpp	/^	string _s;$/;"	kind:m	class:NodeHasString	typeref:typename:string	access:protected
NodeHasString::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeHasString	typeref:typename:string	access:public	signature:() const
NodeHasString::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeHasString	typeref:typename:string	access:public	signature:() const
NodeHasString::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeHasString	typeref:typename:Type	access:public	signature:() const
NodeIdent	ast_node_main_classes.hpp	/^	inline NodeIdent(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIdent	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_s)
NodeIdent	ast_node_main_classes.hpp	/^class NodeIdent : public NodeHasString$/;"	kind:c	inherits:NodeHasString
NodeIdent::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdent);$/;"	kind:p	class:NodeIdent	access:public	signature:(NodeIdent)
NodeIdent::NodeIdent	ast_node_main_classes.hpp	/^	inline NodeIdent(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIdent	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_s)
NodeIdent::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdent	typeref:typename:string	access:public	signature:() const
NodeIdent::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdent	typeref:typename:string	access:public	signature:() const
NodeIdent::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdent	typeref:typename:Type	access:public	signature:() const
NodeIdentEtc	ast_node_main_classes.hpp	/^	inline NodeIdentEtc(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentEtc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentEtc	ast_node_main_classes.hpp	/^class NodeIdentEtc : public NodeList$/;"	kind:c	inherits:NodeList
NodeIdentEtc::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentEtc);$/;"	kind:p	class:NodeIdentEtc	access:public	signature:(NodeIdentEtc)
NodeIdentEtc::NodeIdentEtc	ast_node_main_classes.hpp	/^	inline NodeIdentEtc(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentEtc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentEtc::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentEtc	typeref:typename:string	access:public	signature:() const
NodeIdentEtc::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentEtc	typeref:typename:string	access:public	signature:() const
NodeIdentEtc::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentEtc	typeref:typename:Type	access:public	signature:() const
NodeIdentList	ast_node_main_classes.hpp	/^	inline NodeIdentList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentList	ast_node_main_classes.hpp	/^class NodeIdentList : public NodeList$/;"	kind:c	inherits:NodeList
NodeIdentList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentList);$/;"	kind:p	class:NodeIdentList	access:public	signature:(NodeIdentList)
NodeIdentList::NodeIdentList	ast_node_main_classes.hpp	/^	inline NodeIdentList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentList	typeref:typename:string	access:public	signature:() const
NodeIdentList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentList	typeref:typename:string	access:public	signature:() const
NodeIdentList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentList	typeref:typename:Type	access:public	signature:() const
NodeIdentMemberAccess	ast_node_main_classes.hpp	/^	inline NodeIdentMemberAccess(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentMemberAccess	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentMemberAccess	ast_node_main_classes.hpp	/^class NodeIdentMemberAccess : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeIdentMemberAccess::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentMemberAccess);$/;"	kind:p	class:NodeIdentMemberAccess	access:public	signature:(NodeIdentMemberAccess)
NodeIdentMemberAccess::NodeIdentMemberAccess	ast_node_main_classes.hpp	/^	inline NodeIdentMemberAccess(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentMemberAccess	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentMemberAccess::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentMemberAccess	typeref:typename:string	access:public	signature:() const
NodeIdentMemberAccess::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentMemberAccess	typeref:typename:string	access:public	signature:() const
NodeIdentMemberAccess::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentMemberAccess	typeref:typename:Type	access:public	signature:() const
NodeIdentScopeAccess	ast_node_main_classes.hpp	/^	inline NodeIdentScopeAccess(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentScopeAccess	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentScopeAccess	ast_node_main_classes.hpp	/^class NodeIdentScopeAccess : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeIdentScopeAccess::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentScopeAccess);$/;"	kind:p	class:NodeIdentScopeAccess	access:public	signature:(NodeIdentScopeAccess)
NodeIdentScopeAccess::NodeIdentScopeAccess	ast_node_main_classes.hpp	/^	inline NodeIdentScopeAccess(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentScopeAccess	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentScopeAccess::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentScopeAccess	typeref:typename:string	access:public	signature:() const
NodeIdentScopeAccess::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentScopeAccess	typeref:typename:string	access:public	signature:() const
NodeIdentScopeAccess::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentScopeAccess	typeref:typename:Type	access:public	signature:() const
NodeIdentTermEqualsExtra	ast_node_main_classes.hpp	/^	inline NodeIdentTermEqualsExtra(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIdentTermEqualsExtra	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_terminal,Child && s_extra)
NodeIdentTermEqualsExtra	ast_node_main_classes.hpp	/^class NodeIdentTermEqualsExtra : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeIdentTermEqualsExtra::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentTermEqualsExtra);$/;"	kind:p	class:NodeIdentTermEqualsExtra	access:public	signature:(NodeIdentTermEqualsExtra)
NodeIdentTermEqualsExtra::NodeIdentTermEqualsExtra	ast_node_main_classes.hpp	/^	inline NodeIdentTermEqualsExtra(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIdentTermEqualsExtra	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_terminal,Child && s_extra)
NodeIdentTermEqualsExtra::_extra	ast_node_main_classes.hpp	/^		_extra;$/;"	kind:m	class:NodeIdentTermEqualsExtra	typeref:typename:Child	access:protected
NodeIdentTermEqualsExtra::_ident_terminal	ast_node_main_classes.hpp	/^	Child _ident_terminal,$/;"	kind:m	class:NodeIdentTermEqualsExtra	typeref:typename:Child	access:protected
NodeIdentTermEqualsExtra::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentTermEqualsExtra	typeref:typename:string	access:public	signature:() const
NodeIdentTermEqualsExtra::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentTermEqualsExtra	typeref:typename:string	access:public	signature:() const
NodeIdentTermEqualsExtra::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentTermEqualsExtra	typeref:typename:Type	access:public	signature:() const
NodeIdentTermEqualsExtraList	ast_node_main_classes.hpp	/^	inline NodeIdentTermEqualsExtraList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentTermEqualsExtraList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentTermEqualsExtraList	ast_node_main_classes.hpp	/^class NodeIdentTermEqualsExtraList : public NodeList$/;"	kind:c	inherits:NodeList
NodeIdentTermEqualsExtraList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentTermEqualsExtraList);$/;"	kind:p	class:NodeIdentTermEqualsExtraList	access:public	signature:(NodeIdentTermEqualsExtraList)
NodeIdentTermEqualsExtraList::NodeIdentTermEqualsExtraList	ast_node_main_classes.hpp	/^	inline NodeIdentTermEqualsExtraList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeIdentTermEqualsExtraList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeIdentTermEqualsExtraList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentTermEqualsExtraList	typeref:typename:string	access:public	signature:() const
NodeIdentTermEqualsExtraList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentTermEqualsExtraList	typeref:typename:string	access:public	signature:() const
NodeIdentTermEqualsExtraList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentTermEqualsExtraList	typeref:typename:Type	access:public	signature:() const
NodeIdentTerminal	ast_node_main_classes.hpp	/^	inline NodeIdentTerminal(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIdentTerminal	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident)
NodeIdentTerminal	ast_node_main_classes.hpp	/^class NodeIdentTerminal : public NodeList$/;"	kind:c	inherits:NodeList
NodeIdentTerminal::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIdentTerminal);$/;"	kind:p	class:NodeIdentTerminal	access:public	signature:(NodeIdentTerminal)
NodeIdentTerminal::NodeIdentTerminal	ast_node_main_classes.hpp	/^	inline NodeIdentTerminal(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIdentTerminal	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident)
NodeIdentTerminal::_ident	ast_node_main_classes.hpp	/^	Child _ident;$/;"	kind:m	class:NodeIdentTerminal	typeref:typename:Child	access:protected
NodeIdentTerminal::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentTerminal	typeref:typename:string	access:public	signature:() const
NodeIdentTerminal::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentTerminal	typeref:typename:string	access:public	signature:() const
NodeIdentTerminal::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentTerminal	typeref:typename:Type	access:public	signature:() const
NodeIfStmt	ast_node_main_classes.hpp	/^	inline NodeIfStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIfStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_cond_expr,Child && s_scope,Child && s_else_stmt)
NodeIfStmt	ast_node_main_classes.hpp	/^class NodeIfStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeIfStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeIfStmt);$/;"	kind:p	class:NodeIfStmt	access:public	signature:(NodeIfStmt)
NodeIfStmt::NodeIfStmt	ast_node_main_classes.hpp	/^	inline NodeIfStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeIfStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_cond_expr,Child && s_scope,Child && s_else_stmt)
NodeIfStmt::_cond_expr	ast_node_main_classes.hpp	/^	Child _cond_expr,$/;"	kind:m	class:NodeIfStmt	typeref:typename:Child	access:protected
NodeIfStmt::_else_stmt	ast_node_main_classes.hpp	/^		_else_stmt;$/;"	kind:m	class:NodeIfStmt	typeref:typename:Child	access:protected
NodeIfStmt::_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeIfStmt	typeref:typename:Child	access:protected
NodeIfStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIfStmt	typeref:typename:string	access:public	signature:() const
NodeIfStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIfStmt	typeref:typename:string	access:public	signature:() const
NodeIfStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIfStmt	typeref:typename:Type	access:public	signature:() const
NodeInitialBlock	ast_node_main_classes.hpp	/^	inline NodeInitialBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeInitialBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_scope)
NodeInitialBlock	ast_node_main_classes.hpp	/^class NodeInitialBlock : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeInitialBlock::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeInitialBlock);$/;"	kind:p	class:NodeInitialBlock	access:public	signature:(NodeInitialBlock)
NodeInitialBlock::NodeInitialBlock	ast_node_main_classes.hpp	/^	inline NodeInitialBlock(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeInitialBlock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_scope)
NodeInitialBlock::_scope	ast_node_main_classes.hpp	/^	Child _scope;$/;"	kind:m	class:NodeInitialBlock	typeref:typename:Child	access:protected
NodeInitialBlock::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeInitialBlock	typeref:typename:string	access:public	signature:() const
NodeInitialBlock::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeInitialBlock	typeref:typename:string	access:public	signature:() const
NodeInitialBlock::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeInitialBlock	typeref:typename:Type	access:public	signature:() const
NodeInstModuleStmt	ast_node_main_classes.hpp	/^	inline NodeInstModuleStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeInstModuleStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_module_ident,Child && s_param_inst_list,Child && s_inst_ident,Child && s_arg_inst_list)
NodeInstModuleStmt	ast_node_main_classes.hpp	/^class NodeInstModuleStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeInstModuleStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeInstModuleStmt);$/;"	kind:p	class:NodeInstModuleStmt	access:public	signature:(NodeInstModuleStmt)
NodeInstModuleStmt::NodeInstModuleStmt	ast_node_main_classes.hpp	/^	inline NodeInstModuleStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeInstModuleStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_module_ident,Child && s_param_inst_list,Child && s_inst_ident,Child && s_arg_inst_list)
NodeInstModuleStmt::_arg_inst_list	ast_node_main_classes.hpp	/^		_arg_inst_list;$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
NodeInstModuleStmt::_inst_ident	ast_node_main_classes.hpp	/^		_inst_ident,$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
NodeInstModuleStmt::_module_ident	ast_node_main_classes.hpp	/^	Child _module_ident,$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
NodeInstModuleStmt::_param_inst_list	ast_node_main_classes.hpp	/^		_param_inst_list,$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
NodeInstModuleStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeInstModuleStmt	typeref:typename:string	access:public	signature:() const
NodeInstModuleStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeInstModuleStmt	typeref:typename:string	access:public	signature:() const
NodeInstModuleStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeInstModuleStmt	typeref:typename:Type	access:public	signature:() const
NodeIterator	liborangepower_src/linked_list_classes.hpp	/^		NodeIterator() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:()
NodeIterator	liborangepower_src/linked_list_classes.hpp	/^		inline NodeIterator(Node* s_node)$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:(Node * s_node)
NodeIterator	liborangepower_src/linked_list_classes.hpp	/^	class NodeIterator final$/;"	kind:c	class:liborangepower::containers::CircLinkedList	access:public
NodeLeftRightBase	ast_node_main_classes.hpp	/^	inline NodeLeftRightBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeLeftRightBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeLeftRightBase	ast_node_main_classes.hpp	/^class NodeLeftRightBase : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeLeftRightBase::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeLeftRightBase);$/;"	kind:p	class:NodeLeftRightBase	access:public	signature:(NodeLeftRightBase)
NodeLeftRightBase::NodeLeftRightBase	ast_node_main_classes.hpp	/^	inline NodeLeftRightBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeLeftRightBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeLeftRightBase::_left	ast_node_main_classes.hpp	/^	Child _left,$/;"	kind:m	class:NodeLeftRightBase	typeref:typename:Child	access:protected
NodeLeftRightBase::_right	ast_node_main_classes.hpp	/^		_right;$/;"	kind:m	class:NodeLeftRightBase	typeref:typename:Child	access:protected
NodeLeftRightBase::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeLeftRightBase	typeref:typename:string	access:public	signature:() const
NodeLeftRightBase::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeLeftRightBase	typeref:typename:string	access:public	signature:() const
NodeLeftRightBase::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeLeftRightBase	typeref:typename:Type	access:public	signature:() const
NodeList	ast_node_classes.hpp	/^	inline NodeList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:frost_hdl::ast::NodeList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeList	ast_node_classes.hpp	/^class NodeList : public NodeBase$/;"	kind:c	namespace:frost_hdl::ast	inherits:NodeBase
NodeListCat	ast_node_main_classes.hpp	/^	inline NodeListCat(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeListCat	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeListCat	ast_node_main_classes.hpp	/^class NodeListCat : public NodeList$/;"	kind:c	inherits:NodeList
NodeListCat::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeListCat);$/;"	kind:p	class:NodeListCat	access:public	signature:(NodeListCat)
NodeListCat::NodeListCat	ast_node_main_classes.hpp	/^	inline NodeListCat(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeListCat	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeListCat::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeListCat	typeref:typename:string	access:public	signature:() const
NodeListCat::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeListCat	typeref:typename:string	access:public	signature:() const
NodeListCat::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeListCat	typeref:typename:Type	access:public	signature:() const
NodeMemberAccessPrivateStmt	ast_node_main_classes.hpp	/^	inline NodeMemberAccessPrivateStmt(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeMemberAccessPrivateStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeMemberAccessPrivateStmt	ast_node_main_classes.hpp	/^class NodeMemberAccessPrivateStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeMemberAccessPrivateStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberAccessPrivateStmt);$/;"	kind:p	class:NodeMemberAccessPrivateStmt	access:public	signature:(NodeMemberAccessPrivateStmt)
NodeMemberAccessPrivateStmt::NodeMemberAccessPrivateStmt	ast_node_main_classes.hpp	/^	inline NodeMemberAccessPrivateStmt(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeMemberAccessPrivateStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeMemberAccessPrivateStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberAccessPrivateStmt	typeref:typename:string	access:public	signature:() const
NodeMemberAccessPrivateStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberAccessPrivateStmt	typeref:typename:string	access:public	signature:() const
NodeMemberAccessPrivateStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberAccessPrivateStmt	typeref:typename:Type	access:public	signature:() const
NodeMemberAccessProtectedStmt	ast_node_main_classes.hpp	/^	inline NodeMemberAccessProtectedStmt(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeMemberAccessProtectedStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeMemberAccessProtectedStmt	ast_node_main_classes.hpp	/^class NodeMemberAccessProtectedStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeMemberAccessProtectedStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberAccessProtectedStmt);$/;"	kind:p	class:NodeMemberAccessProtectedStmt	access:public	signature:(NodeMemberAccessProtectedStmt)
NodeMemberAccessProtectedStmt::NodeMemberAccessProtectedStmt	ast_node_main_classes.hpp	/^	inline NodeMemberAccessProtectedStmt(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeMemberAccessProtectedStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeMemberAccessProtectedStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberAccessProtectedStmt	typeref:typename:string	access:public	signature:() const
NodeMemberAccessProtectedStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberAccessProtectedStmt	typeref:typename:string	access:public	signature:() const
NodeMemberAccessProtectedStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberAccessProtectedStmt	typeref:typename:Type	access:public	signature:() const
NodeMemberAccessPublicStmt	ast_node_main_classes.hpp	/^	inline NodeMemberAccessPublicStmt(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeMemberAccessPublicStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeMemberAccessPublicStmt	ast_node_main_classes.hpp	/^class NodeMemberAccessPublicStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeMemberAccessPublicStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberAccessPublicStmt);$/;"	kind:p	class:NodeMemberAccessPublicStmt	access:public	signature:(NodeMemberAccessPublicStmt)
NodeMemberAccessPublicStmt::NodeMemberAccessPublicStmt	ast_node_main_classes.hpp	/^	inline NodeMemberAccessPublicStmt(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeMemberAccessPublicStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeMemberAccessPublicStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberAccessPublicStmt	typeref:typename:string	access:public	signature:() const
NodeMemberAccessPublicStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberAccessPublicStmt	typeref:typename:string	access:public	signature:() const
NodeMemberAccessPublicStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberAccessPublicStmt	typeref:typename:Type	access:public	signature:() const
NodeMemberCallable	ast_node_main_classes.hpp	/^	inline NodeMemberCallable(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeMemberCallable	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_is_const,const bool & s_is_virtual,const bool & s_is_static,const bool & s_is_ref,Child && s_callable)
NodeMemberCallable	ast_node_main_classes.hpp	/^class NodeMemberCallable : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeMemberCallable::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeMemberCallable);$/;"	kind:p	class:NodeMemberCallable	access:public	signature:(NodeMemberCallable)
NodeMemberCallable::NodeMemberCallable	ast_node_main_classes.hpp	/^	inline NodeMemberCallable(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeMemberCallable	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_is_const,const bool & s_is_virtual,const bool & s_is_static,const bool & s_is_ref,Child && s_callable)
NodeMemberCallable::_callable	ast_node_main_classes.hpp	/^	Child _callable;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:Child	access:protected
NodeMemberCallable::_is_const	ast_node_main_classes.hpp	/^	bool _is_const;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
NodeMemberCallable::_is_ref	ast_node_main_classes.hpp	/^	bool _is_ref;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
NodeMemberCallable::_is_static	ast_node_main_classes.hpp	/^	bool _is_static;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
NodeMemberCallable::_is_virtual	ast_node_main_classes.hpp	/^	bool _is_virtual;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
NodeMemberCallable::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberCallable	typeref:typename:string	access:public	signature:() const
NodeMemberCallable::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberCallable	typeref:typename:string	access:public	signature:() const
NodeMemberCallable::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberCallable	typeref:typename:Type	access:public	signature:() const
NodeModport	ast_node_main_classes.hpp	/^	inline NodeModport(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeModport	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident)
NodeModport	ast_node_main_classes.hpp	/^class NodeModport : public NodeList$/;"	kind:c	inherits:NodeList
NodeModport::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeModport);$/;"	kind:p	class:NodeModport	access:public	signature:(NodeModport)
NodeModport::NodeModport	ast_node_main_classes.hpp	/^	inline NodeModport(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeModport	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident)
NodeModport::_ident	ast_node_main_classes.hpp	/^	Child _ident;$/;"	kind:m	class:NodeModport	typeref:typename:Child	access:protected
NodeModport::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeModport	typeref:typename:string	access:public	signature:() const
NodeModport::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeModport	typeref:typename:string	access:public	signature:() const
NodeModport::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeModport	typeref:typename:Type	access:public	signature:() const
NodeModportSubList	ast_node_main_classes.hpp	/^	inline NodeModportSubList(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeModportSubList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_port_dir,Child && s_ident_list)
NodeModportSubList	ast_node_main_classes.hpp	/^class NodeModportSubList : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeModportSubList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeModportSubList);$/;"	kind:p	class:NodeModportSubList	access:public	signature:(NodeModportSubList)
NodeModportSubList::NodeModportSubList	ast_node_main_classes.hpp	/^	inline NodeModportSubList(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeModportSubList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const string & s_port_dir,Child && s_ident_list)
NodeModportSubList::_ident_list	ast_node_main_classes.hpp	/^	Child _ident_list;$/;"	kind:m	class:NodeModportSubList	typeref:typename:Child	access:protected
NodeModportSubList::_port_dir	ast_node_main_classes.hpp	/^	string _port_dir;$/;"	kind:m	class:NodeModportSubList	typeref:typename:string	access:protected
NodeModportSubList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeModportSubList	typeref:typename:string	access:public	signature:() const
NodeModportSubList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeModportSubList	typeref:typename:string	access:public	signature:() const
NodeModportSubList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeModportSubList	typeref:typename:Type	access:public	signature:() const
NodeModule	ast_node_main_classes.hpp	/^	inline NodeModule(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeModule	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident,Child && s_param_list,Child && s_port_list,Child && s_scope)
NodeModule	ast_node_main_classes.hpp	/^class NodeModule : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeModule::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeModule);$/;"	kind:p	class:NodeModule	access:public	signature:(NodeModule)
NodeModule::NodeModule	ast_node_main_classes.hpp	/^	inline NodeModule(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeModule	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident,Child && s_param_list,Child && s_port_list,Child && s_scope)
NodeModule::_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
NodeModule::_param_list	ast_node_main_classes.hpp	/^		_param_list,$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
NodeModule::_port_list	ast_node_main_classes.hpp	/^		_port_list,$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
NodeModule::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
NodeModule::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeModule	typeref:typename:string	access:public	signature:() const
NodeModule::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeModule	typeref:typename:string	access:public	signature:() const
NodeModule::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeModule	typeref:typename:Type	access:public	signature:() const
NodeNamedParamArgInstList	ast_node_main_classes.hpp	/^	inline NodeNamedParamArgInstList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeNamedParamArgInstList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeNamedParamArgInstList	ast_node_main_classes.hpp	/^class NodeNamedParamArgInstList : public NodeList$/;"	kind:c	inherits:NodeList
NodeNamedParamArgInstList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNamedParamArgInstList);$/;"	kind:p	class:NodeNamedParamArgInstList	access:public	signature:(NodeNamedParamArgInstList)
NodeNamedParamArgInstList::NodeNamedParamArgInstList	ast_node_main_classes.hpp	/^	inline NodeNamedParamArgInstList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeNamedParamArgInstList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeNamedParamArgInstList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNamedParamArgInstList	typeref:typename:string	access:public	signature:() const
NodeNamedParamArgInstList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNamedParamArgInstList	typeref:typename:string	access:public	signature:() const
NodeNamedParamArgInstList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNamedParamArgInstList	typeref:typename:Type	access:public	signature:() const
NodeNegedgeInst	ast_node_main_classes.hpp	/^	inline NodeNegedgeInst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeNegedgeInst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeNegedgeInst	ast_node_main_classes.hpp	/^class NodeNegedgeInst : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeNegedgeInst::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNegedgeInst);$/;"	kind:p	class:NodeNegedgeInst	access:public	signature:(NodeNegedgeInst)
NodeNegedgeInst::NodeNegedgeInst	ast_node_main_classes.hpp	/^	inline NodeNegedgeInst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeNegedgeInst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeNegedgeInst::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeNegedgeInst	typeref:typename:Child	access:protected
NodeNegedgeInst::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNegedgeInst	typeref:typename:string	access:public	signature:() const
NodeNegedgeInst::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNegedgeInst	typeref:typename:string	access:public	signature:() const
NodeNegedgeInst::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNegedgeInst	typeref:typename:Type	access:public	signature:() const
NodeNoParamPossibleTypename	ast_node_main_classes.hpp	/^	inline NodeNoParamPossibleTypename(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeNoParamPossibleTypename	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_primary)
NodeNoParamPossibleTypename	ast_node_main_classes.hpp	/^class NodeNoParamPossibleTypename : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeNoParamPossibleTypename::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNoParamPossibleTypename);$/;"	kind:p	class:NodeNoParamPossibleTypename	access:public	signature:(NodeNoParamPossibleTypename)
NodeNoParamPossibleTypename::NodeNoParamPossibleTypename	ast_node_main_classes.hpp	/^	inline NodeNoParamPossibleTypename(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeNoParamPossibleTypename	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_primary)
NodeNoParamPossibleTypename::_primary	ast_node_main_classes.hpp	/^	Child _primary;$/;"	kind:m	class:NodeNoParamPossibleTypename	typeref:typename:Child	access:protected
NodeNoParamPossibleTypename::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNoParamPossibleTypename	typeref:typename:string	access:public	signature:() const
NodeNoParamPossibleTypename::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNoParamPossibleTypename	typeref:typename:string	access:public	signature:() const
NodeNoParamPossibleTypename::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNoParamPossibleTypename	typeref:typename:Type	access:public	signature:() const
NodeNumExpr	ast_node_main_classes.hpp	/^	inline NodeNumExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeNumExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const BigNum & s_n)
NodeNumExpr	ast_node_main_classes.hpp	/^class NodeNumExpr : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeNumExpr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeNumExpr);$/;"	kind:p	class:NodeNumExpr	access:public	signature:(NodeNumExpr)
NodeNumExpr::NodeNumExpr	ast_node_main_classes.hpp	/^	inline NodeNumExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeNumExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const BigNum & s_n)
NodeNumExpr::_n	ast_node_main_classes.hpp	/^	BigNum _n;$/;"	kind:m	class:NodeNumExpr	typeref:typename:BigNum	access:protected
NodeNumExpr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNumExpr	typeref:typename:string	access:public	signature:() const
NodeNumExpr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNumExpr	typeref:typename:string	access:public	signature:() const
NodeNumExpr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNumExpr	typeref:typename:Type	access:public	signature:() const
NodeOneParamArgInst	ast_node_main_classes.hpp	/^	inline NodeOneParamArgInst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeOneParamArgInst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeOneParamArgInst	ast_node_main_classes.hpp	/^class NodeOneParamArgInst : public NodeLeftRightBase$/;"	kind:c	inherits:NodeLeftRightBase
NodeOneParamArgInst::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeOneParamArgInst);$/;"	kind:p	class:NodeOneParamArgInst	access:public	signature:(NodeOneParamArgInst)
NodeOneParamArgInst::NodeOneParamArgInst	ast_node_main_classes.hpp	/^	inline NodeOneParamArgInst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeOneParamArgInst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeOneParamArgInst::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeOneParamArgInst	typeref:typename:string	access:public	signature:() const
NodeOneParamArgInst::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeOneParamArgInst	typeref:typename:string	access:public	signature:() const
NodeOneParamArgInst::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeOneParamArgInst	typeref:typename:Type	access:public	signature:() const
NodePackage	ast_node_main_classes.hpp	/^	inline NodePackage(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePackage	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident,Child && s_scope)
NodePackage	ast_node_main_classes.hpp	/^class NodePackage : public NodeBase$/;"	kind:c	inherits:NodeBase
NodePackage::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePackage);$/;"	kind:p	class:NodePackage	access:public	signature:(NodePackage)
NodePackage::NodePackage	ast_node_main_classes.hpp	/^	inline NodePackage(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePackage	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident,Child && s_scope)
NodePackage::_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodePackage	typeref:typename:Child	access:protected
NodePackage::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodePackage	typeref:typename:Child	access:protected
NodePackage::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePackage	typeref:typename:string	access:public	signature:() const
NodePackage::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePackage	typeref:typename:string	access:public	signature:() const
NodePackage::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePackage	typeref:typename:Type	access:public	signature:() const
NodeParamArgTypeSublist	ast_node_main_classes.hpp	/^	inline NodeParamArgTypeSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamArgTypeSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_param_pack,Child && s_ident_term_equals_extra_list)
NodeParamArgTypeSublist	ast_node_main_classes.hpp	/^class NodeParamArgTypeSublist : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeParamArgTypeSublist::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamArgTypeSublist);$/;"	kind:p	class:NodeParamArgTypeSublist	access:public	signature:(NodeParamArgTypeSublist)
NodeParamArgTypeSublist::NodeParamArgTypeSublist	ast_node_main_classes.hpp	/^	inline NodeParamArgTypeSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamArgTypeSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_param_pack,Child && s_ident_term_equals_extra_list)
NodeParamArgTypeSublist::_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^	Child _ident_term_equals_extra_list;$/;"	kind:m	class:NodeParamArgTypeSublist	typeref:typename:Child	access:protected
NodeParamArgTypeSublist::_param_pack	ast_node_main_classes.hpp	/^	bool _param_pack;$/;"	kind:m	class:NodeParamArgTypeSublist	typeref:typename:bool	access:protected
NodeParamArgTypeSublist::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamArgTypeSublist	typeref:typename:string	access:public	signature:() const
NodeParamArgTypeSublist::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamArgTypeSublist	typeref:typename:string	access:public	signature:() const
NodeParamArgTypeSublist::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamArgTypeSublist	typeref:typename:Type	access:public	signature:() const
NodeParamArgVarSublist	ast_node_main_classes.hpp	/^	inline NodeParamArgVarSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamArgVarSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_param_pack,Child && s_the_typename,Child && s_ident_term_equals_extra_list)
NodeParamArgVarSublist	ast_node_main_classes.hpp	/^class NodeParamArgVarSublist : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeParamArgVarSublist::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamArgVarSublist);$/;"	kind:p	class:NodeParamArgVarSublist	access:public	signature:(NodeParamArgVarSublist)
NodeParamArgVarSublist::NodeParamArgVarSublist	ast_node_main_classes.hpp	/^	inline NodeParamArgVarSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamArgVarSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const bool & s_param_pack,Child && s_the_typename,Child && s_ident_term_equals_extra_list)
NodeParamArgVarSublist::_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^		_ident_term_equals_extra_list;$/;"	kind:m	class:NodeParamArgVarSublist	typeref:typename:Child	access:protected
NodeParamArgVarSublist::_param_pack	ast_node_main_classes.hpp	/^	bool _param_pack;$/;"	kind:m	class:NodeParamArgVarSublist	typeref:typename:bool	access:protected
NodeParamArgVarSublist::_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename,$/;"	kind:m	class:NodeParamArgVarSublist	typeref:typename:Child	access:protected
NodeParamArgVarSublist::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamArgVarSublist	typeref:typename:string	access:public	signature:() const
NodeParamArgVarSublist::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamArgVarSublist	typeref:typename:string	access:public	signature:() const
NodeParamArgVarSublist::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamArgVarSublist	typeref:typename:Type	access:public	signature:() const
NodeParamList	ast_node_main_classes.hpp	/^	inline NodeParamList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeParamList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeParamList	ast_node_main_classes.hpp	/^class NodeParamList : public NodeList$/;"	kind:c	inherits:NodeList
NodeParamList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamList);$/;"	kind:p	class:NodeParamList	access:public	signature:(NodeParamList)
NodeParamList::NodeParamList	ast_node_main_classes.hpp	/^	inline NodeParamList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeParamList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeParamList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamList	typeref:typename:string	access:public	signature:() const
NodeParamList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamList	typeref:typename:string	access:public	signature:() const
NodeParamList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamList	typeref:typename:Type	access:public	signature:() const
NodeParamModuleSublist	ast_node_main_classes.hpp	/^	inline NodeParamModuleSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamModuleSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_term_equals_extra_list)
NodeParamModuleSublist	ast_node_main_classes.hpp	/^class NodeParamModuleSublist : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeParamModuleSublist::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamModuleSublist);$/;"	kind:p	class:NodeParamModuleSublist	access:public	signature:(NodeParamModuleSublist)
NodeParamModuleSublist::NodeParamModuleSublist	ast_node_main_classes.hpp	/^	inline NodeParamModuleSublist(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamModuleSublist	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident_term_equals_extra_list)
NodeParamModuleSublist::_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^	Child _ident_term_equals_extra_list;$/;"	kind:m	class:NodeParamModuleSublist	typeref:typename:Child	access:protected
NodeParamModuleSublist::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamModuleSublist	typeref:typename:string	access:public	signature:() const
NodeParamModuleSublist::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamModuleSublist	typeref:typename:string	access:public	signature:() const
NodeParamModuleSublist::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamModuleSublist	typeref:typename:Type	access:public	signature:() const
NodeParamPossibleTypename	ast_node_main_classes.hpp	/^	inline NodeParamPossibleTypename(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamPossibleTypename	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_primary,Child && s_param_inst_list)
NodeParamPossibleTypename	ast_node_main_classes.hpp	/^class NodeParamPossibleTypename : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeParamPossibleTypename::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParamPossibleTypename);$/;"	kind:p	class:NodeParamPossibleTypename	access:public	signature:(NodeParamPossibleTypename)
NodeParamPossibleTypename::NodeParamPossibleTypename	ast_node_main_classes.hpp	/^	inline NodeParamPossibleTypename(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeParamPossibleTypename	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_primary,Child && s_param_inst_list)
NodeParamPossibleTypename::_param_inst_list	ast_node_main_classes.hpp	/^		_param_inst_list;$/;"	kind:m	class:NodeParamPossibleTypename	typeref:typename:Child	access:protected
NodeParamPossibleTypename::_primary	ast_node_main_classes.hpp	/^	Child _primary,$/;"	kind:m	class:NodeParamPossibleTypename	typeref:typename:Child	access:protected
NodeParamPossibleTypename::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamPossibleTypename	typeref:typename:string	access:public	signature:() const
NodeParamPossibleTypename::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamPossibleTypename	typeref:typename:string	access:public	signature:() const
NodeParamPossibleTypename::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamPossibleTypename	typeref:typename:Type	access:public	signature:() const
NodeParenPair	ast_node_main_classes.hpp	/^	inline NodeParenPair(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeParenPair	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeParenPair	ast_node_main_classes.hpp	/^class NodeParenPair : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeParenPair::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeParenPair);$/;"	kind:p	class:NodeParenPair	access:public	signature:(NodeParenPair)
NodeParenPair::NodeParenPair	ast_node_main_classes.hpp	/^	inline NodeParenPair(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeParenPair	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeParenPair::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParenPair	typeref:typename:string	access:public	signature:() const
NodeParenPair::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParenPair	typeref:typename:string	access:public	signature:() const
NodeParenPair::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParenPair	typeref:typename:Type	access:public	signature:() const
NodePosParamArgInstList	ast_node_main_classes.hpp	/^	inline NodePosParamArgInstList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodePosParamArgInstList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodePosParamArgInstList	ast_node_main_classes.hpp	/^class NodePosParamArgInstList : public NodeList$/;"	kind:c	inherits:NodeList
NodePosParamArgInstList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePosParamArgInstList);$/;"	kind:p	class:NodePosParamArgInstList	access:public	signature:(NodePosParamArgInstList)
NodePosParamArgInstList::NodePosParamArgInstList	ast_node_main_classes.hpp	/^	inline NodePosParamArgInstList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodePosParamArgInstList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodePosParamArgInstList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePosParamArgInstList	typeref:typename:string	access:public	signature:() const
NodePosParamArgInstList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePosParamArgInstList	typeref:typename:string	access:public	signature:() const
NodePosParamArgInstList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePosParamArgInstList	typeref:typename:Type	access:public	signature:() const
NodePosedgeInst	ast_node_main_classes.hpp	/^	inline NodePosedgeInst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePosedgeInst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodePosedgeInst	ast_node_main_classes.hpp	/^class NodePosedgeInst : public NodeBase$/;"	kind:c	inherits:NodeBase
NodePosedgeInst::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePosedgeInst);$/;"	kind:p	class:NodePosedgeInst	access:public	signature:(NodePosedgeInst)
NodePosedgeInst::NodePosedgeInst	ast_node_main_classes.hpp	/^	inline NodePosedgeInst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePosedgeInst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodePosedgeInst::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodePosedgeInst	typeref:typename:Child	access:protected
NodePosedgeInst::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePosedgeInst	typeref:typename:string	access:public	signature:() const
NodePosedgeInst::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePosedgeInst	typeref:typename:string	access:public	signature:() const
NodePosedgeInst::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePosedgeInst	typeref:typename:Type	access:public	signature:() const
NodeProgram	ast_node_main_classes.hpp	/^	inline NodeProgram(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeProgram	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeProgram	ast_node_main_classes.hpp	/^class NodeProgram : public NodeList$/;"	kind:c	inherits:NodeList
NodeProgram::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeProgram);$/;"	kind:p	class:NodeProgram	access:public	signature:(NodeProgram)
NodeProgram::NodeProgram	ast_node_main_classes.hpp	/^	inline NodeProgram(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeProgram	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeProgram::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeProgram	typeref:typename:string	access:public	signature:() const
NodeProgram::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeProgram	typeref:typename:string	access:public	signature:() const
NodeProgram::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeProgram	typeref:typename:Type	access:public	signature:() const
NodePseudoExprDollarBase	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarBase	ast_node_main_classes.hpp	/^class NodePseudoExprDollarBase : public NodeBase$/;"	kind:c	inherits:NodeBase
NodePseudoExprDollarBase::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarBase);$/;"	kind:p	class:NodePseudoExprDollarBase	access:public	signature:(NodePseudoExprDollarBase)
NodePseudoExprDollarBase::NodePseudoExprDollarBase	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarBase::_child	ast_node_main_classes.hpp	/^	Child _child;$/;"	kind:m	class:NodePseudoExprDollarBase	typeref:typename:Child	access:protected
NodePseudoExprDollarBase::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarBase	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarBase::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarBase	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarBase::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarBase	typeref:typename:Type	access:public	signature:() const
NodePseudoExprDollarFell	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarFell(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarFell	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarFell	ast_node_main_classes.hpp	/^class NodePseudoExprDollarFell : public NodePseudoExprDollarBase$/;"	kind:c	inherits:NodePseudoExprDollarBase
NodePseudoExprDollarFell::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarFell);$/;"	kind:p	class:NodePseudoExprDollarFell	access:public	signature:(NodePseudoExprDollarFell)
NodePseudoExprDollarFell::NodePseudoExprDollarFell	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarFell(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarFell	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarFell::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarFell	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarFell::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarFell	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarFell::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarFell	typeref:typename:Type	access:public	signature:() const
NodePseudoExprDollarGlobalClock	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarGlobalClock(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodePseudoExprDollarGlobalClock	ast_node_main_classes.hpp	/^class NodePseudoExprDollarGlobalClock : public NodeBase$/;"	kind:c	inherits:NodeBase
NodePseudoExprDollarGlobalClock::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarGlobalClock);$/;"	kind:p	class:NodePseudoExprDollarGlobalClock	access:public	signature:(NodePseudoExprDollarGlobalClock)
NodePseudoExprDollarGlobalClock::NodePseudoExprDollarGlobalClock	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarGlobalClock(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodePseudoExprDollarGlobalClock::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarGlobalClock::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarGlobalClock::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	typeref:typename:Type	access:public	signature:() const
NodePseudoExprDollarPast	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarPast(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarPast	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarPast	ast_node_main_classes.hpp	/^class NodePseudoExprDollarPast : public NodePseudoExprDollarBase$/;"	kind:c	inherits:NodePseudoExprDollarBase
NodePseudoExprDollarPast::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarPast);$/;"	kind:p	class:NodePseudoExprDollarPast	access:public	signature:(NodePseudoExprDollarPast)
NodePseudoExprDollarPast::NodePseudoExprDollarPast	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarPast(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarPast	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarPast::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarPast	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarPast::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarPast	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarPast::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarPast	typeref:typename:Type	access:public	signature:() const
NodePseudoExprDollarRose	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarRose(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarRose	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarRose	ast_node_main_classes.hpp	/^class NodePseudoExprDollarRose : public NodePseudoExprDollarBase$/;"	kind:c	inherits:NodePseudoExprDollarBase
NodePseudoExprDollarRose::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarRose);$/;"	kind:p	class:NodePseudoExprDollarRose	access:public	signature:(NodePseudoExprDollarRose)
NodePseudoExprDollarRose::NodePseudoExprDollarRose	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarRose(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarRose	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarRose::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarRose	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarRose::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarRose	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarRose::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarRose	typeref:typename:Type	access:public	signature:() const
NodePseudoExprDollarStable	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarStable(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarStable	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarStable	ast_node_main_classes.hpp	/^class NodePseudoExprDollarStable : public NodePseudoExprDollarBase$/;"	kind:c	inherits:NodePseudoExprDollarBase
NodePseudoExprDollarStable::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodePseudoExprDollarStable);$/;"	kind:p	class:NodePseudoExprDollarStable	access:public	signature:(NodePseudoExprDollarStable)
NodePseudoExprDollarStable::NodePseudoExprDollarStable	ast_node_main_classes.hpp	/^	inline NodePseudoExprDollarStable(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodePseudoExprDollarStable	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodePseudoExprDollarStable::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarStable	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarStable::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarStable	typeref:typename:string	access:public	signature:() const
NodePseudoExprDollarStable::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarStable	typeref:typename:Type	access:public	signature:() const
NodeRangeExprAny	ast_node_main_classes.hpp	/^	inline NodeRangeExprAny(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRangeExprAny	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_which_range)
NodeRangeExprAny	ast_node_main_classes.hpp	/^class NodeRangeExprAny : public NodeExprBase$/;"	kind:c	inherits:NodeExprBase
NodeRangeExprAny::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeExprAny);$/;"	kind:p	class:NodeRangeExprAny	access:public	signature:(NodeRangeExprAny)
NodeRangeExprAny::NodeRangeExprAny	ast_node_main_classes.hpp	/^	inline NodeRangeExprAny(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRangeExprAny	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_which_range)
NodeRangeExprAny::_which_range	ast_node_main_classes.hpp	/^	Child _which_range;$/;"	kind:m	class:NodeRangeExprAny	typeref:typename:Child	access:protected
NodeRangeExprAny::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeExprAny	typeref:typename:string	access:public	signature:() const
NodeRangeExprAny::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeExprAny	typeref:typename:string	access:public	signature:() const
NodeRangeExprAny::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeExprAny	typeref:typename:Type	access:public	signature:() const
NodeRangeOne	ast_node_main_classes.hpp	/^	inline NodeRangeOne(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRangeOne	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeRangeOne	ast_node_main_classes.hpp	/^class NodeRangeOne : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeRangeOne::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeOne);$/;"	kind:p	class:NodeRangeOne	access:public	signature:(NodeRangeOne)
NodeRangeOne::NodeRangeOne	ast_node_main_classes.hpp	/^	inline NodeRangeOne(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRangeOne	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeRangeOne::_child	ast_node_main_classes.hpp	/^	Child _child;$/;"	kind:m	class:NodeRangeOne	typeref:typename:Child	access:protected
NodeRangeOne::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeOne	typeref:typename:string	access:public	signature:() const
NodeRangeOne::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeOne	typeref:typename:string	access:public	signature:() const
NodeRangeOne::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeOne	typeref:typename:Type	access:public	signature:() const
NodeRangeSuffix	ast_node_main_classes.hpp	/^	inline NodeRangeSuffix(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeRangeSuffix	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeRangeSuffix	ast_node_main_classes.hpp	/^class NodeRangeSuffix : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeRangeSuffix::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeSuffix);$/;"	kind:p	class:NodeRangeSuffix	access:public	signature:(NodeRangeSuffix)
NodeRangeSuffix::NodeRangeSuffix	ast_node_main_classes.hpp	/^	inline NodeRangeSuffix(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeRangeSuffix	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeRangeSuffix::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeSuffix	typeref:typename:string	access:public	signature:() const
NodeRangeSuffix::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeSuffix	typeref:typename:string	access:public	signature:() const
NodeRangeSuffix::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeSuffix	typeref:typename:Type	access:public	signature:() const
NodeRangeTwo	ast_node_main_classes.hpp	/^	inline NodeRangeTwo(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRangeTwo	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeRangeTwo	ast_node_main_classes.hpp	/^class NodeRangeTwo : public NodeLeftRightBase$/;"	kind:c	inherits:NodeLeftRightBase
NodeRangeTwo::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRangeTwo);$/;"	kind:p	class:NodeRangeTwo	access:public	signature:(NodeRangeTwo)
NodeRangeTwo::NodeRangeTwo	ast_node_main_classes.hpp	/^	inline NodeRangeTwo(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRangeTwo	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeRangeTwo::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeTwo	typeref:typename:string	access:public	signature:() const
NodeRangeTwo::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeTwo	typeref:typename:string	access:public	signature:() const
NodeRangeTwo::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeTwo	typeref:typename:Type	access:public	signature:() const
NodeReplExpr	ast_node_main_classes.hpp	/^	inline NodeReplExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeReplExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_how_much_expr,Child && s_to_repl_expr)
NodeReplExpr	ast_node_main_classes.hpp	/^class NodeReplExpr : public NodeExprBase$/;"	kind:c	inherits:NodeExprBase
NodeReplExpr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeReplExpr);$/;"	kind:p	class:NodeReplExpr	access:public	signature:(NodeReplExpr)
NodeReplExpr::NodeReplExpr	ast_node_main_classes.hpp	/^	inline NodeReplExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeReplExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_how_much_expr,Child && s_to_repl_expr)
NodeReplExpr::_how_much_expr	ast_node_main_classes.hpp	/^	Child _how_much_expr,$/;"	kind:m	class:NodeReplExpr	typeref:typename:Child	access:protected
NodeReplExpr::_to_repl_expr	ast_node_main_classes.hpp	/^		_to_repl_expr;$/;"	kind:m	class:NodeReplExpr	typeref:typename:Child	access:protected
NodeReplExpr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeReplExpr	typeref:typename:string	access:public	signature:() const
NodeReplExpr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeReplExpr	typeref:typename:string	access:public	signature:() const
NodeReplExpr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeReplExpr	typeref:typename:Type	access:public	signature:() const
NodeRestrictStmt	ast_node_main_classes.hpp	/^	inline NodeRestrictStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRestrictStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeRestrictStmt	ast_node_main_classes.hpp	/^class NodeRestrictStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeRestrictStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeRestrictStmt);$/;"	kind:p	class:NodeRestrictStmt	access:public	signature:(NodeRestrictStmt)
NodeRestrictStmt::NodeRestrictStmt	ast_node_main_classes.hpp	/^	inline NodeRestrictStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeRestrictStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeRestrictStmt::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeRestrictStmt	typeref:typename:Child	access:protected
NodeRestrictStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRestrictStmt	typeref:typename:string	access:public	signature:() const
NodeRestrictStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRestrictStmt	typeref:typename:string	access:public	signature:() const
NodeRestrictStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRestrictStmt	typeref:typename:Type	access:public	signature:() const
NodeReturnStmt	ast_node_main_classes.hpp	/^	inline NodeReturnStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeReturnStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeReturnStmt	ast_node_main_classes.hpp	/^class NodeReturnStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeReturnStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeReturnStmt);$/;"	kind:p	class:NodeReturnStmt	access:public	signature:(NodeReturnStmt)
NodeReturnStmt::NodeReturnStmt	ast_node_main_classes.hpp	/^	inline NodeReturnStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeReturnStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeReturnStmt::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeReturnStmt	typeref:typename:Child	access:protected
NodeReturnStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeReturnStmt	typeref:typename:string	access:public	signature:() const
NodeReturnStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeReturnStmt	typeref:typename:string	access:public	signature:() const
NodeReturnStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeReturnStmt	typeref:typename:Type	access:public	signature:() const
NodeSbit	ast_node_main_classes.hpp	/^	inline NodeSbit(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSbit	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSbit	ast_node_main_classes.hpp	/^class NodeSbit : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSbit::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSbit);$/;"	kind:p	class:NodeSbit	access:public	signature:(NodeSbit)
NodeSbit::NodeSbit	ast_node_main_classes.hpp	/^	inline NodeSbit(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSbit	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSbit::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSbit	typeref:typename:string	access:public	signature:() const
NodeSbit::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSbit	typeref:typename:string	access:public	signature:() const
NodeSbit::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSbit	typeref:typename:Type	access:public	signature:() const
NodeSbyte	ast_node_main_classes.hpp	/^	inline NodeSbyte(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSbyte	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSbyte	ast_node_main_classes.hpp	/^class NodeSbyte : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSbyte::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSbyte);$/;"	kind:p	class:NodeSbyte	access:public	signature:(NodeSbyte)
NodeSbyte::NodeSbyte	ast_node_main_classes.hpp	/^	inline NodeSbyte(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSbyte	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSbyte::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSbyte	typeref:typename:string	access:public	signature:() const
NodeSbyte::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSbyte	typeref:typename:string	access:public	signature:() const
NodeSbyte::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSbyte	typeref:typename:Type	access:public	signature:() const
NodeScopeBehav	ast_node_main_classes.hpp	/^	inline NodeScopeBehav(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeBehav	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeBehav	ast_node_main_classes.hpp	/^class NodeScopeBehav : public NodeList$/;"	kind:c	inherits:NodeList
NodeScopeBehav::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeBehav);$/;"	kind:p	class:NodeScopeBehav	access:public	signature:(NodeScopeBehav)
NodeScopeBehav::NodeScopeBehav	ast_node_main_classes.hpp	/^	inline NodeScopeBehav(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeBehav	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeBehav::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeBehav	typeref:typename:string	access:public	signature:() const
NodeScopeBehav::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeBehav	typeref:typename:string	access:public	signature:() const
NodeScopeBehav::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeBehav	typeref:typename:Type	access:public	signature:() const
NodeScopeClass	ast_node_main_classes.hpp	/^	inline NodeScopeClass(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeClass	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeClass	ast_node_main_classes.hpp	/^class NodeScopeClass : public NodeList$/;"	kind:c	inherits:NodeList
NodeScopeClass::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeClass);$/;"	kind:p	class:NodeScopeClass	access:public	signature:(NodeScopeClass)
NodeScopeClass::NodeScopeClass	ast_node_main_classes.hpp	/^	inline NodeScopeClass(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeClass	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeClass::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeClass	typeref:typename:string	access:public	signature:() const
NodeScopeClass::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeClass	typeref:typename:string	access:public	signature:() const
NodeScopeClass::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeClass	typeref:typename:Type	access:public	signature:() const
NodeScopeEnum	ast_node_main_classes.hpp	/^	inline NodeScopeEnum(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeEnum	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeEnum	ast_node_main_classes.hpp	/^class NodeScopeEnum : public NodeList$/;"	kind:c	inherits:NodeList
NodeScopeEnum::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeEnum);$/;"	kind:p	class:NodeScopeEnum	access:public	signature:(NodeScopeEnum)
NodeScopeEnum::NodeScopeEnum	ast_node_main_classes.hpp	/^	inline NodeScopeEnum(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeEnum	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeEnum::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeEnum	typeref:typename:string	access:public	signature:() const
NodeScopeEnum::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeEnum	typeref:typename:string	access:public	signature:() const
NodeScopeEnum::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeEnum	typeref:typename:Type	access:public	signature:() const
NodeScopeModproc	ast_node_main_classes.hpp	/^	inline NodeScopeModproc(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeModproc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeModproc	ast_node_main_classes.hpp	/^class NodeScopeModproc : public NodeList$/;"	kind:c	inherits:NodeList
NodeScopeModproc::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeModproc);$/;"	kind:p	class:NodeScopeModproc	access:public	signature:(NodeScopeModproc)
NodeScopeModproc::NodeScopeModproc	ast_node_main_classes.hpp	/^	inline NodeScopeModproc(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeModproc	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeModproc::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeModproc	typeref:typename:string	access:public	signature:() const
NodeScopeModproc::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeModproc	typeref:typename:string	access:public	signature:() const
NodeScopeModproc::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeModproc	typeref:typename:Type	access:public	signature:() const
NodeScopePackage	ast_node_main_classes.hpp	/^	inline NodeScopePackage(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopePackage	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopePackage	ast_node_main_classes.hpp	/^class NodeScopePackage : public NodeList$/;"	kind:c	inherits:NodeList
NodeScopePackage::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopePackage);$/;"	kind:p	class:NodeScopePackage	access:public	signature:(NodeScopePackage)
NodeScopePackage::NodeScopePackage	ast_node_main_classes.hpp	/^	inline NodeScopePackage(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopePackage	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopePackage::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopePackage	typeref:typename:string	access:public	signature:() const
NodeScopePackage::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopePackage	typeref:typename:string	access:public	signature:() const
NodeScopePackage::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopePackage	typeref:typename:Type	access:public	signature:() const
NodeScopeSwitch	ast_node_main_classes.hpp	/^	inline NodeScopeSwitch(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeSwitch	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeSwitch	ast_node_main_classes.hpp	/^class NodeScopeSwitch : public NodeList$/;"	kind:c	inherits:NodeList
NodeScopeSwitch::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeSwitch);$/;"	kind:p	class:NodeScopeSwitch	access:public	signature:(NodeScopeSwitch)
NodeScopeSwitch::NodeScopeSwitch	ast_node_main_classes.hpp	/^	inline NodeScopeSwitch(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeSwitch	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeSwitch::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeSwitch	typeref:typename:string	access:public	signature:() const
NodeScopeSwitch::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeSwitch	typeref:typename:string	access:public	signature:() const
NodeScopeSwitch::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeSwitch	typeref:typename:Type	access:public	signature:() const
NodeScopeUnion	ast_node_main_classes.hpp	/^	inline NodeScopeUnion(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeUnion	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeUnion	ast_node_main_classes.hpp	/^class NodeScopeUnion : public NodeList$/;"	kind:c	inherits:NodeList
NodeScopeUnion::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeScopeUnion);$/;"	kind:p	class:NodeScopeUnion	access:public	signature:(NodeScopeUnion)
NodeScopeUnion::NodeScopeUnion	ast_node_main_classes.hpp	/^	inline NodeScopeUnion(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeScopeUnion	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeScopeUnion::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeUnion	typeref:typename:string	access:public	signature:() const
NodeScopeUnion::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeUnion	typeref:typename:string	access:public	signature:() const
NodeScopeUnion::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeUnion	typeref:typename:Type	access:public	signature:() const
NodeSelf	ast_node_main_classes.hpp	/^	inline NodeSelf(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSelf	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSelf	ast_node_main_classes.hpp	/^class NodeSelf : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSelf::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSelf);$/;"	kind:p	class:NodeSelf	access:public	signature:(NodeSelf)
NodeSelf::NodeSelf	ast_node_main_classes.hpp	/^	inline NodeSelf(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSelf	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSelf::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSelf	typeref:typename:string	access:public	signature:() const
NodeSelf::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSelf	typeref:typename:string	access:public	signature:() const
NodeSelf::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSelf	typeref:typename:Type	access:public	signature:() const
NodeSint	ast_node_main_classes.hpp	/^	inline NodeSint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSint	ast_node_main_classes.hpp	/^class NodeSint : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSint::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSint);$/;"	kind:p	class:NodeSint	access:public	signature:(NodeSint)
NodeSint::NodeSint	ast_node_main_classes.hpp	/^	inline NodeSint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSint::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSint	typeref:typename:string	access:public	signature:() const
NodeSint::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSint	typeref:typename:string	access:public	signature:() const
NodeSint::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSint	typeref:typename:Type	access:public	signature:() const
NodeSizedNumExpr	ast_node_main_classes.hpp	/^	inline NodeSizedNumExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeSizedNumExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const BigNum & s_n,Child && s_size)
NodeSizedNumExpr	ast_node_main_classes.hpp	/^class NodeSizedNumExpr : public NodeNumExpr$/;"	kind:c	inherits:NodeNumExpr
NodeSizedNumExpr::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSizedNumExpr);$/;"	kind:p	class:NodeSizedNumExpr	access:public	signature:(NodeSizedNumExpr)
NodeSizedNumExpr::NodeSizedNumExpr	ast_node_main_classes.hpp	/^	inline NodeSizedNumExpr(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeSizedNumExpr	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,const BigNum & s_n,Child && s_size)
NodeSizedNumExpr::_size	ast_node_main_classes.hpp	/^	Child _size;$/;"	kind:m	class:NodeSizedNumExpr	typeref:typename:Child	access:protected
NodeSizedNumExpr::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSizedNumExpr	typeref:typename:string	access:public	signature:() const
NodeSizedNumExpr::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSizedNumExpr	typeref:typename:string	access:public	signature:() const
NodeSizedNumExpr::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSizedNumExpr	typeref:typename:Type	access:public	signature:() const
NodeSlongint	ast_node_main_classes.hpp	/^	inline NodeSlongint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSlongint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSlongint	ast_node_main_classes.hpp	/^class NodeSlongint : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSlongint::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSlongint);$/;"	kind:p	class:NodeSlongint	access:public	signature:(NodeSlongint)
NodeSlongint::NodeSlongint	ast_node_main_classes.hpp	/^	inline NodeSlongint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSlongint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSlongint::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSlongint	typeref:typename:string	access:public	signature:() const
NodeSlongint::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSlongint	typeref:typename:string	access:public	signature:() const
NodeSlongint::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSlongint	typeref:typename:Type	access:public	signature:() const
NodeSshortint	ast_node_main_classes.hpp	/^	inline NodeSshortint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSshortint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSshortint	ast_node_main_classes.hpp	/^class NodeSshortint : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSshortint::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSshortint);$/;"	kind:p	class:NodeSshortint	access:public	signature:(NodeSshortint)
NodeSshortint::NodeSshortint	ast_node_main_classes.hpp	/^	inline NodeSshortint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSshortint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSshortint::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSshortint	typeref:typename:string	access:public	signature:() const
NodeSshortint::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSshortint	typeref:typename:string	access:public	signature:() const
NodeSshortint::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSshortint	typeref:typename:Type	access:public	signature:() const
NodeStaticAssertStmt	ast_node_main_classes.hpp	/^	inline NodeStaticAssertStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeStaticAssertStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeStaticAssertStmt	ast_node_main_classes.hpp	/^class NodeStaticAssertStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeStaticAssertStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeStaticAssertStmt);$/;"	kind:p	class:NodeStaticAssertStmt	access:public	signature:(NodeStaticAssertStmt)
NodeStaticAssertStmt::NodeStaticAssertStmt	ast_node_main_classes.hpp	/^	inline NodeStaticAssertStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeStaticAssertStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr)
NodeStaticAssertStmt::_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeStaticAssertStmt	typeref:typename:Child	access:protected
NodeStaticAssertStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeStaticAssertStmt	typeref:typename:string	access:public	signature:() const
NodeStaticAssertStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeStaticAssertStmt	typeref:typename:string	access:public	signature:() const
NodeStaticAssertStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeStaticAssertStmt	typeref:typename:Type	access:public	signature:() const
NodeStmtList	ast_node_main_classes.hpp	/^	inline NodeStmtList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeStmtList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeStmtList	ast_node_main_classes.hpp	/^class NodeStmtList : public NodeList$/;"	kind:c	inherits:NodeList
NodeStmtList::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeStmtList);$/;"	kind:p	class:NodeStmtList	access:public	signature:(NodeStmtList)
NodeStmtList::NodeStmtList	ast_node_main_classes.hpp	/^	inline NodeStmtList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeStmtList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeStmtList::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeStmtList	typeref:typename:string	access:public	signature:() const
NodeStmtList::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeStmtList	typeref:typename:string	access:public	signature:() const
NodeStmtList::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeStmtList	typeref:typename:Type	access:public	signature:() const
NodeSwire	ast_node_main_classes.hpp	/^	inline NodeSwire(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSwire	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSwire	ast_node_main_classes.hpp	/^class NodeSwire : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSwire::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSwire);$/;"	kind:p	class:NodeSwire	access:public	signature:(NodeSwire)
NodeSwire::NodeSwire	ast_node_main_classes.hpp	/^	inline NodeSwire(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeSwire	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeSwire::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSwire	typeref:typename:string	access:public	signature:() const
NodeSwire::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSwire	typeref:typename:string	access:public	signature:() const
NodeSwire::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSwire	typeref:typename:Type	access:public	signature:() const
NodeSwitchStmt	ast_node_main_classes.hpp	/^	inline NodeSwitchStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeSwitchStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr,Child && s_scope)
NodeSwitchStmt	ast_node_main_classes.hpp	/^class NodeSwitchStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeSwitchStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSwitchStmt);$/;"	kind:p	class:NodeSwitchStmt	access:public	signature:(NodeSwitchStmt)
NodeSwitchStmt::NodeSwitchStmt	ast_node_main_classes.hpp	/^	inline NodeSwitchStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeSwitchStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr,Child && s_scope)
NodeSwitchStmt::_expr	ast_node_main_classes.hpp	/^	Child _expr,$/;"	kind:m	class:NodeSwitchStmt	typeref:typename:Child	access:protected
NodeSwitchStmt::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeSwitchStmt	typeref:typename:Child	access:protected
NodeSwitchStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSwitchStmt	typeref:typename:string	access:public	signature:() const
NodeSwitchStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSwitchStmt	typeref:typename:string	access:public	signature:() const
NodeSwitchStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSwitchStmt	typeref:typename:Type	access:public	signature:() const
NodeSwitchzStmt	ast_node_main_classes.hpp	/^	inline NodeSwitchzStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeSwitchzStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr,Child && s_scope)
NodeSwitchzStmt	ast_node_main_classes.hpp	/^class NodeSwitchzStmt : public NodeSwitchStmt$/;"	kind:c	inherits:NodeSwitchStmt
NodeSwitchzStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeSwitchzStmt);$/;"	kind:p	class:NodeSwitchzStmt	access:public	signature:(NodeSwitchzStmt)
NodeSwitchzStmt::NodeSwitchzStmt	ast_node_main_classes.hpp	/^	inline NodeSwitchzStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeSwitchzStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr,Child && s_scope)
NodeSwitchzStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSwitchzStmt	typeref:typename:string	access:public	signature:() const
NodeSwitchzStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSwitchzStmt	typeref:typename:string	access:public	signature:() const
NodeSwitchzStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSwitchzStmt	typeref:typename:Type	access:public	signature:() const
NodeTypeRange	ast_node_main_classes.hpp	/^	inline NodeTypeRange(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeTypeRange	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_range_suffix)
NodeTypeRange	ast_node_main_classes.hpp	/^class NodeTypeRange : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeTypeRange::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeTypeRange);$/;"	kind:p	class:NodeTypeRange	access:public	signature:(NodeTypeRange)
NodeTypeRange::NodeTypeRange	ast_node_main_classes.hpp	/^	inline NodeTypeRange(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeTypeRange	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_range_suffix)
NodeTypeRange::_range_suffix	ast_node_main_classes.hpp	/^	Child _range_suffix;$/;"	kind:m	class:NodeTypeRange	typeref:typename:Child	access:protected
NodeTypeRange::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeTypeRange	typeref:typename:string	access:public	signature:() const
NodeTypeRange::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeTypeRange	typeref:typename:string	access:public	signature:() const
NodeTypeRange::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeTypeRange	typeref:typename:Type	access:public	signature:() const
NodeTypeof	ast_node_main_classes.hpp	/^	inline NodeTypeof(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeTypeof	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr_or_typename)
NodeTypeof	ast_node_main_classes.hpp	/^class NodeTypeof : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeTypeof::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeTypeof);$/;"	kind:p	class:NodeTypeof	access:public	signature:(NodeTypeof)
NodeTypeof::NodeTypeof	ast_node_main_classes.hpp	/^	inline NodeTypeof(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeTypeof	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_expr_or_typename)
NodeTypeof::_expr_or_typename	ast_node_main_classes.hpp	/^	Child _expr_or_typename;$/;"	kind:m	class:NodeTypeof	typeref:typename:Child	access:protected
NodeTypeof::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeTypeof	typeref:typename:string	access:public	signature:() const
NodeTypeof::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeTypeof	typeref:typename:string	access:public	signature:() const
NodeTypeof::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeTypeof	typeref:typename:Type	access:public	signature:() const
NodeUbit	ast_node_main_classes.hpp	/^	inline NodeUbit(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUbit	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUbit	ast_node_main_classes.hpp	/^class NodeUbit : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeUbit::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUbit);$/;"	kind:p	class:NodeUbit	access:public	signature:(NodeUbit)
NodeUbit::NodeUbit	ast_node_main_classes.hpp	/^	inline NodeUbit(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUbit	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUbit::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUbit	typeref:typename:string	access:public	signature:() const
NodeUbit::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUbit	typeref:typename:string	access:public	signature:() const
NodeUbit::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUbit	typeref:typename:Type	access:public	signature:() const
NodeUbyte	ast_node_main_classes.hpp	/^	inline NodeUbyte(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUbyte	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUbyte	ast_node_main_classes.hpp	/^class NodeUbyte : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeUbyte::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUbyte);$/;"	kind:p	class:NodeUbyte	access:public	signature:(NodeUbyte)
NodeUbyte::NodeUbyte	ast_node_main_classes.hpp	/^	inline NodeUbyte(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUbyte	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUbyte::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUbyte	typeref:typename:string	access:public	signature:() const
NodeUbyte::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUbyte	typeref:typename:string	access:public	signature:() const
NodeUbyte::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUbyte	typeref:typename:Type	access:public	signature:() const
NodeUint	ast_node_main_classes.hpp	/^	inline NodeUint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUint	ast_node_main_classes.hpp	/^class NodeUint : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeUint::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUint);$/;"	kind:p	class:NodeUint	access:public	signature:(NodeUint)
NodeUint::NodeUint	ast_node_main_classes.hpp	/^	inline NodeUint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUint::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUint	typeref:typename:string	access:public	signature:() const
NodeUint::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUint	typeref:typename:string	access:public	signature:() const
NodeUint::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUint	typeref:typename:Type	access:public	signature:() const
NodeUlongint	ast_node_main_classes.hpp	/^	inline NodeUlongint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUlongint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUlongint	ast_node_main_classes.hpp	/^class NodeUlongint : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeUlongint::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUlongint);$/;"	kind:p	class:NodeUlongint	access:public	signature:(NodeUlongint)
NodeUlongint::NodeUlongint	ast_node_main_classes.hpp	/^	inline NodeUlongint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUlongint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUlongint::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUlongint	typeref:typename:string	access:public	signature:() const
NodeUlongint::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUlongint	typeref:typename:string	access:public	signature:() const
NodeUlongint::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUlongint	typeref:typename:Type	access:public	signature:() const
NodeUnion	ast_node_main_classes.hpp	/^	inline NodeUnion(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnion	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident,Child && s_scope,Child && s_var_list)
NodeUnion	ast_node_main_classes.hpp	/^class NodeUnion : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeUnion::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnion);$/;"	kind:p	class:NodeUnion	access:public	signature:(NodeUnion)
NodeUnion::NodeUnion	ast_node_main_classes.hpp	/^	inline NodeUnion(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnion	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_ident,Child && s_scope,Child && s_var_list)
NodeUnion::_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodeUnion	typeref:typename:Child	access:protected
NodeUnion::_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeUnion	typeref:typename:Child	access:protected
NodeUnion::_var_list	ast_node_main_classes.hpp	/^		_var_list;$/;"	kind:m	class:NodeUnion	typeref:typename:Child	access:protected
NodeUnion::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnion	typeref:typename:string	access:public	signature:() const
NodeUnion::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnion	typeref:typename:string	access:public	signature:() const
NodeUnion::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnion	typeref:typename:Type	access:public	signature:() const
NodeUnopExprBase	ast_node_main_classes.hpp	/^	inline NodeUnopExprBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprBase	ast_node_main_classes.hpp	/^class NodeUnopExprBase : public NodeExprBase$/;"	kind:c	inherits:NodeExprBase
NodeUnopExprBase::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprBase);$/;"	kind:p	class:NodeUnopExprBase	access:public	signature:(NodeUnopExprBase)
NodeUnopExprBase::NodeUnopExprBase	ast_node_main_classes.hpp	/^	inline NodeUnopExprBase(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprBase::_child	ast_node_main_classes.hpp	/^	Child _child;$/;"	kind:m	class:NodeUnopExprBase	typeref:typename:Child	access:protected
NodeUnopExprBase::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprBase	typeref:typename:string	access:public	signature:() const
NodeUnopExprBase::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprBase	typeref:typename:string	access:public	signature:() const
NodeUnopExprBase::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprBase	typeref:typename:Type	access:public	signature:() const
NodeUnopExprBitNot	ast_node_main_classes.hpp	/^	inline NodeUnopExprBitNot(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprBitNot	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprBitNot	ast_node_main_classes.hpp	/^class NodeUnopExprBitNot : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprBitNot::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprBitNot);$/;"	kind:p	class:NodeUnopExprBitNot	access:public	signature:(NodeUnopExprBitNot)
NodeUnopExprBitNot::NodeUnopExprBitNot	ast_node_main_classes.hpp	/^	inline NodeUnopExprBitNot(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprBitNot	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprBitNot::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprBitNot	typeref:typename:string	access:public	signature:() const
NodeUnopExprBitNot::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprBitNot	typeref:typename:string	access:public	signature:() const
NodeUnopExprBitNot::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprBitNot	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarClog2	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarClog2(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarClog2	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarClog2	ast_node_main_classes.hpp	/^class NodeUnopExprDollarClog2 : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarClog2::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarClog2);$/;"	kind:p	class:NodeUnopExprDollarClog2	access:public	signature:(NodeUnopExprDollarClog2)
NodeUnopExprDollarClog2::NodeUnopExprDollarClog2	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarClog2(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarClog2	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarClog2::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarClog2	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarClog2::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarClog2	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarClog2::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarClog2	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarFirst	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarFirst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarFirst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarFirst	ast_node_main_classes.hpp	/^class NodeUnopExprDollarFirst : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarFirst::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarFirst);$/;"	kind:p	class:NodeUnopExprDollarFirst	access:public	signature:(NodeUnopExprDollarFirst)
NodeUnopExprDollarFirst::NodeUnopExprDollarFirst	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarFirst(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarFirst	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarFirst::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarFirst	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarFirst::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarFirst	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarFirst::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarFirst	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarHigh	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarHigh(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarHigh	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarHigh	ast_node_main_classes.hpp	/^class NodeUnopExprDollarHigh : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarHigh::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarHigh);$/;"	kind:p	class:NodeUnopExprDollarHigh	access:public	signature:(NodeUnopExprDollarHigh)
NodeUnopExprDollarHigh::NodeUnopExprDollarHigh	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarHigh(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarHigh	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarHigh::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarHigh	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarHigh::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarHigh	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarHigh::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarHigh	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarIsSigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarIsSigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarIsSigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarIsSigned	ast_node_main_classes.hpp	/^class NodeUnopExprDollarIsSigned : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarIsSigned::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarIsSigned);$/;"	kind:p	class:NodeUnopExprDollarIsSigned	access:public	signature:(NodeUnopExprDollarIsSigned)
NodeUnopExprDollarIsSigned::NodeUnopExprDollarIsSigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarIsSigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarIsSigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarIsSigned::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarIsSigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarIsSigned::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarIsSigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarIsSigned::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarIsSigned	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarIsUnsigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarIsUnsigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarIsUnsigned	ast_node_main_classes.hpp	/^class NodeUnopExprDollarIsUnsigned : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarIsUnsigned::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarIsUnsigned);$/;"	kind:p	class:NodeUnopExprDollarIsUnsigned	access:public	signature:(NodeUnopExprDollarIsUnsigned)
NodeUnopExprDollarIsUnsigned::NodeUnopExprDollarIsUnsigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarIsUnsigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarIsUnsigned::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarIsUnsigned::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarIsUnsigned::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarLast	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarLast(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarLast	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarLast	ast_node_main_classes.hpp	/^class NodeUnopExprDollarLast : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarLast::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarLast);$/;"	kind:p	class:NodeUnopExprDollarLast	access:public	signature:(NodeUnopExprDollarLast)
NodeUnopExprDollarLast::NodeUnopExprDollarLast	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarLast(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarLast	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarLast::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarLast	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarLast::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarLast	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarLast::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarLast	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarLow	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarLow(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarLow	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarLow	ast_node_main_classes.hpp	/^class NodeUnopExprDollarLow : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarLow::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarLow);$/;"	kind:p	class:NodeUnopExprDollarLow	access:public	signature:(NodeUnopExprDollarLow)
NodeUnopExprDollarLow::NodeUnopExprDollarLow	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarLow(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarLow	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarLow::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarLow	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarLow::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarLow	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarLow::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarLow	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarRange	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarRange(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarRange	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarRange	ast_node_main_classes.hpp	/^class NodeUnopExprDollarRange : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarRange::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarRange);$/;"	kind:p	class:NodeUnopExprDollarRange	access:public	signature:(NodeUnopExprDollarRange)
NodeUnopExprDollarRange::NodeUnopExprDollarRange	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarRange(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarRange	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarRange::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarRange	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarRange::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarRange	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarRange::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarRange	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarRevrange	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarRevrange(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarRevrange	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarRevrange	ast_node_main_classes.hpp	/^class NodeUnopExprDollarRevrange : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarRevrange::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarRevrange);$/;"	kind:p	class:NodeUnopExprDollarRevrange	access:public	signature:(NodeUnopExprDollarRevrange)
NodeUnopExprDollarRevrange::NodeUnopExprDollarRevrange	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarRevrange(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarRevrange	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarRevrange::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarRevrange	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarRevrange::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarRevrange	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarRevrange::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarRevrange	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarSigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarSigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarSigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarSigned	ast_node_main_classes.hpp	/^class NodeUnopExprDollarSigned : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarSigned::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarSigned);$/;"	kind:p	class:NodeUnopExprDollarSigned	access:public	signature:(NodeUnopExprDollarSigned)
NodeUnopExprDollarSigned::NodeUnopExprDollarSigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarSigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarSigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarSigned::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarSigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarSigned::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarSigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarSigned::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarSigned	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarSize	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarSize(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarSize	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarSize	ast_node_main_classes.hpp	/^class NodeUnopExprDollarSize : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarSize::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarSize);$/;"	kind:p	class:NodeUnopExprDollarSize	access:public	signature:(NodeUnopExprDollarSize)
NodeUnopExprDollarSize::NodeUnopExprDollarSize	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarSize(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarSize	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarSize::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarSize	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarSize::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarSize	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarSize::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarSize	typeref:typename:Type	access:public	signature:() const
NodeUnopExprDollarUnsigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarUnsigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarUnsigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarUnsigned	ast_node_main_classes.hpp	/^class NodeUnopExprDollarUnsigned : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprDollarUnsigned::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprDollarUnsigned);$/;"	kind:p	class:NodeUnopExprDollarUnsigned	access:public	signature:(NodeUnopExprDollarUnsigned)
NodeUnopExprDollarUnsigned::NodeUnopExprDollarUnsigned	ast_node_main_classes.hpp	/^	inline NodeUnopExprDollarUnsigned(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprDollarUnsigned	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprDollarUnsigned::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarUnsigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarUnsigned::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarUnsigned	typeref:typename:string	access:public	signature:() const
NodeUnopExprDollarUnsigned::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarUnsigned	typeref:typename:Type	access:public	signature:() const
NodeUnopExprLogNot	ast_node_main_classes.hpp	/^	inline NodeUnopExprLogNot(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprLogNot	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprLogNot	ast_node_main_classes.hpp	/^class NodeUnopExprLogNot : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprLogNot::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprLogNot);$/;"	kind:p	class:NodeUnopExprLogNot	access:public	signature:(NodeUnopExprLogNot)
NodeUnopExprLogNot::NodeUnopExprLogNot	ast_node_main_classes.hpp	/^	inline NodeUnopExprLogNot(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprLogNot	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprLogNot::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprLogNot	typeref:typename:string	access:public	signature:() const
NodeUnopExprLogNot::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprLogNot	typeref:typename:string	access:public	signature:() const
NodeUnopExprLogNot::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprLogNot	typeref:typename:Type	access:public	signature:() const
NodeUnopExprMinus	ast_node_main_classes.hpp	/^	inline NodeUnopExprMinus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprMinus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprMinus	ast_node_main_classes.hpp	/^class NodeUnopExprMinus : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprMinus::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprMinus);$/;"	kind:p	class:NodeUnopExprMinus	access:public	signature:(NodeUnopExprMinus)
NodeUnopExprMinus::NodeUnopExprMinus	ast_node_main_classes.hpp	/^	inline NodeUnopExprMinus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprMinus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprMinus::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprMinus	typeref:typename:string	access:public	signature:() const
NodeUnopExprMinus::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprMinus	typeref:typename:string	access:public	signature:() const
NodeUnopExprMinus::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprMinus	typeref:typename:Type	access:public	signature:() const
NodeUnopExprPlus	ast_node_main_classes.hpp	/^	inline NodeUnopExprPlus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprPlus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprPlus	ast_node_main_classes.hpp	/^class NodeUnopExprPlus : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprPlus::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprPlus);$/;"	kind:p	class:NodeUnopExprPlus	access:public	signature:(NodeUnopExprPlus)
NodeUnopExprPlus::NodeUnopExprPlus	ast_node_main_classes.hpp	/^	inline NodeUnopExprPlus(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprPlus	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprPlus::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprPlus	typeref:typename:string	access:public	signature:() const
NodeUnopExprPlus::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprPlus	typeref:typename:string	access:public	signature:() const
NodeUnopExprPlus::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprPlus	typeref:typename:Type	access:public	signature:() const
NodeUnopExprTypeof	ast_node_main_classes.hpp	/^	inline NodeUnopExprTypeof(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprTypeof	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprTypeof	ast_node_main_classes.hpp	/^class NodeUnopExprTypeof : public NodeUnopExprBase$/;"	kind:c	inherits:NodeUnopExprBase
NodeUnopExprTypeof::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUnopExprTypeof);$/;"	kind:p	class:NodeUnopExprTypeof	access:public	signature:(NodeUnopExprTypeof)
NodeUnopExprTypeof::NodeUnopExprTypeof	ast_node_main_classes.hpp	/^	inline NodeUnopExprTypeof(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUnopExprTypeof	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_child)
NodeUnopExprTypeof::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprTypeof	typeref:typename:string	access:public	signature:() const
NodeUnopExprTypeof::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprTypeof	typeref:typename:string	access:public	signature:() const
NodeUnopExprTypeof::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprTypeof	typeref:typename:Type	access:public	signature:() const
NodeUshortint	ast_node_main_classes.hpp	/^	inline NodeUshortint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUshortint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUshortint	ast_node_main_classes.hpp	/^class NodeUshortint : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeUshortint::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUshortint);$/;"	kind:p	class:NodeUshortint	access:public	signature:(NodeUshortint)
NodeUshortint::NodeUshortint	ast_node_main_classes.hpp	/^	inline NodeUshortint(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUshortint	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUshortint::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUshortint	typeref:typename:string	access:public	signature:() const
NodeUshortint::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUshortint	typeref:typename:string	access:public	signature:() const
NodeUshortint::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUshortint	typeref:typename:Type	access:public	signature:() const
NodeUsingStmt	ast_node_main_classes.hpp	/^	inline NodeUsingStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUsingStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeUsingStmt	ast_node_main_classes.hpp	/^class NodeUsingStmt : public NodeLeftRightBase$/;"	kind:c	inherits:NodeLeftRightBase
NodeUsingStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUsingStmt);$/;"	kind:p	class:NodeUsingStmt	access:public	signature:(NodeUsingStmt)
NodeUsingStmt::NodeUsingStmt	ast_node_main_classes.hpp	/^	inline NodeUsingStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeUsingStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_left,Child && s_right)
NodeUsingStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUsingStmt	typeref:typename:string	access:public	signature:() const
NodeUsingStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUsingStmt	typeref:typename:string	access:public	signature:() const
NodeUsingStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUsingStmt	typeref:typename:Type	access:public	signature:() const
NodeUwire	ast_node_main_classes.hpp	/^	inline NodeUwire(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUwire	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUwire	ast_node_main_classes.hpp	/^class NodeUwire : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeUwire::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeUwire);$/;"	kind:p	class:NodeUwire	access:public	signature:(NodeUwire)
NodeUwire::NodeUwire	ast_node_main_classes.hpp	/^	inline NodeUwire(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeUwire	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeUwire::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUwire	typeref:typename:string	access:public	signature:() const
NodeUwire::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUwire	typeref:typename:string	access:public	signature:() const
NodeUwire::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUwire	typeref:typename:Type	access:public	signature:() const
NodeVoid	ast_node_main_classes.hpp	/^	inline NodeVoid(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeVoid	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeVoid	ast_node_main_classes.hpp	/^class NodeVoid : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeVoid::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeVoid);$/;"	kind:p	class:NodeVoid	access:public	signature:(NodeVoid)
NodeVoid::NodeVoid	ast_node_main_classes.hpp	/^	inline NodeVoid(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:NodeVoid	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
NodeVoid::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeVoid	typeref:typename:string	access:public	signature:() const
NodeVoid::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeVoid	typeref:typename:string	access:public	signature:() const
NodeVoid::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeVoid	typeref:typename:Type	access:public	signature:() const
NodeWhileStmt	ast_node_main_classes.hpp	/^	inline NodeWhileStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeWhileStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_cond_expr,Child && s_scope)
NodeWhileStmt	ast_node_main_classes.hpp	/^class NodeWhileStmt : public NodeBase$/;"	kind:c	inherits:NodeBase
NodeWhileStmt::GEN_POST_CONSTRUCTOR	ast_node_main_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeWhileStmt);$/;"	kind:p	class:NodeWhileStmt	access:public	signature:(NodeWhileStmt)
NodeWhileStmt::NodeWhileStmt	ast_node_main_classes.hpp	/^	inline NodeWhileStmt(const SrcCodeChunk& s_src_code_chunk,$/;"	kind:f	class:NodeWhileStmt	access:public	signature:(const SrcCodeChunk & s_src_code_chunk,Child && s_cond_expr,Child && s_scope)
NodeWhileStmt::_cond_expr	ast_node_main_classes.hpp	/^	Child _cond_expr,$/;"	kind:m	class:NodeWhileStmt	typeref:typename:Child	access:protected
NodeWhileStmt::_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeWhileStmt	typeref:typename:Child	access:protected
NodeWhileStmt::dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeWhileStmt	typeref:typename:string	access:public	signature:() const
NodeWhileStmt::name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeWhileStmt	typeref:typename:string	access:public	signature:() const
NodeWhileStmt::type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeWhileStmt	typeref:typename:Type	access:public	signature:() const
NumExpr	ast_node_type_enum.hpp	/^	NumExpr,$/;"	kind:e	enum:Type	access:public
NumVec	expr_value_class.hpp	/^	using NumVec = std::vector<ExprNum>;$/;"	kind:t	class:frost_hdl::ExprValue	typeref:typename:std::vector<ExprNum>	access:public
OneChild	liborangepower_src/parse_tree_base_class.hpp	/^	using OneChild = std::unique_ptr<ParseTreeBase>;$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::unique_ptr<ParseTreeBase>	access:public
OneInst	liborangepower_src/stateful_parser_base_class.hpp	/^		using OneInst = std::variant<bool, TheUnitParse, TheSeqParse>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::variant<bool,TheUnitParse,TheSeqParse>	access:public
OneParamArgInst	ast_node_type_enum.hpp	/^	OneParamArgInst,$/;"	kind:e	enum:Type	access:public
OnePtChild	pt_visitor_class.hpp	/^	using OnePtChild = typename ParseTree::OneChild;$/;"	kind:t	class:frost_hdl::PtVisitor	typeref:typename:ParseTree::OneChild	access:public
Opt	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	enum class Opt$/;"	kind:g	class:liborangepower::lang::OptAsFuncArgParserBase	access:public
Opt	parser_class.hpp	/^	using Opt = typename Base::Opt;$/;"	kind:t	class:frost_hdl::Parser	typeref:typename:Base::Opt	access:public
OptAsFuncArgParserBase	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	inline OptAsFuncArgParserBase(const std::string& s_filename,$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase	access:public	signature:(const std::string & s_filename,std::string * s_text)
OptAsFuncArgParserBase	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^class OptAsFuncArgParserBase$/;"	kind:c	namespace:liborangepower::lang
OrParse	liborangepower_src/stateful_parser_base_class.hpp	/^		OrParse(DerivedType* s_self, Vec&& s_vec, bool s_optional=false)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	access:public	signature:(DerivedType * s_self,Vec && s_vec,bool s_optional=false)
OrParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class OrParse : public SeqParse<DerivedType>$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	inherits:SeqParse<DerivedType>	access:public
Package	ast_node_type_enum.hpp	/^	Package,$/;"	kind:e	enum:Type	access:public
ParamArgTypeSublist	ast_node_type_enum.hpp	/^	ParamArgTypeSublist,$/;"	kind:e	enum:Type	access:public
ParamArgVarSublist	ast_node_type_enum.hpp	/^	ParamArgVarSublist,$/;"	kind:e	enum:Type	access:public
ParamList	ast_node_type_enum.hpp	/^	ParamList,$/;"	kind:e	enum:Type	access:public
ParamModuleSublist	ast_node_type_enum.hpp	/^	ParamModuleSublist,$/;"	kind:e	enum:Type	access:public
ParamPossibleTypename	ast_node_type_enum.hpp	/^	ParamPossibleTypename,$/;"	kind:e	enum:Type	access:public
ParenPair	ast_node_type_enum.hpp	/^	ParenPair,$/;"	kind:e	enum:Type	access:public
ParseFunc	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseFunc = bool (DerivedType::*)();$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public
ParseFunc	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseFunc = typename TheUnitParse::ParseFunc;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheUnitParse::ParseFunc	access:public
ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet() = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:()
ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet(ParseRet&& to_move) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:(ParseRet && to_move)
ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet(const ParseRet& to_copy) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:(const ParseRet & to_copy)
ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	class ParseRet final$/;"	kind:c	class:liborangepower::lang::OptAsFuncArgParserBase	access:public
ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = bool;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:bool	access:public
ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename Base::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::ParseRet	access:public
ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename Base::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::ParseRet	access:public
ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename TheUnitParse::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheUnitParse::ParseRet	access:public
ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename TheUnitParse::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:TheUnitParse::ParseRet	access:public
ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^	using ParseRet = bool;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public
ParseRet	parser_class.hpp	/^	using ParseRet = typename Base::ParseRet;$/;"	kind:t	class:frost_hdl::Parser	typeref:typename:Base::ParseRet	access:public
ParseTree	parse_tree_class.hpp	/^using ParseTree = ParseTreeBase<SrcCodeChunk, Tok>;$/;"	kind:t	namespace:frost_hdl	typeref:typename:ParseTreeBase<SrcCodeChunk,Tok>
ParseTreeBase	liborangepower_src/parse_tree_base_class.hpp	/^	inline ParseTreeBase(const SrcCodeChunkType& s_src_code_chunk)$/;"	kind:f	class:liborangepower::lang::ParseTreeBase	access:public	signature:(const SrcCodeChunkType & s_src_code_chunk)
ParseTreeBase	liborangepower_src/parse_tree_base_class.hpp	/^class ParseTreeBase$/;"	kind:c	namespace:liborangepower::lang
Parser	parser_class.cpp	/^Parser::Parser(set<string>&& s_filename_set)$/;"	kind:f	class:frost_hdl::Parser	signature:(set<string> && s_filename_set)
Parser	parser_class.hpp	/^	Parser(set<string>&& s_filename_set);$/;"	kind:p	class:frost_hdl::Parser	access:public	signature:(set<string> && s_filename_set)
Parser	parser_class.hpp	/^class Parser final : public OptAsFuncArgParserBase<Lexer>$/;"	kind:c	namespace:frost_hdl	inherits:OptAsFuncArgParserBase<Lexer>
PosParamArgInstList	ast_node_type_enum.hpp	/^	PosParamArgInstList,$/;"	kind:e	enum:Type	access:public
PosedgeInst	ast_node_type_enum.hpp	/^	PosedgeInst,$/;"	kind:e	enum:Type	access:public
PrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline PrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::PrevCurrPair	access:public	signature:()
PrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(SeedType s_seed)$/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(SeedType s_seed)
Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
Program	ast_node_type_enum.hpp	/^	Program,$/;"	kind:e	enum:Type	access:public
PseudoExprDollarBase	ast_node_type_enum.hpp	/^	PseudoExprDollarBase,$/;"	kind:e	enum:Type	access:public
PseudoExprDollarFell	ast_node_type_enum.hpp	/^	PseudoExprDollarFell,$/;"	kind:e	enum:Type	access:public
PseudoExprDollarGlobalClock	ast_node_type_enum.hpp	/^	PseudoExprDollarGlobalClock,$/;"	kind:e	enum:Type	access:public
PseudoExprDollarPast	ast_node_type_enum.hpp	/^	PseudoExprDollarPast,$/;"	kind:e	enum:Type	access:public
PseudoExprDollarRose	ast_node_type_enum.hpp	/^	PseudoExprDollarRose,$/;"	kind:e	enum:Type	access:public
PseudoExprDollarStable	ast_node_type_enum.hpp	/^	PseudoExprDollarStable,$/;"	kind:e	enum:Type	access:public
PtChildVec	pt_visitor_class.hpp	/^	using PtChildVec = typename ParseTree::ChildVec;$/;"	kind:t	class:frost_hdl::PtVisitor	typeref:typename:ParseTree::ChildVec	access:public
PtVisitor	pt_visitor_class.cpp	/^PtVisitor::PtVisitor()$/;"	kind:f	class:frost_hdl::PtVisitor	signature:()
PtVisitor	pt_visitor_class.hpp	/^	PtVisitor();$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:()
PtVisitor	pt_visitor_class.hpp	/^class PtVisitor final$/;"	kind:c	namespace:frost_hdl
RangeExprAny	ast_node_type_enum.hpp	/^	RangeExprAny,$/;"	kind:e	enum:Type	access:public
RangeOne	ast_node_type_enum.hpp	/^	RangeOne,$/;"	kind:e	enum:Type	access:public
RangeSuffix	ast_node_type_enum.hpp	/^	RangeSuffix,$/;"	kind:e	enum:Type	access:public
RangeTwo	ast_node_type_enum.hpp	/^	RangeTwo,$/;"	kind:e	enum:Type	access:public
ReplExpr	ast_node_type_enum.hpp	/^	ReplExpr,$/;"	kind:e	enum:Type	access:public
RestrictStmt	ast_node_type_enum.hpp	/^	RestrictStmt,$/;"	kind:e	enum:Type	access:public
ReturnStmt	ast_node_type_enum.hpp	/^	ReturnStmt,$/;"	kind:e	enum:Type	access:public
Sbit	ast_node_type_enum.hpp	/^	Sbit,$/;"	kind:e	enum:Type	access:public
Sbyte	ast_node_type_enum.hpp	/^	Sbyte,$/;"	kind:e	enum:Type	access:public
ScopeBehav	ast_node_type_enum.hpp	/^	ScopeBehav,$/;"	kind:e	enum:Type	access:public
ScopeClass	ast_node_type_enum.hpp	/^	ScopeClass,$/;"	kind:e	enum:Type	access:public
ScopeEnum	ast_node_type_enum.hpp	/^	ScopeEnum,$/;"	kind:e	enum:Type	access:public
ScopeModproc	ast_node_type_enum.hpp	/^	ScopeModproc,$/;"	kind:e	enum:Type	access:public
ScopePackage	ast_node_type_enum.hpp	/^	ScopePackage,$/;"	kind:e	enum:Type	access:public
ScopeSwitch	ast_node_type_enum.hpp	/^	ScopeSwitch,$/;"	kind:e	enum:Type	access:public
ScopeUnion	ast_node_type_enum.hpp	/^	ScopeUnion,$/;"	kind:e	enum:Type	access:public
SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
Self	ast_node_type_enum.hpp	/^	Self,$/;"	kind:e	enum:Type	access:public
SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		SeqParse() = default;$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:()
SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		SeqParse(DerivedType* s_self, Vec&& s_vec, bool s_optional=false)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:(DerivedType * s_self,Vec && s_vec,bool s_optional=false)
SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class SeqParse$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
Sint	ast_node_type_enum.hpp	/^	Sint,$/;"	kind:e	enum:Type	access:public
SizeTooBig	liborangepower_src/mpi_handler_class.hpp	/^		SizeTooBig,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
SizedNumExpr	ast_node_type_enum.hpp	/^	SizedNumExpr,$/;"	kind:e	enum:Type	access:public
Slongint	ast_node_type_enum.hpp	/^	Slongint,$/;"	kind:e	enum:Type	access:public
SrcCodeChunk	src_code_chunk_class.cpp	/^SrcCodeChunk::SrcCodeChunk()$/;"	kind:f	class:frost_hdl::SrcCodeChunk	signature:()
SrcCodeChunk	src_code_chunk_class.cpp	/^SrcCodeChunk::SrcCodeChunk(const string& s_filename,$/;"	kind:f	class:frost_hdl::SrcCodeChunk	signature:(const string & s_filename,const string & s_text,size_t s_src_line,size_t s_src_pos_in_line)
SrcCodeChunk	src_code_chunk_class.hpp	/^	SrcCodeChunk();$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:()
SrcCodeChunk	src_code_chunk_class.hpp	/^	explicit SrcCodeChunk(const string& s_filename,$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:(const string & s_filename,const string & s_text,size_t s_src_line,size_t s_src_pos_in_line)
SrcCodeChunk	src_code_chunk_class.hpp	/^class SrcCodeChunk$/;"	kind:c	namespace:frost_hdl
Sshortint	ast_node_type_enum.hpp	/^	Sshortint,$/;"	kind:e	enum:Type	access:public
Stacks	gen_stacks_stuff.hpp	/^class Stacks$/;"	kind:c
State	liborangepower_src/lexer_base_class.hpp	/^		State()$/;"	kind:f	class:liborangepower::lang::LexerBase::State	access:public	signature:()
State	liborangepower_src/lexer_base_class.hpp	/^	class State$/;"	kind:c	class:liborangepower::lang::LexerBase	access:public
StatefulParserBase	liborangepower_src/stateful_parser_base_class.hpp	/^	StatefulParserBase(std::vector<std::string>&& s_filename_vec)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	access:public	signature:(std::vector<std::string> && s_filename_vec)
StatefulParserBase	liborangepower_src/stateful_parser_base_class.hpp	/^class StatefulParserBase$/;"	kind:c	namespace:liborangepower::lang
StaticAssertStmt	ast_node_type_enum.hpp	/^	StaticAssertStmt,$/;"	kind:e	enum:Type	access:public
StmtList	ast_node_type_enum.hpp	/^	StmtList,$/;"	kind:e	enum:Type	access:public
Swire	ast_node_type_enum.hpp	/^	Swire,$/;"	kind:e	enum:Type	access:public
SwitchStmt	ast_node_type_enum.hpp	/^	SwitchStmt,$/;"	kind:e	enum:Type	access:public
SwitchzStmt	ast_node_type_enum.hpp	/^	SwitchzStmt,$/;"	kind:e	enum:Type	access:public
TOKENPASTE1	liborangepower_src/misc_defines.hpp	/^#define TOKENPASTE1(/;"	kind:d	signature:(x)
TOKENPASTE2	liborangepower_src/misc_defines.hpp	/^#define TOKENPASTE2(/;"	kind:d	signature:(x,y)
TOKENPASTE3	liborangepower_src/misc_defines.hpp	/^#define TOKENPASTE3(/;"	kind:d	signature:(x,y,z)
TOKENPASTE4	liborangepower_src/misc_defines.hpp	/^#define TOKENPASTE4(/;"	kind:d	signature:(x,y,z,w)
Temp0	liborangepower_src/misc_output_classes.hpp	/^			Temp0;$/;"	kind:t	function:liborangepower::misc_output::AnyPrintoutBackend::func
Temp1	liborangepower_src/misc_output_classes.hpp	/^		typedef typename std::remove_const<Temp0>::type Temp1;$/;"	kind:t	function:liborangepower::misc_output::AnyPrintoutBackend::func	typeref:typename:std::remove_const<Temp0>::type
TempTheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^				using TempTheSeqParse = typename SeqParse<DerivedType>$/;"	kind:t	function:liborangepower::lang::StatefulParserBase::MultiParse::_inner_seq_parse	typeref:typename:SeqParse<DerivedType>::TheSeqParse
TheListParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheListParse = ListParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:ListParse<DerivedType>	access:public
TheOrParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheOrParse = OrParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:OrParse<DerivedType>	access:public
TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = SeqParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:SeqParse<DerivedType>	access:public
TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = std::shared_ptr<SeqParse<DerivedType>>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::shared_ptr<SeqParse<DerivedType>>	access:public
TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = typename Base::TheSeqParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::TheSeqParse	access:public
TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = typename Base::TheSeqParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::TheSeqParse	access:public
TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = UnitParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:UnitParse<DerivedType>	access:public
TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = UnitParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:UnitParse<DerivedType>	access:public
TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = typename Base::TheUnitParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::TheUnitParse	access:public
TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = typename Base::TheUnitParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::TheUnitParse	access:public
Tok	tok_enum.hpp	/^enum class Tok$/;"	kind:g	namespace:frost_hdl
TokToStringMap	liborangepower_src/stateful_parser_base_class.hpp	/^	using TokToStringMap = std::map<TokType, std::string>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::map<TokType,std::string>	access:public
TokType	liborangepower_src/lexer_base_class.hpp	/^	using TokType = _TokType;$/;"	kind:t	class:liborangepower::lang::LexerBase	typeref:typename:_TokType	access:public
TokType	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	using TokType = typename LexerType::TokType;$/;"	kind:t	class:liborangepower::lang::OptAsFuncArgParserBase	typeref:typename:LexerType::TokType	access:public
TokType	liborangepower_src/stateful_parser_base_class.hpp	/^	using TokType = typename LexerType::TokType;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexerType::TokType	access:public
TooFewProcs	liborangepower_src/mpi_handler_class.hpp	/^		TooFewProcs,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
TrueFirstArgType	liborangepower_src/stateful_parser_base_class.hpp	/^			using TrueFirstArgType$/;"	kind:t	function:liborangepower::lang::StatefulParserBase::MultiParse::_inner_seq_parse	typeref:typename:std::remove_cv<NoRefFirstArgType>::type
TwoStates	lexer_class.hpp	/^	using TwoStates = typename LexerBase<Tok>::TwoStates;$/;"	kind:t	class:frost_hdl::Lexer	typeref:typename:LexerBase<Tok>::TwoStates	access:public
TwoStates	liborangepower_src/lexer_base_class.hpp	/^	using TwoStates = std::pair<State, State>;$/;"	kind:t	class:liborangepower::lang::LexerBase	typeref:typename:std::pair<State,State>	access:public
TwoStates	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	using TwoStates = typename LexerType::TwoStates;$/;"	kind:t	class:liborangepower::lang::OptAsFuncArgParserBase	typeref:typename:LexerType::TwoStates	access:public
Type	ast_node_type_enum.hpp	/^enum class Type$/;"	kind:g
TypeRange	ast_node_type_enum.hpp	/^	TypeRange,$/;"	kind:e	enum:Type	access:public
Typeof	ast_node_type_enum.hpp	/^	Typeof,$/;"	kind:e	enum:Type	access:public
Ubit	ast_node_type_enum.hpp	/^	Ubit,$/;"	kind:e	enum:Type	access:public
Ubyte	ast_node_type_enum.hpp	/^	Ubyte,$/;"	kind:e	enum:Type	access:public
Uint	ast_node_type_enum.hpp	/^	Uint,$/;"	kind:e	enum:Type	access:public
Ulongint	ast_node_type_enum.hpp	/^	Ulongint,$/;"	kind:e	enum:Type	access:public
Union	ast_node_type_enum.hpp	/^	Union,$/;"	kind:e	enum:Type	access:public
UnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		UnitParse(DerivedType* s_self, const std::string& s_parse_func_str,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public	signature:(DerivedType * s_self,const std::string & s_parse_func_str,ParseFunc s_parse_func,bool s_optional=false)
UnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class UnitParse final$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
UnopExprBase	ast_node_type_enum.hpp	/^	UnopExprBase,$/;"	kind:e	enum:Type	access:public
UnopExprBitNot	ast_node_type_enum.hpp	/^	UnopExprBitNot,$/;"	kind:e	enum:Type	access:public
UnopExprDollarClog2	ast_node_type_enum.hpp	/^	UnopExprDollarClog2,$/;"	kind:e	enum:Type	access:public
UnopExprDollarFirst	ast_node_type_enum.hpp	/^	UnopExprDollarFirst,$/;"	kind:e	enum:Type	access:public
UnopExprDollarHigh	ast_node_type_enum.hpp	/^	UnopExprDollarHigh,$/;"	kind:e	enum:Type	access:public
UnopExprDollarIsSigned	ast_node_type_enum.hpp	/^	UnopExprDollarIsSigned,$/;"	kind:e	enum:Type	access:public
UnopExprDollarIsUnsigned	ast_node_type_enum.hpp	/^	UnopExprDollarIsUnsigned,$/;"	kind:e	enum:Type	access:public
UnopExprDollarLast	ast_node_type_enum.hpp	/^	UnopExprDollarLast,$/;"	kind:e	enum:Type	access:public
UnopExprDollarLow	ast_node_type_enum.hpp	/^	UnopExprDollarLow,$/;"	kind:e	enum:Type	access:public
UnopExprDollarRange	ast_node_type_enum.hpp	/^	UnopExprDollarRange,$/;"	kind:e	enum:Type	access:public
UnopExprDollarRevrange	ast_node_type_enum.hpp	/^	UnopExprDollarRevrange,$/;"	kind:e	enum:Type	access:public
UnopExprDollarSigned	ast_node_type_enum.hpp	/^	UnopExprDollarSigned,$/;"	kind:e	enum:Type	access:public
UnopExprDollarSize	ast_node_type_enum.hpp	/^	UnopExprDollarSize,$/;"	kind:e	enum:Type	access:public
UnopExprDollarUnsigned	ast_node_type_enum.hpp	/^	UnopExprDollarUnsigned,$/;"	kind:e	enum:Type	access:public
UnopExprLogNot	ast_node_type_enum.hpp	/^	UnopExprLogNot,$/;"	kind:e	enum:Type	access:public
UnopExprMinus	ast_node_type_enum.hpp	/^	UnopExprMinus,$/;"	kind:e	enum:Type	access:public
UnopExprPlus	ast_node_type_enum.hpp	/^	UnopExprPlus,$/;"	kind:e	enum:Type	access:public
UnopExprTypeof	ast_node_type_enum.hpp	/^	UnopExprTypeof,$/;"	kind:e	enum:Type	access:public
Ushortint	ast_node_type_enum.hpp	/^	Ushortint,$/;"	kind:e	enum:Type	access:public
UsingStmt	ast_node_type_enum.hpp	/^	UsingStmt,$/;"	kind:e	enum:Type	access:public
Uwire	ast_node_type_enum.hpp	/^	Uwire,$/;"	kind:e	enum:Type	access:public
ValVec	expr_value_class.hpp	/^	using ValVec = std::vector<ExprValue>;$/;"	kind:t	class:frost_hdl::ExprValue	typeref:typename:std::vector<ExprValue>	access:public
Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = std::vector<OneInst>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::vector<OneInst>	access:public
Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = typename Base::Vec;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::Vec	access:public
Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = typename Base::Vec;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::Vec	access:public
Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = typename TheSeqParse::Vec;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheSeqParse::Vec	access:public
Vec2	liborangepower_src/vec2_classes.hpp	/^	inline Vec2() = default;$/;"	kind:p	class:liborangepower::containers::Vec2	access:public	signature:()
Vec2	liborangepower_src/vec2_classes.hpp	/^	inline Vec2(const Type& s_x, const Type& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type & s_x,const Type & s_y)
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
VisitFunc	pt_visitor_class.hpp	/^	using VisitFunc = (PtVisitor::*)(ParseTree* tree);$/;"	kind:t	class:frost_hdl::PtVisitor	access:public
Visitor	ast_visitor_class.cpp	/^Visitor::Visitor()$/;"	kind:f	class:frost_hdl::ast::Visitor	signature:()
Visitor	ast_visitor_class.hpp	/^	Visitor();$/;"	kind:p	class:frost_hdl::ast::Visitor	access:public	signature:()
Visitor	ast_visitor_class.hpp	/^class Visitor$/;"	kind:c	namespace:frost_hdl::ast
Void	ast_node_type_enum.hpp	/^	Void,$/;"	kind:e	enum:Type	access:public
WExpect	liborangepower_src/stateful_parser_base_class.hpp	/^		WExpect(StatefulParserBase* s_parser, TokType tok,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::WExpect	access:public	signature:(StatefulParserBase * s_parser,TokType tok,const TokToStringMap & some_tok_ident_map,LexerType * s_lexer=nullptr)
WExpect	liborangepower_src/stateful_parser_base_class.hpp	/^	class WExpect$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
WIDTH2MP	liborangepower_src/misc_defines.hpp	/^#define WIDTH2MP(/;"	kind:d	signature:(some_width)
WhileStmt	ast_node_type_enum.hpp	/^	WhileStmt,$/;"	kind:e	enum:Type	access:public
X	ast_node_classes.hpp	/^#define X(/;"	kind:d	signature:(AstNodeType,suffix)
X	parser_class.hpp	/^	#define X(/;"	kind:d	signature:(node)
X	pt_visitor_class.cpp	/^	#define X(/;"	kind:d	file:	signature:(node)
X	pt_visitor_class.hpp	/^	#define X(/;"	kind:d	signature:(node)
X	tok_enum.cpp	/^#define X(/;"	kind:d	file:	signature:(ident,str)
X	tok_enum.hpp	/^	#define X(/;"	kind:d	signature:(ident,str)
_ALIGN2	liborangepower_src/misc_defines.hpp	/^#define _ALIGN2 /;"	kind:d
_ALIGN4	liborangepower_src/misc_defines.hpp	/^#define _ALIGN4 /;"	kind:d
__anon12bbe81d0102	liborangepower_src/json_stuff/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::parse_json	typeref:typename:bool	file:	signature:(Json::CharReaderBuilder& actual_rbuilder)
__anon12bbe81d0202	liborangepower_src/json_stuff/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::write_json	file:	signature:(Json::StreamWriterBuilder& some_wbuilder)
__anon12bbe81d0302	liborangepower_src/json_stuff/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anon12bbe81d0402	liborangepower_src/json_stuff/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anon12bbe81d0502	liborangepower_src/json_stuff/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anon12bbe81d0602	liborangepower_src/json_stuff/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anon23dabbb40102	liborangepower_src/stateful_parser_base_class.hpp	/^			{$/;"	kind:f	function:liborangepower::lang::StatefulParserBase::_check_prefixed_tok_seq	typeref:typename:void	file:	signature:()
__anon3a96d16b0102	lexer_class.cpp	/^		{$/;"	kind:f	function:frost_hdl::Lexer::_inner_next_tok	typeref:typename:void	file:	signature:()
_accept	pt_visitor_class.cpp	/^void PtVisitor::_accept(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_accept	pt_visitor_class.hpp	/^	void _accept(ParseTree* tree);$/;"	kind:p	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(ParseTree * tree)
_append_msp	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline void _append_msp$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:void	access:public	signature:(SomeMapSeqParseType & map_seq_parse,const std::string & first_key,FirstArgType && first_seq,RemArgTypes &&...rem_args)
_arg_inst_list	ast_node_main_classes.hpp	/^		_arg_inst_list;$/;"	kind:m	class:NodeCall	typeref:typename:Child	access:protected
_arg_inst_list	ast_node_main_classes.hpp	/^		_arg_inst_list;$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
_arg_list	ast_node_main_classes.hpp	/^		_arg_list,$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
_argc_ptr	liborangepower_src/mpi_handler_class.hpp	/^	int* _argc_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int *	access:protected
_argv_ptr	liborangepower_src/mpi_handler_class.hpp	/^	char*** _argv_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:char ***	access:protected
_arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
_arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
_arr	liborangepower_src/array_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
_arr	liborangepower_src/array_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
_ast_child_stack	pt_visitor_class.hpp	/^	std::stack<ast::NodeBase::Child> _ast_child_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<ast::NodeBase::Child>	access:private
_ast_root	pt_visitor_class.hpp	/^	ast::NodeBase::Child _ast_root;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:ast::NodeBase::Child	access:private
_c	liborangepower_src/lexer_base_class.hpp	/^		int _c;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:int	access:private
_callable	ast_node_main_classes.hpp	/^	Child _callable;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:Child	access:protected
_check_one	liborangepower_src/stateful_parser_base_class.hpp	/^		bool _check_one(const OneInst& iter) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:protected	signature:(const OneInst & iter) const
_check_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static auto _check_parse(DerivedType* self, FirstFuncType&& first_func,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
_check_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static auto _check_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
_check_prefixed_tok_seq	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _check_prefixed_tok_seq(TokType end)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(TokType end)
_check_prefixed_tok_seq	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _check_prefixed_tok_seq(const std::set<TokType>& prefix_set,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(const std::set<TokType> & prefix_set,TokType end)
_child	ast_node_main_classes.hpp	/^	Child _child;$/;"	kind:m	class:NodePseudoExprDollarBase	typeref:typename:Child	access:protected
_child	ast_node_main_classes.hpp	/^	Child _child;$/;"	kind:m	class:NodeRangeOne	typeref:typename:Child	access:protected
_child	ast_node_main_classes.hpp	/^	Child _child;$/;"	kind:m	class:NodeUnopExprBase	typeref:typename:Child	access:protected
_children	liborangepower_src/parse_tree_base_class.hpp	/^	std::map<std::string, Child> _children;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::map<std::string,Child>	access:private
_cond_expr	ast_node_main_classes.hpp	/^	Child _cond_expr,$/;"	kind:m	class:NodeIfStmt	typeref:typename:Child	access:protected
_cond_expr	ast_node_main_classes.hpp	/^	Child _cond_expr,$/;"	kind:m	class:NodeWhileStmt	typeref:typename:Child	access:protected
_curr	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:Type	access:protected
_curr	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:Type	access:protected
_curr_file_index	liborangepower_src/stateful_parser_base_class.hpp	/^	size_t _curr_file_index = 0;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:size_t	access:protected
_curr_filename	err_warn_base_class.hpp	/^	string _curr_filename;$/;"	kind:m	class:frost_hdl::ErrWarnBase	typeref:typename:string	access:protected
_data	expr_num_class.hpp	/^	ExprNumData _data;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:ExprNumData	access:protected
_data	expr_value_class.hpp	/^	std::variant<BigNum, ExprNum, NumVec, ValVec> _data;$/;"	kind:m	class:frost_hdl::ExprValue	typeref:typename:std::variant<BigNum,ExprNum,NumVec,ValVec>	access:private
_data	liborangepower_src/parse_tree_base_class.hpp	/^	std::map<std::string, DataElem> _data;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::map<std::string,DataElem>	access:private
_default_initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType _default_initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
_dup_lex_state	liborangepower_src/stateful_parser_base_class.hpp	/^	inline std::unique_ptr<LexerState> _dup_lex_state() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::unique_ptr<LexerState>	access:protected	signature:() const
_eat_whitespace	liborangepower_src/lexer_base_class.hpp	/^	void _eat_whitespace()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:()
_edge_list	ast_node_main_classes.hpp	/^	Child _edge_list,$/;"	kind:m	class:NodeAlwaysBlkBlock	typeref:typename:Child	access:protected
_edge_list	ast_node_main_classes.hpp	/^	Child _edge_list,$/;"	kind:m	class:NodeAlwaysFfBlock	typeref:typename:Child	access:protected
_else_stmt	ast_node_main_classes.hpp	/^		_else_stmt;$/;"	kind:m	class:NodeIfStmt	typeref:typename:Child	access:protected
_err	err_warn_base_class.hpp	/^	inline void _err(const SrcCodeChunk& src_code_chunk, const string& msg)$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const SrcCodeChunk & src_code_chunk,const string & msg)
_err	err_warn_base_class.hpp	/^	inline void _err(const string& msg)$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const string & msg)
_err	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _err(ArgTypes&&... args) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(ArgTypes &&...args) const
_err	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _err(const LexerState* lex_state, ArgTypes&&... args)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const LexerState * lex_state,ArgTypes &&...args)
_exec_one	liborangepower_src/stateful_parser_base_class.hpp	/^		void _exec_one(const OneInst& iter, bool actual_just_parse=false)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:void	access:protected	signature:(const OneInst & iter,bool actual_just_parse=false) const
_expect	liborangepower_src/stateful_parser_base_class.hpp	/^	void _expect(TokType tok, const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr,bool perf_next_tok=true)
_expect	liborangepower_src/stateful_parser_base_class.hpp	/^	void _expect(TokType tok, const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,const LexerState & lex_state,bool perf_next_tok=true)
_expr	ast_node_main_classes.hpp	/^		_expr;$/;"	kind:m	class:NodeDollarResizeStmt	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr,$/;"	kind:m	class:NodeExprCaseItem	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr,$/;"	kind:m	class:NodeSwitchStmt	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeAssertStmt	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeAssumeStmt	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeCoverStmt	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeNegedgeInst	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodePosedgeInst	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeRestrictStmt	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeReturnStmt	typeref:typename:Child	access:protected
_expr	ast_node_main_classes.hpp	/^	Child _expr;$/;"	kind:m	class:NodeStaticAssertStmt	typeref:typename:Child	access:protected
_expr_or_typename	ast_node_main_classes.hpp	/^	Child _expr_or_typename;$/;"	kind:m	class:NodeTypeof	typeref:typename:Child	access:protected
_extends	ast_node_main_classes.hpp	/^		_extends,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
_extra	ast_node_main_classes.hpp	/^		_extra;$/;"	kind:m	class:NodeIdentTermEqualsExtra	typeref:typename:Child	access:protected
_filename	liborangepower_src/lexer_base_class.hpp	/^	std::string _filename;$/;"	kind:m	class:liborangepower::lang::LexerBase	typeref:typename:std::string	access:protected
_filename	src_code_chunk_class.hpp	/^	string _filename;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:private
_filename_index	parser_class.hpp	/^	size_t _filename_index;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:size_t	access:private
_filename_set	parser_class.hpp	/^	set<string> _filename_set;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:set<string>	access:private
_filename_vec	liborangepower_src/stateful_parser_base_class.hpp	/^	std::vector<std::string> _filename_vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::vector<std::string>	access:protected
_func_map	pt_visitor_class.hpp	/^	map<string, VisitFunc> _func_map;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:map<string,VisitFunc>	access:private
_head	liborangepower_src/linked_list_classes.hpp	/^	Node _head;$/;"	kind:m	class:liborangepower::containers::CircLinkedList	typeref:typename:Node	access:private
_how_much_expr	ast_node_main_classes.hpp	/^	Child _how_much_expr,$/;"	kind:m	class:NodeReplExpr	typeref:typename:Child	access:protected
_ident	ast_node_main_classes.hpp	/^		_ident,$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodePackage	typeref:typename:Child	access:protected
_ident	ast_node_main_classes.hpp	/^	Child _ident,$/;"	kind:m	class:NodeUnion	typeref:typename:Child	access:protected
_ident	ast_node_main_classes.hpp	/^	Child _ident;$/;"	kind:m	class:NodeIdentTerminal	typeref:typename:Child	access:protected
_ident	ast_node_main_classes.hpp	/^	Child _ident;$/;"	kind:m	class:NodeModport	typeref:typename:Child	access:protected
_ident	liborangepower_src/parse_tree_base_class.hpp	/^	std::string _ident;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::string	access:private
_ident_etc	ast_node_main_classes.hpp	/^	Child _ident_etc,$/;"	kind:m	class:NodeDollarResizeStmt	typeref:typename:Child	access:protected
_ident_list	ast_node_main_classes.hpp	/^	Child _ident_list;$/;"	kind:m	class:NodeModportSubList	typeref:typename:Child	access:protected
_ident_or_ident_terminal	ast_node_main_classes.hpp	/^	Child _ident_or_ident_terminal,$/;"	kind:m	class:NodeCall	typeref:typename:Child	access:protected
_ident_or_op	ast_node_main_classes.hpp	/^		_ident_or_op,$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^		_ident_term_equals_extra_list;$/;"	kind:m	class:NodeDeclConstList	typeref:typename:Child	access:protected
_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^		_ident_term_equals_extra_list;$/;"	kind:m	class:NodeParamArgVarSublist	typeref:typename:Child	access:protected
_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^	Child _ident_term_equals_extra_list;$/;"	kind:m	class:NodeParamArgTypeSublist	typeref:typename:Child	access:protected
_ident_term_equals_extra_list	ast_node_main_classes.hpp	/^	Child _ident_term_equals_extra_list;$/;"	kind:m	class:NodeParamModuleSublist	typeref:typename:Child	access:protected
_ident_terminal	ast_node_main_classes.hpp	/^	Child _ident_terminal,$/;"	kind:m	class:NodeIdentTermEqualsExtra	typeref:typename:Child	access:protected
_init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void _init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
_init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void _init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
_inner_insert_after	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator _inner_insert_after(Node* where, Node* what)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:private	signature:(Node * where,Node * what)
_inner_insert_before	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator _inner_insert_before(Node* where, Node* what)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:private	signature:(Node * where,Node * what)
_inner_next_tok	lexer_class.cpp	/^void Lexer::_inner_next_tok()$/;"	kind:f	class:frost_hdl::Lexer	typeref:typename:void	signature:()
_inner_next_tok	lexer_class.hpp	/^	void _inner_next_tok();$/;"	kind:p	class:frost_hdl::Lexer	typeref:typename:void	access:private	signature:()
_inner_next_tok	liborangepower_src/lexer_base_class.hpp	/^	virtual void _inner_next_tok() = 0;$/;"	kind:p	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:()
_inner_seq_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline void _inner_seq_parse(Vec& ret,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:void	access:public	signature:(Vec & ret,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
_inst_ident	ast_node_main_classes.hpp	/^		_inst_ident,$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
_instance	liborangepower_src/time_stuff.hpp	/^	InstanceType _instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
_is_const	ast_node_main_classes.hpp	/^	bool _is_const;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
_is_port	ast_node_main_classes.hpp	/^	bool _is_port;$/;"	kind:m	class:NodeDeclProc	typeref:typename:bool	access:protected
_is_ref	ast_node_main_classes.hpp	/^	bool _is_ref;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
_is_signed	expr_num_class.hpp	/^	bool _is_signed = false;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:bool	access:protected
_is_static	ast_node_main_classes.hpp	/^	bool _is_static;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
_is_virtual	ast_node_main_classes.hpp	/^	bool _is_virtual;$/;"	kind:m	class:NodeExtends	typeref:typename:bool	access:protected
_is_virtual	ast_node_main_classes.hpp	/^	bool _is_virtual;$/;"	kind:m	class:NodeMemberCallable	typeref:typename:bool	access:protected
_items	ast_node_main_classes.hpp	/^		_items,$/;"	kind:m	class:NodeAnyForStmt	typeref:typename:Child	access:protected
_just_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _just_test = false, _just_parse = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected
_just_test	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _just_test = false, _just_parse = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected
_label	ast_node_main_classes.hpp	/^	Child _label;$/;"	kind:m	class:NodeGenerateForStmt	typeref:typename:Child	access:protected
_left	ast_node_main_classes.hpp	/^	Child _left,$/;"	kind:m	class:NodeBinopExprBase	typeref:typename:Child	access:protected
_left	ast_node_main_classes.hpp	/^	Child _left,$/;"	kind:m	class:NodeBracketPair	typeref:typename:Child	access:protected
_left	ast_node_main_classes.hpp	/^	Child _left,$/;"	kind:m	class:NodeLeftRightBase	typeref:typename:Child	access:protected
_lex_state	liborangepower_src/stateful_parser_base_class.hpp	/^	const LexerState& _lex_state() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:const LexerState &	access:protected	signature:() const
_lex_two_states_vec	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		vector<TwoStates> _lex_two_states_vec;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:vector<TwoStates>	access:private
_lexer	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	LexerType _lexer;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase	typeref:typename:LexerType	access:protected
_lexer	liborangepower_src/stateful_parser_base_class.hpp	/^		LexerType* _lexer = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::WExpect	typeref:typename:LexerType *	access:private
_lexer	liborangepower_src/stateful_parser_base_class.hpp	/^	LexerType& _lexer()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexerType &	access:protected	signature:()
_lexer	liborangepower_src/stateful_parser_base_class.hpp	/^	const LexerType& _lexer() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:const LexerType &	access:protected	signature:() const
_lexer_vec	liborangepower_src/stateful_parser_base_class.hpp	/^	std::vector<LexerType> _lexer_vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::vector<LexerType>	access:protected
_line_num	liborangepower_src/lexer_base_class.hpp	/^		size_t _x = 0, _line_num = 1, _pos_in_line = 0;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:size_t	access:private
_list	ast_node_main_classes.hpp	/^	Child _list;$/;"	kind:m	class:NodeCatExpr	typeref:typename:Child	access:protected
_lss	liborangepower_src/stateful_parser_base_class.hpp	/^	LexStateSets _lss;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexStateSets	access:protected
_min_world_size	liborangepower_src/mpi_handler_class.hpp	/^	size_t _num_threads_per_proc, _min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
_module_ident	ast_node_main_classes.hpp	/^	Child _module_ident,$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
_msg_for_expect	liborangepower_src/stateful_parser_base_class.hpp	/^	std::string _msg_for_expect(TokType tok,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::string	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,const LexerState & lex_state) const
_n	ast_node_main_classes.hpp	/^	BigNum _n;$/;"	kind:m	class:NodeNumExpr	typeref:typename:BigNum	access:protected
_n	liborangepower_src/lexer_base_class.hpp	/^		bignum::BigNum _n;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:bignum::BigNum	access:private
_next	liborangepower_src/linked_list_classes.hpp	/^		Node * _next = nullptr, * _prev = nullptr;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::Node	typeref:typename:Node *	access:private
_next_char	liborangepower_src/lexer_base_class.hpp	/^	void _next_char()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:()
_next_lss_tokens	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _next_lss_tokens(const TokToStringMap& some_tok_ident_map)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const TokToStringMap & some_tok_ident_map)
_next_n_tokens	liborangepower_src/stateful_parser_base_class.hpp	/^	const std::vector<LexerState> _next_n_tokens(size_t n,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:const std::vector<LexerState>	access:protected	signature:(size_t n,bool affect_lexer)
_next_tok	liborangepower_src/lexer_base_class.hpp	/^	void _next_tok(TokType comment_tok)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:(TokType comment_tok)
_next_tok	liborangepower_src/stateful_parser_base_class.hpp	/^	inline auto _next_tok(LexerType* lexer=nullptr)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(LexerType * lexer=nullptr)
_node	liborangepower_src/linked_list_classes.hpp	/^		Node* _node = nullptr;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:Node *	access:private
_num_stack	pt_visitor_class.hpp	/^	std::stack<BigNum> _num_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<BigNum>	access:private
_num_threads_per_proc	liborangepower_src/mpi_handler_class.hpp	/^	size_t _num_threads_per_proc, _min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
_opt_list_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheListParse _opt_list_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheListParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
_opt_or_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheOrParse _opt_or_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheOrParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
_opt_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse(DerivedType* self, FirstFuncType&& first_func,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
_opt_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
_opt_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
_opt_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
_opt_seq_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheSeqParse _opt_seq_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheSeqParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
_optional	liborangepower_src/stateful_parser_base_class.hpp	/^		bool _optional = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:protected
_optional	liborangepower_src/stateful_parser_base_class.hpp	/^		bool _optional = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:bool	access:private
_packed	ast_node_main_classes.hpp	/^	bool _packed;$/;"	kind:m	class:NodeClass	typeref:typename:bool	access:protected
_param_0	liborangepower_src/time_stuff.hpp	/^	int _param_0, _param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
_param_1	liborangepower_src/time_stuff.hpp	/^	int _param_0, _param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
_param_arg_var_sublist	ast_node_main_classes.hpp	/^	Child _param_arg_var_sublist;$/;"	kind:m	class:NodeArgPortSublist	typeref:typename:Child	access:protected
_param_inst_list	ast_node_main_classes.hpp	/^		_param_inst_list,$/;"	kind:m	class:NodeCall	typeref:typename:Child	access:protected
_param_inst_list	ast_node_main_classes.hpp	/^		_param_inst_list,$/;"	kind:m	class:NodeInstModuleStmt	typeref:typename:Child	access:protected
_param_inst_list	ast_node_main_classes.hpp	/^		_param_inst_list;$/;"	kind:m	class:NodeParamPossibleTypename	typeref:typename:Child	access:protected
_param_list	ast_node_main_classes.hpp	/^		_param_list,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
_param_list	ast_node_main_classes.hpp	/^		_param_list,$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
_param_list	ast_node_main_classes.hpp	/^	Child _param_list,$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
_param_pack	ast_node_main_classes.hpp	/^	bool _param_pack;$/;"	kind:m	class:NodeParamArgTypeSublist	typeref:typename:bool	access:protected
_param_pack	ast_node_main_classes.hpp	/^	bool _param_pack;$/;"	kind:m	class:NodeParamArgVarSublist	typeref:typename:bool	access:protected
_parse_func	liborangepower_src/stateful_parser_base_class.hpp	/^		ParseFunc _parse_func = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:ParseFunc	access:private
_parse_func_str	liborangepower_src/stateful_parser_base_class.hpp	/^		std::string _parse_func_str;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:std::string	access:private
_parser	liborangepower_src/stateful_parser_base_class.hpp	/^		StatefulParserBase* _parser = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::WExpect	typeref:typename:StatefulParserBase *	access:private
_pop_ast_child	pt_visitor_class.hpp	/^	inline auto _pop_ast_child()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
_pop_num	parser_class.hpp	/^	inline auto _pop_num()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
_pop_num	pt_visitor_class.hpp	/^	inline auto _pop_num()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
_pop_pt	parser_class.hpp	/^	inline auto _pop_pt()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
_pop_str	parser_class.hpp	/^	inline auto _pop_str()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
_pop_str	pt_visitor_class.hpp	/^	inline auto _pop_str()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
_pop_tok	parser_class.hpp	/^	inline auto _pop_tok()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
_pop_tok	pt_visitor_class.hpp	/^	inline auto _pop_tok()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
_port_dir	ast_node_main_classes.hpp	/^	string _port_dir;$/;"	kind:m	class:NodeArgPortSublist	typeref:typename:string	access:protected
_port_dir	ast_node_main_classes.hpp	/^	string _port_dir;$/;"	kind:m	class:NodeModportSubList	typeref:typename:string	access:protected
_port_list	ast_node_main_classes.hpp	/^		_port_list,$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
_pos_in_line	liborangepower_src/lexer_base_class.hpp	/^		size_t _x = 0, _line_num = 1, _pos_in_line = 0;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:size_t	access:private
_prev	liborangepower_src/linked_list_classes.hpp	/^		Node * _next = nullptr, * _prev = nullptr;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::Node	typeref:typename:Node **	access:private
_prev	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:Type	access:protected
_prev	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:Type	access:protected
_primary	ast_node_main_classes.hpp	/^	Child _primary,$/;"	kind:m	class:NodeParamPossibleTypename	typeref:typename:Child	access:protected
_primary	ast_node_main_classes.hpp	/^	Child _primary;$/;"	kind:m	class:NodeNoParamPossibleTypename	typeref:typename:Child	access:protected
_pt_root	parser_class.hpp	/^	unique_ptr<ParseTree> _pt_root;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:unique_ptr<ParseTree>	access:private
_pt_root	pt_visitor_class.hpp	/^	ParseTree* _pt_root = nullptr;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:ParseTree *	access:private
_pt_stack	parser_class.hpp	/^	std::stack<ParseTree> _pt_stack;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:std::stack<ParseTree>	access:private
_push_ast_child	pt_visitor_class.hpp	/^	inline void _push_ast_child(ChildType&& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(ChildType && to_push)
_push_ast_child	pt_visitor_class.hpp	/^	inline void _push_ast_child(ast::NodeBase::Child&& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(ast::NodeBase::Child && to_push)
_push_num	parser_class.hpp	/^	inline void _push_num(const BigNum& to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(const BigNum & to_push)
_push_num	pt_visitor_class.hpp	/^	inline void _push_num(const BigNum& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(const BigNum & to_push)
_push_pt	parser_class.hpp	/^	inline void _push_pt(ParseTree&& to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(ParseTree && to_push)
_push_str	parser_class.hpp	/^	inline void _push_str(const string& to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(const string & to_push)
_push_str	pt_visitor_class.hpp	/^	inline void _push_str(const string& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(const string & to_push)
_push_tok	parser_class.hpp	/^	inline void _push_tok(Tok to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(Tok to_push)
_push_tok	pt_visitor_class.hpp	/^	inline void _push_tok(Tok to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(Tok to_push)
_range_suffix	ast_node_main_classes.hpp	/^	Child _range_suffix;$/;"	kind:m	class:NodeTypeRange	typeref:typename:Child	access:protected
_req_list_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheListParse _req_list_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheListParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
_req_or_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheOrParse _req_or_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheOrParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
_req_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
_req_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
_req_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
_req_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
_req_seq_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheSeqParse _req_seq_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheSeqParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
_right	ast_node_main_classes.hpp	/^		_right;$/;"	kind:m	class:NodeBinopExprBase	typeref:typename:Child	access:protected
_right	ast_node_main_classes.hpp	/^		_right;$/;"	kind:m	class:NodeBracketPair	typeref:typename:Child	access:protected
_right	ast_node_main_classes.hpp	/^		_right;$/;"	kind:m	class:NodeLeftRightBase	typeref:typename:Child	access:protected
_s	ast_node_main_classes.hpp	/^	string _s;$/;"	kind:m	class:NodeHasString	typeref:typename:string	access:protected
_s	liborangepower_src/lexer_base_class.hpp	/^		std::string _s;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:std::string	access:private
_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeIfStmt	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope,$/;"	kind:m	class:NodeUnion	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeAlwaysBlkBlock	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeAlwaysFfBlock	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeAnyForStmt	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeDeclCallable	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeExprCaseItem	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeModule	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodePackage	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeSwitchStmt	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^		_scope;$/;"	kind:m	class:NodeWhileStmt	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^	Child _scope;$/;"	kind:m	class:NodeAlwaysCombBlock	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^	Child _scope;$/;"	kind:m	class:NodeDefaultCaseItem	typeref:typename:Child	access:protected
_scope	ast_node_main_classes.hpp	/^	Child _scope;$/;"	kind:m	class:NodeInitialBlock	typeref:typename:Child	access:protected
_self	liborangepower_src/stateful_parser_base_class.hpp	/^		DerivedType* _self = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:DerivedType *	access:protected
_self	liborangepower_src/stateful_parser_base_class.hpp	/^		DerivedType* _self = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:DerivedType *	access:private
_set_kw_tok	liborangepower_src/lexer_base_class.hpp	/^	inline bool _set_kw_tok$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:bool	access:protected	signature:(const std::map<TokType,std::string> & some_tok_ident_map)
_set_tok	liborangepower_src/lexer_base_class.hpp	/^	void _set_tok(TokType n_tok, bool perf_next_char)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:(TokType n_tok,bool perf_next_char)
_size	ast_node_main_classes.hpp	/^	Child _size;$/;"	kind:m	class:NodeSizedNumExpr	typeref:typename:Child	access:protected
_size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t _size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
_size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t _size = _size_2d.x * _size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
_size	liborangepower_src/array_helper_classes.hpp	/^	size_t _size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
_size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t _size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
_size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> _size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
_src_code_chunk	ast_node_classes.hpp	/^	SrcCodeChunk _src_code_chunk;$/;"	kind:m	class:frost_hdl::ast::NodeBase	typeref:typename:SrcCodeChunk	access:protected
_src_code_chunk	liborangepower_src/parse_tree_base_class.hpp	/^	SrcCodeChunkType _src_code_chunk;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:SrcCodeChunkType	access:private
_src_line	src_code_chunk_class.hpp	/^	size_t _src_line = 0, _src_pos_in_line = 0;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:size_t	access:private
_src_pos_in_line	src_code_chunk_class.hpp	/^	size_t _src_line = 0, _src_pos_in_line = 0;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:size_t	access:private
_stacks	gen_stacks_stuff.hpp	/^} _stacks;$/;"	kind:v	typeref:class:Stacks
_str_stack	pt_visitor_class.hpp	/^	std::stack<string> _str_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<string>	access:private
_text	liborangepower_src/lexer_base_class.hpp	/^	std::string* _text = nullptr;$/;"	kind:m	class:liborangepower::lang::LexerBase	typeref:typename:std::string *	access:protected
_text	src_code_chunk_class.hpp	/^	string _text;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:private
_text_map	parser_class.hpp	/^	map<string, unique_ptr<string>> _text_map;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:map<string,unique_ptr<string>>	access:private
_text_vec	liborangepower_src/stateful_parser_base_class.hpp	/^	std::vector<std::unique_ptr<std::string>> _text_vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::vector<std::unique_ptr<std::string>>	access:protected
_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename,$/;"	kind:m	class:NodeDeclConstList	typeref:typename:Child	access:protected
_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename,$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename,$/;"	kind:m	class:NodeParamArgVarSublist	typeref:typename:Child	access:protected
_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename;$/;"	kind:m	class:NodeDeclFunc	typeref:typename:Child	access:protected
_the_typename	ast_node_main_classes.hpp	/^	Child _the_typename;$/;"	kind:m	class:NodeExtends	typeref:typename:Child	access:protected
_to_ast_child	pt_visitor_class.hpp	/^	inline auto _to_ast_child(ChildType&& to_convert)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:(ChildType && to_convert)
_to_next_in_list	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _to_next_in_list(TokType end, TokType separator,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(TokType end,TokType separator,const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr)
_to_repl_expr	ast_node_main_classes.hpp	/^		_to_repl_expr;$/;"	kind:m	class:NodeReplExpr	typeref:typename:Child	access:protected
_tok	liborangepower_src/lexer_base_class.hpp	/^		TokType _tok;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:TokType	access:private
_tok_set	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		set<Tok> _tok_set;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:set<Tok>	access:private
_tok_stack	pt_visitor_class.hpp	/^	std::stack<Tok> _tok_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<Tok>	access:private
_two_states	liborangepower_src/lexer_base_class.hpp	/^	TwoStates _two_states;$/;"	kind:m	class:liborangepower::lang::LexerBase	typeref:typename:TwoStates	access:protected
_unexpected	liborangepower_src/stateful_parser_base_class.hpp	/^	void _unexpected(const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr)
_unexpected	liborangepower_src/stateful_parser_base_class.hpp	/^	void _unexpected(const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const TokToStringMap & some_tok_ident_map,const LexerState & lex_state)
_unit_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheUnitParse _unit_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheUnitParse	access:public	signature:(DerivedType * self,const std::string & s_parse_func_str,ParseFunc s_parse_func,bool s_optional)
_valid	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		bool _valid = true;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:bool	access:private
_var	ast_node_main_classes.hpp	/^	Child _var,$/;"	kind:m	class:NodeAnyForStmt	typeref:typename:Child	access:protected
_var_list	ast_node_main_classes.hpp	/^		_var_list;$/;"	kind:m	class:NodeClass	typeref:typename:Child	access:protected
_var_list	ast_node_main_classes.hpp	/^		_var_list;$/;"	kind:m	class:NodeEnum	typeref:typename:Child	access:protected
_var_list	ast_node_main_classes.hpp	/^		_var_list;$/;"	kind:m	class:NodeUnion	typeref:typename:Child	access:protected
_vec	liborangepower_src/stateful_parser_base_class.hpp	/^		Vec _vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:Vec	access:protected
_visit_add_sub_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_add_sub_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_add_sub_expr_first_choice	pt_visitor_class.cpp	/^void PtVisitor::_visit_add_sub_expr_first_choice(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_always_blk	pt_visitor_class.cpp	/^void PtVisitor::_visit_always_blk(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_always_comb	pt_visitor_class.cpp	/^void PtVisitor::_visit_always_comb(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_always_ff	pt_visitor_class.cpp	/^void PtVisitor::_visit_always_ff(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_any_range_suffix	pt_visitor_class.cpp	/^void PtVisitor::_visit_any_range_suffix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_arg_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_arg_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_arg_port_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_port_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_arg_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_assign_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_assign_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_cat_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_cat_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_class	pt_visitor_class.cpp	/^void PtVisitor::_visit_class(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_compare_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_compare_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_compare_expr_first_choice	pt_visitor_class.cpp	/^void PtVisitor::_visit_compare_expr_first_choice(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_const	pt_visitor_class.cpp	/^void PtVisitor::_visit_const(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_const_str	pt_visitor_class.cpp	/^void PtVisitor::_visit_const_str(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_cont_assign	pt_visitor_class.cpp	/^void PtVisitor::_visit_cont_assign(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_contents_func_task	pt_visitor_class.cpp	/^void PtVisitor::_visit_contents_func_task(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_contents_modproc	pt_visitor_class.cpp	/^void PtVisitor::_visit_contents_modproc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_decl_callable	pt_visitor_class.cpp	/^void PtVisitor::_visit_decl_callable(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_decl_cstm_type	pt_visitor_class.cpp	/^void PtVisitor::_visit_decl_cstm_type(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_default_case_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_default_case_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_dff	pt_visitor_class.cpp	/^void PtVisitor::_visit_dff(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_dollar_global_clock	pt_visitor_class.cpp	/^void PtVisitor::_visit_dollar_global_clock(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_dollar_pow_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_dollar_pow_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_dollar_resize_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_dollar_resize_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_edge_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_edge_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_edge_list_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_edge_list_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_enum	pt_visitor_class.cpp	/^void PtVisitor::_visit_enum(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_expr_case_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_expr_case_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_expr_dollar_func_of_one	pt_visitor_class.cpp	/^void PtVisitor::_visit_expr_dollar_func_of_one(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_extends	pt_visitor_class.cpp	/^void PtVisitor::_visit_extends(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_for_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_for_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_func	pt_visitor_class.cpp	/^void PtVisitor::_visit_func(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_func_task_ident_etc	pt_visitor_class.cpp	/^void PtVisitor::_visit_func_task_ident_etc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_behav	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_behav_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_behav_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_behav_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_behav_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_class	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_class_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_class_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_class_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_class_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_modproc	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_modproc_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_modproc_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_modproc_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_modproc_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_package	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_package_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_package_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_package_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_generate_package_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_hardware_block	pt_visitor_class.cpp	/^void PtVisitor::_visit_hardware_block(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_else_generate	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else_generate(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_else_generate_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else_generate_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_generate_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_generate_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_generate_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_generate_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_header_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_call	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_call(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_etc	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_etc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_member_access	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_member_access(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_no_param_overloaded_call	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_no_param_overloaded_call(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_non_member_scope_access	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_non_member_scope_access(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_param_member_overloaded_call	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_param_member_overloaded_call(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_scope_access	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_scope_access(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_ident_terminal	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_terminal(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_if_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_if_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_initial	pt_visitor_class.cpp	/^void PtVisitor::_visit_initial(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_inner_modport	pt_visitor_class.cpp	/^void PtVisitor::_visit_inner_modport(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_inst	pt_visitor_class.cpp	/^void PtVisitor::_visit_inst(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_kw_const	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_const(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_kw_port	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_port(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_kw_ref	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_ref(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_kw_static	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_static(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_kw_virtual	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_virtual(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_logical_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_logical_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_logical_expr_first_choice	pt_visitor_class.cpp	/^void PtVisitor::_visit_logical_expr_first_choice(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_member_access_label	pt_visitor_class.cpp	/^void PtVisitor::_visit_member_access_label(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_member_callable	pt_visitor_class.cpp	/^void PtVisitor::_visit_member_callable(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_member_callable_prefix	pt_visitor_class.cpp	/^void PtVisitor::_visit_member_callable_prefix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_modport	pt_visitor_class.cpp	/^void PtVisitor::_visit_modport(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_module	pt_visitor_class.cpp	/^void PtVisitor::_visit_module(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_mul_div_mod_etc_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_mul_div_mod_etc_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_named_pararg_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_named_pararg_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_named_pararg_inst_list_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_named_pararg_inst_list_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_negedge_inst	pt_visitor_class.cpp	/^void PtVisitor::_visit_negedge_inst(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_no_param_possible_typename	pt_visitor_class.cpp	/^void PtVisitor::_visit_no_param_possible_typename(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_non_ref_member_callable_prefix	pt_visitor_class.cpp	/^void PtVisitor::_visit_non_ref_member_callable_prefix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_num_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_num_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_one_const	pt_visitor_class.cpp	/^void PtVisitor::_visit_one_const(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_one_var	pt_visitor_class.cpp	/^void PtVisitor::_visit_one_var(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_package	pt_visitor_class.cpp	/^void PtVisitor::_visit_package(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_param_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_param_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_param_module_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_module_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_param_possible_typename	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_possible_typename(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_param_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pararg_ident_equals_typename_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_ident_equals_typename_sublist$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pararg_ident_equals_typename_sublist_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_ident_equals_typename_sublist_item$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pararg_type_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_type_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pararg_var_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_var_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pararg_var_sublist_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_var_sublist_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_paren_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_paren_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pos_pararg_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_pos_pararg_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_posedge_inst	pt_visitor_class.cpp	/^void PtVisitor::_visit_posedge_inst(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_post_dollar_func_of_one_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_post_dollar_func_of_one_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_post_dollar_func_of_one_valid_lhs_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_post_dollar_func_of_one_valid_lhs_expr$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pre_dollar_func_of_one_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_pre_dollar_func_of_one_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_pre_dollar_func_of_one_valid_lhs_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_pre_dollar_func_of_one_valid_lhs_expr$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_proc	pt_visitor_class.cpp	/^void PtVisitor::_visit_proc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_proc_ident_etc	pt_visitor_class.cpp	/^void PtVisitor::_visit_proc_ident_etc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_program	pt_visitor_class.cpp	/^void PtVisitor::_visit_program(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_program_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_program_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_range_suffix	pt_visitor_class.cpp	/^void PtVisitor::_visit_range_suffix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_raw_num	pt_visitor_class.cpp	/^void PtVisitor::_visit_raw_num(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_repl_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_repl_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_return_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_return_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_behav	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_behav(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_behav_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_behav_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_class	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_class(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_class_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_class_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_modproc	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_modproc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_modproc_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_modproc_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_package	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_package(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_package_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_package_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_switch	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_switch(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_scope_switch_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_switch_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_stmt_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_stmt_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_stmt_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_stmt_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_switch_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_switch_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_switchz_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_switchz_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_task	pt_visitor_class.cpp	/^void PtVisitor::_visit_task(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_type_range	pt_visitor_class.cpp	/^void PtVisitor::_visit_type_range(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_typename	pt_visitor_class.cpp	/^void PtVisitor::_visit_typename(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_typeof	pt_visitor_class.cpp	/^void PtVisitor::_visit_typeof(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_unary_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_unary_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_union	pt_visitor_class.cpp	/^void PtVisitor::_visit_union(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_using	pt_visitor_class.cpp	/^void PtVisitor::_visit_using(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_valid_lhs_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_valid_lhs_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_var	pt_visitor_class.cpp	/^void PtVisitor::_visit_var(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_visit_while_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_while_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
_warn	err_warn_base_class.hpp	/^	inline void _warn(const SrcCodeChunk& src_code_chunk,$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const SrcCodeChunk & src_code_chunk,const string & msg)
_warn	err_warn_base_class.hpp	/^	inline void _warn(const string& msg)$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const string & msg)
_warn	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _warn(ArgTypes&&... args) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(ArgTypes &&...args) const
_warn	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _warn(const LexerState* lex_state, ArgTypes&&... args)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const LexerState * lex_state,ArgTypes &&...args)
_wexpect	liborangepower_src/stateful_parser_base_class.hpp	/^	inline auto _wexpect(TokType tok,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr)
_which_range	ast_node_main_classes.hpp	/^	Child _which_range;$/;"	kind:m	class:NodeRangeExprAny	typeref:typename:Child	access:protected
_world_rank	liborangepower_src/mpi_handler_class.hpp	/^	int _world_rank, _world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
_world_size	liborangepower_src/mpi_handler_class.hpp	/^	int _world_rank, _world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
_x	liborangepower_src/lexer_base_class.hpp	/^		size_t _x = 0, _line_num = 1, _pos_in_line = 0;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:size_t	access:private
actual_just_test	liborangepower_src/stateful_parser_base_class.hpp	/^	inline bool actual_just_test() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public	signature:() const
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstArgType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstArgType & first_val)
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstArgType& first_val,$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstArgType & first_val,const SecondArgType & next,RemArgTypes &&...rem_args)
append	ast_node_classes.hpp	/^	virtual inline void append(Child&& child)$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:void	access:public	signature:(Child && child)
append	ast_node_classes.hpp	/^	virtual inline void append(Child&& to_append)$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:void	access:public	signature:(Child && to_append)
append_lex_two_states	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_lex_two_states(const TwoStates& to_append)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(const TwoStates & to_append)
append_parse_ret	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_parse_ret(const ParseRet& to_append)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(const ParseRet & to_append)
append_tok	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_tok(Tok tok)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(Tok tok)
append_tok_set	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_tok_set(const set<Tok>& to_append_set)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(const set<Tok> & to_append_set)
argc	liborangepower_src/mpi_handler_class.hpp	/^	inline int argc() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:() const
argv	liborangepower_src/mpi_handler_class.hpp	/^	inline char** argv() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:char **	access:public	signature:() const
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
ast	ast_node_classes.cpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl	file:
ast	ast_node_classes.hpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl
ast	ast_visitor_class.cpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl	file:
ast	ast_visitor_class.hpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
awith	liborangepower_src/with_defines.hpp	/^#define awith(/;"	kind:d	signature:(obj)
back	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator back()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
back_up	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:void	access:public	signature:()
back_up	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
back_up_and_update	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up_and_update(Type&& n_curr)$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:void	access:public	signature:(Type && n_curr)
back_up_and_update	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up_and_update(Type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(Type && n_curr)
back_up_and_update	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up_and_update(const Type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const Type & n_curr)
begin	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator begin()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
big_num	expr_value_class.hpp	/^	inline BigNum& big_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:BigNum &	access:public	signature:()
big_num	expr_value_class.hpp	/^	inline const BigNum& big_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const BigNum &	access:public	signature:() const
bignum	liborangepower_src/gmp_stuff.hpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower
bignum	liborangepower_src/gmp_stuff/gmp_stuff.cpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower	file:
bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(const Type& to_check, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(const Type & to_check,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(size_t bit_pos_range_hi,size_t bit_pos_range_lo)
c	liborangepower_src/lexer_base_class.hpp	/^	inline auto c() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
cbegin	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator cbegin() const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:() const
cend	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator cend() const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:() const
change_full_type	expr_num_class.hpp	/^	inline void change_full_type(size_t n_size, bool n_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t n_size,bool n_is_signed)
check	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual bool check() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:bool	access:public	signature:() const
check	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual bool check() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:bool	access:public	signature:() const
check	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual bool check() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:public	signature:() const
clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
clear_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits_with_range(Type& to_clear, size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
cmp_lex_tok	liborangepower_src/stateful_parser_base_class.hpp	/^	inline bool cmp_lex_tok(TokType to_cmp) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public	signature:(TokType to_cmp) const
cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstArgType* first_arr, SecondArgType* second_arr,$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstArgType * first_arr,SecondArgType * second_arr,size_t size)
construct_str_from_pointer	misc_types.hpp	/^inline string construct_str_from_pointer(Type* pointer)$/;"	kind:f	namespace:frost_hdl	typeref:typename:string	signature:(Type * pointer)
containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/linked_list_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/prev_curr_pair_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
contains	liborangepower_src/linked_list_classes.hpp	/^	bool contains(Node* where) const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:bool	access:public	signature:(Node * where) const
convert_bignum_to_str	liborangepower_src/gmp_stuff.hpp	/^inline std::string convert_bignum_to_str(const BigNum& in_bignum)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:std::string	signature:(const BigNum & in_bignum)
convert_str_to	liborangepower_src/string_conversion_stuff.hpp	/^inline Type convert_str_to(const std::string& to_convert)$/;"	kind:f	namespace:liborangepower::strings	typeref:typename:Type	signature:(const std::string & to_convert)
convert_to_bignum	expr_num_class.cpp	/^BigNum ExprNum::convert_to_bignum() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:BigNum	signature:() const
convert_to_bignum	expr_num_class.hpp	/^	BigNum convert_to_bignum() const;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:BigNum	access:public	signature:() const
convert_to_errwarn_string	src_code_chunk_class.cpp	/^string SrcCodeChunk::convert_to_errwarn_string() const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:string	signature:() const
convert_to_errwarn_string	src_code_chunk_class.hpp	/^	string convert_to_errwarn_string() const;$/;"	kind:p	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:public	signature:() const
convert_to_pos_string	src_code_chunk_class.cpp	/^string SrcCodeChunk::convert_to_pos_string() const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:string	signature:() const
convert_to_pos_string	src_code_chunk_class.hpp	/^	string convert_to_pos_string() const;$/;"	kind:p	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:public	signature:() const
convert_to_string	expr_num_class.hpp	/^	inline string convert_to_string() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:string	access:public	signature:() const
convert_to_unsigned_bignum	expr_num_class.hpp	/^	inline BigNum convert_to_unsigned_bignum() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:BigNum	access:public	signature:() const
convert_to_verilog_literal	expr_num_class.cpp	/^string ExprNum::convert_to_verilog_literal() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:string	signature:() const
convert_to_verilog_literal	expr_num_class.hpp	/^	string convert_to_verilog_literal() const;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:string	access:public	signature:() const
copy_from_bignum	expr_num_class.cpp	/^void ExprNum::copy_from_bignum(const BigNum& n_data, size_t n_data_size)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const BigNum & n_data,size_t n_data_size)
copy_from_bignum	expr_num_class.hpp	/^	inline void copy_from_bignum(const BigNum& n_data)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data)
copy_from_bignum	expr_num_class.hpp	/^	inline void copy_from_bignum(const BigNum& n_data, size_t n_data_size,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data,size_t n_data_size,bool n_is_signed)
copy_from_bignum	expr_num_class.hpp	/^	void copy_from_bignum(const BigNum& n_data, size_t n_data_size);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data,size_t n_data_size)
copy_from_bignum_with_smallest_size	expr_num_class.cpp	/^void ExprNum::copy_from_bignum_with_smallest_size(const BigNum& n_data,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const BigNum & n_data,bool n_is_signed)
copy_from_bignum_with_smallest_size	expr_num_class.hpp	/^	void copy_from_bignum_with_smallest_size(const BigNum& n_data,$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data,bool n_is_signed)
count_leading_zeros	liborangepower_src/misc_bitwise_funcs.hpp	/^size_t count_leading_zeros(Type x)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(Type x)
custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
data	liborangepower_src/linked_list_classes.hpp	/^		Type data;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::Node	typeref:typename:Type	access:public
dbg_to_string	ast_node_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAlwaysBlkBlock	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAlwaysCombBlock	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAlwaysFfBlock	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAnyForStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeArgList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeArgPortSublist	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAssertStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAssumeStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeAuto	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBehavAssignStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBase	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitAnd	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitAsr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitLsl	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitLsr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitOr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprBitXor	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpEq	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpGe	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpGt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpLe	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpLt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprCmpNe	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprDiv	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprDollarPow	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprLogAnd	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprLogOr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprMinus	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprMod	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprMul	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBinopExprPlus	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeBracketPair	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeCall	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeCatExpr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeClass	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeConstString	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeContAssignStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeCoverStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclCallable	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclConstList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclFunc	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclProc	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclTask	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDeclVarList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDefaultCaseItem	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeDollarResizeStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeEdgeList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeEnum	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeExprBase	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeExprCaseItem	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeExtends	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeForStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeGenerateForStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeGenerateIfStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeHasString	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdent	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentEtc	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentMemberAccess	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentScopeAccess	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentTermEqualsExtra	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentTermEqualsExtraList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIdentTerminal	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeIfStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeInitialBlock	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeInstModuleStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeLeftRightBase	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeListCat	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberAccessPrivateStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberAccessProtectedStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberAccessPublicStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeMemberCallable	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeModport	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeModportSubList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeModule	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNamedParamArgInstList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNegedgeInst	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNoParamPossibleTypename	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeNumExpr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeOneParamArgInst	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePackage	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamArgTypeSublist	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamArgVarSublist	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamModuleSublist	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParamPossibleTypename	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeParenPair	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePosParamArgInstList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePosedgeInst	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeProgram	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarBase	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarFell	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarPast	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarRose	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodePseudoExprDollarStable	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeExprAny	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeOne	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeSuffix	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRangeTwo	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeReplExpr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeRestrictStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeReturnStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSbit	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSbyte	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeBehav	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeClass	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeEnum	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeModproc	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopePackage	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeSwitch	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeScopeUnion	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSelf	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSint	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSizedNumExpr	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSlongint	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSshortint	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeStaticAssertStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeStmtList	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSwire	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSwitchStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeSwitchzStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeTypeRange	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeTypeof	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUbit	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUbyte	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUint	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUlongint	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnion	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprBase	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprBitNot	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarClog2	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarFirst	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarHigh	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarIsSigned	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarLast	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarLow	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarRange	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarRevrange	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarSigned	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarSize	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprDollarUnsigned	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprLogNot	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprMinus	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprPlus	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUnopExprTypeof	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUshortint	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUsingStmt	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeUwire	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeVoid	typeref:typename:string	access:public	signature:() const
dbg_to_string	ast_node_main_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:NodeWhileStmt	typeref:typename:string	access:public	signature:() const
dblpretabbed	misc_utility_funcs.hpp	/^inline string dblpretabbed(const FirstArgType& first_arg,$/;"	kind:f	namespace:frost_hdl	typeref:typename:string	signature:(const FirstArgType & first_arg,RemArgTypes &&...rem_args)
debug	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline bool debug = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:public
debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
debug_print_json	liborangepower_src/json_stuff/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
debug_tok_ident_map	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline const TokToStringMap* debug_tok_ident_map = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:const TokToStringMap *	access:public
dup_set	liborangepower_src/stateful_parser_base_class.hpp	/^		std::set<LexerState> found_set, dup_set;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:std::set<LexerState>	access:public
empty	liborangepower_src/linked_list_classes.hpp	/^	inline bool empty() const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:bool	access:public	signature:() const
end	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator end()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
end	liborangepower_src/stateful_parser_base_class.hpp	/^		TokType end;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:TokType	access:public
end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
err	src_code_chunk_class.hpp	/^	inline void err(const string& msg, int status=1) const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:void	access:public	signature:(const string & msg,int status=1) const
exec	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual void exec() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:void	access:public	signature:() const
exec	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual void exec() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:void	access:public	signature:() const
exec	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual void exec() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:void	access:public	signature:() const
expr_num	expr_value_class.hpp	/^	inline ExprNum& expr_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:ExprNum &	access:public	signature:()
expr_num	expr_value_class.hpp	/^	inline const ExprNum& expr_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const ExprNum &	access:public	signature:() const
find_dup	liborangepower_src/stateful_parser_base_class.hpp	/^		inline LexerState find_dup(TokType tok) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public	signature:(TokType tok) const
find_dup	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool find_dup(TokType tok, LexerState& ret) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:bool	access:public	signature:(TokType tok,LexerState & ret) const
find_found	liborangepower_src/stateful_parser_base_class.hpp	/^		inline LexerState find_found() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public	signature:() const
find_found	liborangepower_src/stateful_parser_base_class.hpp	/^		inline LexerState find_found(TokType tok) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public	signature:(TokType tok) const
find_found	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool find_found(TokType tok, LexerState& ret) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:bool	access:public	signature:(TokType tok,LexerState & ret) const
first_dup	liborangepower_src/stateful_parser_base_class.hpp	/^		LexerState first_dup;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public
first_invalid_inst	liborangepower_src/stateful_parser_base_class.hpp	/^		inline FirstValidInvalidInst first_invalid_inst() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:FirstValidInvalidInst	access:public	signature:() const
found_set	liborangepower_src/stateful_parser_base_class.hpp	/^		std::set<LexerState> found_set, dup_set;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:std::set<LexerState>	access:public
fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
front	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator front()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
frost_hdl	ast_node_classes.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	ast_node_classes.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	ast_visitor_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	ast_visitor_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	err_warn_base_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	expr_num_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	expr_num_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	expr_value_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	expr_value_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	lexer_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	lexer_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	misc_types.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	misc_types.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	misc_utility_funcs.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	parse_tree_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	parser_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	parser_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	pt_visitor_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	pt_visitor_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	src_code_chunk_class.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	src_code_chunk_class.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl	tok_enum.cpp	/^namespace frost_hdl$/;"	kind:n	file:
frost_hdl	tok_enum.hpp	/^namespace frost_hdl$/;"	kind:n
frost_hdl::ErrWarnBase	err_warn_base_class.hpp	/^class ErrWarnBase$/;"	kind:c	namespace:frost_hdl
frost_hdl::ErrWarnBase::ErrWarnBase	err_warn_base_class.hpp	/^	inline ErrWarnBase() = default;$/;"	kind:p	class:frost_hdl::ErrWarnBase	access:public	signature:()
frost_hdl::ErrWarnBase::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	err_warn_base_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(ErrWarnBase);$/;"	kind:p	class:frost_hdl::ErrWarnBase	access:public	signature:(ErrWarnBase)
frost_hdl::ErrWarnBase::_curr_filename	err_warn_base_class.hpp	/^	string _curr_filename;$/;"	kind:m	class:frost_hdl::ErrWarnBase	typeref:typename:string	access:protected
frost_hdl::ErrWarnBase::_err	err_warn_base_class.hpp	/^	inline void _err(const SrcCodeChunk& src_code_chunk, const string& msg)$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const SrcCodeChunk & src_code_chunk,const string & msg)
frost_hdl::ErrWarnBase::_err	err_warn_base_class.hpp	/^	inline void _err(const string& msg)$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const string & msg)
frost_hdl::ErrWarnBase::_warn	err_warn_base_class.hpp	/^	inline void _warn(const SrcCodeChunk& src_code_chunk,$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const SrcCodeChunk & src_code_chunk,const string & msg)
frost_hdl::ErrWarnBase::_warn	err_warn_base_class.hpp	/^	inline void _warn(const string& msg)$/;"	kind:f	class:frost_hdl::ErrWarnBase	typeref:typename:void	access:protected	signature:(const string & msg)
frost_hdl::ErrWarnBase::~ErrWarnBase	err_warn_base_class.hpp	/^	virtual ~ErrWarnBase() = default;$/;"	kind:p	class:frost_hdl::ErrWarnBase	access:public	signature:()
frost_hdl::ExprNum	expr_num_class.hpp	/^class ExprNum final$/;"	kind:c	namespace:frost_hdl
frost_hdl::ExprNum::ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(ExprNumData&& s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(ExprNumData && s_data,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(bool s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(bool s_data,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const BigNum& s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const BigNum & s_data,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const BigNum& s_data, size_t s_data_size,$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const BigNum & s_data,size_t s_data_size,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const ExprNum& src, size_t s_data_size)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const ExprNum & src,size_t s_data_size)
frost_hdl::ExprNum::ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const ExprNum& src, size_t s_data_size, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const ExprNum & src,size_t s_data_size,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.cpp	/^ExprNum::ExprNum(const ExprNumData& s_data, bool s_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	signature:(const ExprNumData & s_data,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	ExprNum() = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:()
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	ExprNum(ExprNumData&& s_data, bool s_is_signed=false);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(ExprNumData && s_data,bool s_is_signed=false)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNum& src, size_t s_data_size);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & src,size_t s_data_size)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNum& src, size_t s_data_size, bool s_is_signed);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & src,size_t s_data_size,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNum & to_copy)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	ExprNum(const ExprNumData& s_data, bool s_is_signed=false);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const ExprNumData & s_data,bool s_is_signed=false)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	explicit ExprNum(bool s_data, bool s_is_signed=false);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(bool s_data,bool s_is_signed=false)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	explicit ExprNum(const BigNum& s_data, bool s_is_signed);$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const BigNum & s_data,bool s_is_signed)
frost_hdl::ExprNum::ExprNum	expr_num_class.hpp	/^	explicit ExprNum(const BigNum& s_data, size_t s_data_size,$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:(const BigNum & s_data,size_t s_data_size,bool s_is_signed)
frost_hdl::ExprNum::ExprNumData	expr_num_class.hpp	/^	typedef std::vector<bool> ExprNumData;$/;"	kind:t	class:frost_hdl::ExprNum	typeref:typename:std::vector<bool>	access:public
frost_hdl::ExprNum::_data	expr_num_class.hpp	/^	ExprNumData _data;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:ExprNumData	access:protected
frost_hdl::ExprNum::_is_signed	expr_num_class.hpp	/^	bool _is_signed = false;$/;"	kind:m	class:frost_hdl::ExprNum	typeref:typename:bool	access:protected
frost_hdl::ExprNum::change_full_type	expr_num_class.hpp	/^	inline void change_full_type(size_t n_size, bool n_is_signed)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t n_size,bool n_is_signed)
frost_hdl::ExprNum::convert_to_bignum	expr_num_class.cpp	/^BigNum ExprNum::convert_to_bignum() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:BigNum	signature:() const
frost_hdl::ExprNum::convert_to_bignum	expr_num_class.hpp	/^	BigNum convert_to_bignum() const;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:BigNum	access:public	signature:() const
frost_hdl::ExprNum::convert_to_string	expr_num_class.hpp	/^	inline string convert_to_string() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:string	access:public	signature:() const
frost_hdl::ExprNum::convert_to_unsigned_bignum	expr_num_class.hpp	/^	inline BigNum convert_to_unsigned_bignum() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:BigNum	access:public	signature:() const
frost_hdl::ExprNum::convert_to_verilog_literal	expr_num_class.cpp	/^string ExprNum::convert_to_verilog_literal() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:string	signature:() const
frost_hdl::ExprNum::convert_to_verilog_literal	expr_num_class.hpp	/^	string convert_to_verilog_literal() const;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:string	access:public	signature:() const
frost_hdl::ExprNum::copy_from_bignum	expr_num_class.cpp	/^void ExprNum::copy_from_bignum(const BigNum& n_data, size_t n_data_size)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const BigNum & n_data,size_t n_data_size)
frost_hdl::ExprNum::copy_from_bignum	expr_num_class.hpp	/^	inline void copy_from_bignum(const BigNum& n_data)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data)
frost_hdl::ExprNum::copy_from_bignum	expr_num_class.hpp	/^	inline void copy_from_bignum(const BigNum& n_data, size_t n_data_size,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data,size_t n_data_size,bool n_is_signed)
frost_hdl::ExprNum::copy_from_bignum	expr_num_class.hpp	/^	void copy_from_bignum(const BigNum& n_data, size_t n_data_size);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data,size_t n_data_size)
frost_hdl::ExprNum::copy_from_bignum_with_smallest_size	expr_num_class.cpp	/^void ExprNum::copy_from_bignum_with_smallest_size(const BigNum& n_data,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const BigNum & n_data,bool n_is_signed)
frost_hdl::ExprNum::copy_from_bignum_with_smallest_size	expr_num_class.hpp	/^	void copy_from_bignum_with_smallest_size(const BigNum& n_data,$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const BigNum & n_data,bool n_is_signed)
frost_hdl::ExprNum::is_negative	expr_num_class.hpp	/^	inline bool is_negative() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprNum::multiple_bits	expr_num_class.cpp	/^auto ExprNum::multiple_bits(size_t start_index, size_t amount) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:ExprNumData	signature:(size_t start_index,size_t amount) const
frost_hdl::ExprNum::multiple_bits	expr_num_class.hpp	/^	ExprNumData multiple_bits(size_t start_index, size_t amount) const;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:ExprNumData	access:public	signature:(size_t start_index,size_t amount) const
frost_hdl::ExprNum::one_bit	expr_num_class.hpp	/^	inline auto one_bit(size_t index) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:auto	access:public	signature:(size_t index) const
frost_hdl::ExprNum::operator =	expr_num_class.hpp	/^	ExprNum& operator = (const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:ExprNum &	access:public	signature:(const ExprNum & to_copy)
frost_hdl::ExprNum::operator ==	expr_num_class.hpp	/^	inline bool operator == (const ExprNum& other) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:(const ExprNum & other) const
frost_hdl::ExprNum::operator BigNum	expr_num_class.hpp	/^	inline operator BigNum() const$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:() const
frost_hdl::ExprNum::operator string	expr_num_class.hpp	/^	explicit inline operator string() const$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:() const
frost_hdl::ExprNum::perf_asr	expr_num_class.cpp	/^void ExprNum::perf_asr(const ExprNum& to_shift, const ExprNum& amount)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_shift,const ExprNum & amount)
frost_hdl::ExprNum::perf_asr	expr_num_class.hpp	/^	void perf_asr(const ExprNum& to_shift, const ExprNum& amount);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_shift,const ExprNum & amount)
frost_hdl::ExprNum::perf_lsl	expr_num_class.cpp	/^void ExprNum::perf_lsl(const ExprNum& to_shift, const ExprNum& amount)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_shift,const ExprNum & amount)
frost_hdl::ExprNum::perf_lsl	expr_num_class.hpp	/^	void perf_lsl(const ExprNum& to_shift, const ExprNum& amount);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_shift,const ExprNum & amount)
frost_hdl::ExprNum::perf_lsr	expr_num_class.cpp	/^void ExprNum::perf_lsr(const ExprNum& to_shift, const ExprNum& amount)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_shift,const ExprNum & amount)
frost_hdl::ExprNum::perf_lsr	expr_num_class.hpp	/^	void perf_lsr(const ExprNum& to_shift, const ExprNum& amount);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_shift,const ExprNum & amount)
frost_hdl::ExprNum::perf_slice_with_range	expr_num_class.cpp	/^void ExprNum::perf_slice_with_range(const ExprNum& to_slice,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_slice,const ExprNum & range_left,const ExprNum & range_right)
frost_hdl::ExprNum::perf_slice_with_range	expr_num_class.hpp	/^	void perf_slice_with_range(const ExprNum& to_slice,$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_slice,const ExprNum & range_left,const ExprNum & range_right)
frost_hdl::ExprNum::set_bit	expr_num_class.hpp	/^	inline void set_bit(size_t index, bool val)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t index,bool val)
frost_hdl::ExprNum::set_multiple_bits	expr_num_class.cpp	/^void ExprNum::set_multiple_bits(size_t start_index,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(size_t start_index,const ExprNumData & some_bits)
frost_hdl::ExprNum::set_multiple_bits	expr_num_class.hpp	/^	void set_multiple_bits(size_t start_index,$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t start_index,const ExprNumData & some_bits)
frost_hdl::ExprNum::set_size	expr_num_class.cpp	/^void ExprNum::set_size(size_t n_size)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(size_t n_size)
frost_hdl::ExprNum::set_size	expr_num_class.hpp	/^	void set_size(size_t n_size);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t n_size)
frost_hdl::ExprNum::size	expr_num_class.hpp	/^	inline size_t size() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:size_t	access:public	signature:() const
frost_hdl::ExprNum::~ExprNum	expr_num_class.hpp	/^	~ExprNum() = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:()
frost_hdl::ExprValue	expr_value_class.hpp	/^class ExprValue final$/;"	kind:c	namespace:frost_hdl
frost_hdl::ExprValue::ExprValue	expr_value_class.cpp	/^ExprValue::ExprValue()$/;"	kind:f	class:frost_hdl::ExprValue	signature:()
frost_hdl::ExprValue::ExprValue	expr_value_class.hpp	/^	ExprValue();$/;"	kind:p	class:frost_hdl::ExprValue	access:public	signature:()
frost_hdl::ExprValue::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	expr_value_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(ExprValue);$/;"	kind:p	class:frost_hdl::ExprValue	access:public	signature:(ExprValue)
frost_hdl::ExprValue::NumVec	expr_value_class.hpp	/^	using NumVec = std::vector<ExprNum>;$/;"	kind:t	class:frost_hdl::ExprValue	typeref:typename:std::vector<ExprNum>	access:public
frost_hdl::ExprValue::ValVec	expr_value_class.hpp	/^	using ValVec = std::vector<ExprValue>;$/;"	kind:t	class:frost_hdl::ExprValue	typeref:typename:std::vector<ExprValue>	access:public
frost_hdl::ExprValue::_data	expr_value_class.hpp	/^	std::variant<BigNum, ExprNum, NumVec, ValVec> _data;$/;"	kind:m	class:frost_hdl::ExprValue	typeref:typename:std::variant<BigNum,ExprNum,NumVec,ValVec>	access:private
frost_hdl::ExprValue::big_num	expr_value_class.hpp	/^	inline BigNum& big_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:BigNum &	access:public	signature:()
frost_hdl::ExprValue::big_num	expr_value_class.hpp	/^	inline const BigNum& big_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const BigNum &	access:public	signature:() const
frost_hdl::ExprValue::expr_num	expr_value_class.hpp	/^	inline ExprNum& expr_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:ExprNum &	access:public	signature:()
frost_hdl::ExprValue::expr_num	expr_value_class.hpp	/^	inline const ExprNum& expr_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const ExprNum &	access:public	signature:() const
frost_hdl::ExprValue::holds_big_num	expr_value_class.hpp	/^	inline bool holds_big_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprValue::holds_expr_num	expr_value_class.hpp	/^	inline bool holds_expr_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprValue::holds_num_vec	expr_value_class.hpp	/^	inline bool holds_num_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprValue::holds_val_vec	expr_value_class.hpp	/^	inline bool holds_val_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
frost_hdl::ExprValue::make_hold_big_num	expr_value_class.hpp	/^	inline void make_hold_big_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
frost_hdl::ExprValue::make_hold_expr_num	expr_value_class.hpp	/^	inline void make_hold_expr_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
frost_hdl::ExprValue::make_hold_num_vec	expr_value_class.hpp	/^	inline void make_hold_num_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
frost_hdl::ExprValue::make_hold_val_vec	expr_value_class.hpp	/^	inline void make_hold_val_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
frost_hdl::ExprValue::num_vec	expr_value_class.hpp	/^	inline NumVec& num_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:NumVec &	access:public	signature:()
frost_hdl::ExprValue::num_vec	expr_value_class.hpp	/^	inline const NumVec& num_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const NumVec &	access:public	signature:() const
frost_hdl::ExprValue::val_vec	expr_value_class.hpp	/^	inline ValVec& val_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:ValVec &	access:public	signature:()
frost_hdl::ExprValue::val_vec	expr_value_class.hpp	/^	inline const ValVec& val_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const ValVec &	access:public	signature:() const
frost_hdl::ExprValue::~ExprValue	expr_value_class.cpp	/^ExprValue::~ExprValue()$/;"	kind:f	class:frost_hdl::ExprValue	signature:()
frost_hdl::ExprValue::~ExprValue	expr_value_class.hpp	/^	~ExprValue();$/;"	kind:p	class:frost_hdl::ExprValue	access:public	signature:()
frost_hdl::LIST_OF_TOK	tok_enum.hpp	/^	LIST_OF_TOK(X)$/;"	kind:e	enum:frost_hdl::Tok	access:public
frost_hdl::Lexer	lexer_class.hpp	/^class Lexer final : public LexerBase<Tok>$/;"	kind:c	namespace:frost_hdl	inherits:LexerBase<Tok>
frost_hdl::Lexer::Lexer	lexer_class.cpp	/^Lexer::Lexer(const string& s_filename, string* s_text)$/;"	kind:f	class:frost_hdl::Lexer	signature:(const string & s_filename,string * s_text)
frost_hdl::Lexer::Lexer	lexer_class.hpp	/^	Lexer(const string& s_filename, string* s_text);$/;"	kind:p	class:frost_hdl::Lexer	access:public	signature:(const string & s_filename,string * s_text)
frost_hdl::Lexer::TwoStates	lexer_class.hpp	/^	using TwoStates = typename LexerBase<Tok>::TwoStates;$/;"	kind:t	class:frost_hdl::Lexer	typeref:typename:LexerBase<Tok>::TwoStates	access:public
frost_hdl::Lexer::_inner_next_tok	lexer_class.cpp	/^void Lexer::_inner_next_tok()$/;"	kind:f	class:frost_hdl::Lexer	typeref:typename:void	signature:()
frost_hdl::Lexer::_inner_next_tok	lexer_class.hpp	/^	void _inner_next_tok();$/;"	kind:p	class:frost_hdl::Lexer	typeref:typename:void	access:private	signature:()
frost_hdl::Lexer::next_tok	lexer_class.cpp	/^void Lexer::next_tok()$/;"	kind:f	class:frost_hdl::Lexer	typeref:typename:void	signature:()
frost_hdl::Lexer::next_tok	lexer_class.hpp	/^	void next_tok();$/;"	kind:p	class:frost_hdl::Lexer	typeref:typename:void	access:public	signature:()
frost_hdl::Lexer::src_code_chunk	lexer_class.hpp	/^	inline auto src_code_chunk(const TwoStates* two_states=nullptr) const$/;"	kind:f	class:frost_hdl::Lexer	typeref:typename:auto	access:public	signature:(const TwoStates * two_states=nullptr) const
frost_hdl::Lexer::~Lexer	lexer_class.cpp	/^Lexer::~Lexer()$/;"	kind:f	class:frost_hdl::Lexer	signature:()
frost_hdl::Lexer::~Lexer	lexer_class.hpp	/^	~Lexer();$/;"	kind:p	class:frost_hdl::Lexer	typeref:typename:Lexer	access:public	signature:()
frost_hdl::ParseTree	parse_tree_class.hpp	/^using ParseTree = ParseTreeBase<SrcCodeChunk, Tok>;$/;"	kind:t	namespace:frost_hdl	typeref:typename:ParseTreeBase<SrcCodeChunk,Tok>
frost_hdl::Parser	parser_class.hpp	/^class Parser final : public OptAsFuncArgParserBase<Lexer>$/;"	kind:c	namespace:frost_hdl	inherits:OptAsFuncArgParserBase<Lexer>
frost_hdl::Parser::Base	parser_class.hpp	/^	using Base = OptAsFuncArgParserBase<Lexer>;$/;"	kind:t	class:frost_hdl::Parser	typeref:typename:OptAsFuncArgParserBase<Lexer>	access:public
frost_hdl::Parser::Opt	parser_class.hpp	/^	using Opt = typename Base::Opt;$/;"	kind:t	class:frost_hdl::Parser	typeref:typename:Base::Opt	access:public
frost_hdl::Parser::ParseRet	parser_class.hpp	/^	using ParseRet = typename Base::ParseRet;$/;"	kind:t	class:frost_hdl::Parser	typeref:typename:Base::ParseRet	access:public
frost_hdl::Parser::Parser	parser_class.cpp	/^Parser::Parser(set<string>&& s_filename_set)$/;"	kind:f	class:frost_hdl::Parser	signature:(set<string> && s_filename_set)
frost_hdl::Parser::Parser	parser_class.hpp	/^	Parser(set<string>&& s_filename_set);$/;"	kind:p	class:frost_hdl::Parser	access:public	signature:(set<string> && s_filename_set)
frost_hdl::Parser::_filename_index	parser_class.hpp	/^	size_t _filename_index;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:size_t	access:private
frost_hdl::Parser::_filename_set	parser_class.hpp	/^	set<string> _filename_set;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:set<string>	access:private
frost_hdl::Parser::_pop_num	parser_class.hpp	/^	inline auto _pop_num()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
frost_hdl::Parser::_pop_pt	parser_class.hpp	/^	inline auto _pop_pt()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
frost_hdl::Parser::_pop_str	parser_class.hpp	/^	inline auto _pop_str()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
frost_hdl::Parser::_pop_tok	parser_class.hpp	/^	inline auto _pop_tok()$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:auto	access:private	signature:()
frost_hdl::Parser::_pt_root	parser_class.hpp	/^	unique_ptr<ParseTree> _pt_root;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:unique_ptr<ParseTree>	access:private
frost_hdl::Parser::_pt_stack	parser_class.hpp	/^	std::stack<ParseTree> _pt_stack;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:std::stack<ParseTree>	access:private
frost_hdl::Parser::_push_num	parser_class.hpp	/^	inline void _push_num(const BigNum& to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(const BigNum & to_push)
frost_hdl::Parser::_push_pt	parser_class.hpp	/^	inline void _push_pt(ParseTree&& to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(ParseTree && to_push)
frost_hdl::Parser::_push_str	parser_class.hpp	/^	inline void _push_str(const string& to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(const string & to_push)
frost_hdl::Parser::_push_tok	parser_class.hpp	/^	inline void _push_tok(Tok to_push)$/;"	kind:f	class:frost_hdl::Parser	typeref:typename:void	access:private	signature:(Tok to_push)
frost_hdl::Parser::_text_map	parser_class.hpp	/^	map<string, unique_ptr<string>> _text_map;$/;"	kind:m	class:frost_hdl::Parser	typeref:typename:map<string,unique_ptr<string>>	access:private
frost_hdl::Parser::~Parser	parser_class.cpp	/^Parser::~Parser()$/;"	kind:f	class:frost_hdl::Parser	signature:()
frost_hdl::Parser::~Parser	parser_class.hpp	/^	~Parser();$/;"	kind:p	class:frost_hdl::Parser	access:public	signature:()
frost_hdl::PtVisitor	pt_visitor_class.hpp	/^class PtVisitor final$/;"	kind:c	namespace:frost_hdl
frost_hdl::PtVisitor::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	pt_visitor_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(PtVisitor);$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:(PtVisitor)
frost_hdl::PtVisitor::GEN_GETTER_AND_SETTER_BY_VAL	pt_visitor_class.hpp	/^	GEN_GETTER_AND_SETTER_BY_VAL(pt_root)$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:(pt_root)
frost_hdl::PtVisitor::OnePtChild	pt_visitor_class.hpp	/^	using OnePtChild = typename ParseTree::OneChild;$/;"	kind:t	class:frost_hdl::PtVisitor	typeref:typename:ParseTree::OneChild	access:public
frost_hdl::PtVisitor::PtChildVec	pt_visitor_class.hpp	/^	using PtChildVec = typename ParseTree::ChildVec;$/;"	kind:t	class:frost_hdl::PtVisitor	typeref:typename:ParseTree::ChildVec	access:public
frost_hdl::PtVisitor::PtVisitor	pt_visitor_class.cpp	/^PtVisitor::PtVisitor()$/;"	kind:f	class:frost_hdl::PtVisitor	signature:()
frost_hdl::PtVisitor::PtVisitor	pt_visitor_class.hpp	/^	PtVisitor();$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:()
frost_hdl::PtVisitor::VisitFunc	pt_visitor_class.hpp	/^	using VisitFunc = (PtVisitor::*)(ParseTree* tree);$/;"	kind:t	class:frost_hdl::PtVisitor	access:public
frost_hdl::PtVisitor::_accept	pt_visitor_class.cpp	/^void PtVisitor::_accept(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_accept	pt_visitor_class.hpp	/^	void _accept(ParseTree* tree);$/;"	kind:p	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_ast_child_stack	pt_visitor_class.hpp	/^	std::stack<ast::NodeBase::Child> _ast_child_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<ast::NodeBase::Child>	access:private
frost_hdl::PtVisitor::_ast_root	pt_visitor_class.hpp	/^	ast::NodeBase::Child _ast_root;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:ast::NodeBase::Child	access:private
frost_hdl::PtVisitor::_func_map	pt_visitor_class.hpp	/^	map<string, VisitFunc> _func_map;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:map<string,VisitFunc>	access:private
frost_hdl::PtVisitor::_num_stack	pt_visitor_class.hpp	/^	std::stack<BigNum> _num_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<BigNum>	access:private
frost_hdl::PtVisitor::_pop_ast_child	pt_visitor_class.hpp	/^	inline auto _pop_ast_child()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
frost_hdl::PtVisitor::_pop_num	pt_visitor_class.hpp	/^	inline auto _pop_num()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
frost_hdl::PtVisitor::_pop_str	pt_visitor_class.hpp	/^	inline auto _pop_str()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
frost_hdl::PtVisitor::_pop_tok	pt_visitor_class.hpp	/^	inline auto _pop_tok()$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:()
frost_hdl::PtVisitor::_pt_root	pt_visitor_class.hpp	/^	ParseTree* _pt_root = nullptr;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:ParseTree *	access:private
frost_hdl::PtVisitor::_push_ast_child	pt_visitor_class.hpp	/^	inline void _push_ast_child(ChildType&& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(ChildType && to_push)
frost_hdl::PtVisitor::_push_ast_child	pt_visitor_class.hpp	/^	inline void _push_ast_child(ast::NodeBase::Child&& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(ast::NodeBase::Child && to_push)
frost_hdl::PtVisitor::_push_num	pt_visitor_class.hpp	/^	inline void _push_num(const BigNum& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(const BigNum & to_push)
frost_hdl::PtVisitor::_push_str	pt_visitor_class.hpp	/^	inline void _push_str(const string& to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(const string & to_push)
frost_hdl::PtVisitor::_push_tok	pt_visitor_class.hpp	/^	inline void _push_tok(Tok to_push)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	access:private	signature:(Tok to_push)
frost_hdl::PtVisitor::_str_stack	pt_visitor_class.hpp	/^	std::stack<string> _str_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<string>	access:private
frost_hdl::PtVisitor::_to_ast_child	pt_visitor_class.hpp	/^	inline auto _to_ast_child(ChildType&& to_convert)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:auto	access:private	signature:(ChildType && to_convert)
frost_hdl::PtVisitor::_tok_stack	pt_visitor_class.hpp	/^	std::stack<Tok> _tok_stack;$/;"	kind:m	class:frost_hdl::PtVisitor	typeref:typename:std::stack<Tok>	access:private
frost_hdl::PtVisitor::_visit_add_sub_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_add_sub_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_add_sub_expr_first_choice	pt_visitor_class.cpp	/^void PtVisitor::_visit_add_sub_expr_first_choice(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_always_blk	pt_visitor_class.cpp	/^void PtVisitor::_visit_always_blk(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_always_comb	pt_visitor_class.cpp	/^void PtVisitor::_visit_always_comb(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_always_ff	pt_visitor_class.cpp	/^void PtVisitor::_visit_always_ff(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_any_range_suffix	pt_visitor_class.cpp	/^void PtVisitor::_visit_any_range_suffix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_arg_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_arg_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_arg_port_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_port_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_arg_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_arg_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_assign_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_assign_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_cat_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_cat_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_class	pt_visitor_class.cpp	/^void PtVisitor::_visit_class(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_compare_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_compare_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_compare_expr_first_choice	pt_visitor_class.cpp	/^void PtVisitor::_visit_compare_expr_first_choice(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_const	pt_visitor_class.cpp	/^void PtVisitor::_visit_const(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_const_str	pt_visitor_class.cpp	/^void PtVisitor::_visit_const_str(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_cont_assign	pt_visitor_class.cpp	/^void PtVisitor::_visit_cont_assign(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_contents_func_task	pt_visitor_class.cpp	/^void PtVisitor::_visit_contents_func_task(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_contents_modproc	pt_visitor_class.cpp	/^void PtVisitor::_visit_contents_modproc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_decl_callable	pt_visitor_class.cpp	/^void PtVisitor::_visit_decl_callable(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_decl_cstm_type	pt_visitor_class.cpp	/^void PtVisitor::_visit_decl_cstm_type(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_default_case_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_default_case_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_dff	pt_visitor_class.cpp	/^void PtVisitor::_visit_dff(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_dollar_global_clock	pt_visitor_class.cpp	/^void PtVisitor::_visit_dollar_global_clock(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_dollar_pow_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_dollar_pow_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_dollar_resize_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_dollar_resize_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_edge_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_edge_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_edge_list_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_edge_list_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_enum	pt_visitor_class.cpp	/^void PtVisitor::_visit_enum(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_expr_case_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_expr_case_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_expr_dollar_func_of_one	pt_visitor_class.cpp	/^void PtVisitor::_visit_expr_dollar_func_of_one(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_extends	pt_visitor_class.cpp	/^void PtVisitor::_visit_extends(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_for_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_for_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_func	pt_visitor_class.cpp	/^void PtVisitor::_visit_func(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_func_task_ident_etc	pt_visitor_class.cpp	/^void PtVisitor::_visit_func_task_ident_etc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_behav	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_behav_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_behav_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_behav_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_behav_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_behav_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_class	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_class_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_class_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_class_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_class_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_class_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_modproc	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_modproc_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_modproc_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_modproc_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_modproc_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_modproc_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_package	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_package_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_package_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_package_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_generate_package_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_generate_package_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_hardware_block	pt_visitor_class.cpp	/^void PtVisitor::_visit_hardware_block(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_else_generate	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else_generate(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_else_generate_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else_generate_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_generate_for	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_generate_for(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_generate_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_generate_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_header_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_header_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_call	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_call(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_etc	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_etc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_member_access	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_member_access(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_no_param_overloaded_call	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_no_param_overloaded_call(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_non_member_scope_access	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_non_member_scope_access(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_param_member_overloaded_call	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_param_member_overloaded_call(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_scope_access	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_scope_access(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_ident_terminal	pt_visitor_class.cpp	/^void PtVisitor::_visit_ident_terminal(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_if_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_if_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_initial	pt_visitor_class.cpp	/^void PtVisitor::_visit_initial(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_inner_modport	pt_visitor_class.cpp	/^void PtVisitor::_visit_inner_modport(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_inst	pt_visitor_class.cpp	/^void PtVisitor::_visit_inst(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_kw_const	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_const(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_kw_port	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_port(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_kw_ref	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_ref(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_kw_static	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_static(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_kw_virtual	pt_visitor_class.cpp	/^void PtVisitor::_visit_kw_virtual(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_logical_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_logical_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_logical_expr_first_choice	pt_visitor_class.cpp	/^void PtVisitor::_visit_logical_expr_first_choice(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_member_access_label	pt_visitor_class.cpp	/^void PtVisitor::_visit_member_access_label(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_member_callable	pt_visitor_class.cpp	/^void PtVisitor::_visit_member_callable(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_member_callable_prefix	pt_visitor_class.cpp	/^void PtVisitor::_visit_member_callable_prefix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_modport	pt_visitor_class.cpp	/^void PtVisitor::_visit_modport(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_module	pt_visitor_class.cpp	/^void PtVisitor::_visit_module(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_mul_div_mod_etc_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_mul_div_mod_etc_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_named_pararg_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_named_pararg_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_named_pararg_inst_list_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_named_pararg_inst_list_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_negedge_inst	pt_visitor_class.cpp	/^void PtVisitor::_visit_negedge_inst(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_no_param_possible_typename	pt_visitor_class.cpp	/^void PtVisitor::_visit_no_param_possible_typename(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_non_ref_member_callable_prefix	pt_visitor_class.cpp	/^void PtVisitor::_visit_non_ref_member_callable_prefix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_num_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_num_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_one_const	pt_visitor_class.cpp	/^void PtVisitor::_visit_one_const(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_one_var	pt_visitor_class.cpp	/^void PtVisitor::_visit_one_var(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_package	pt_visitor_class.cpp	/^void PtVisitor::_visit_package(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_param_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_param_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_param_module_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_module_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_param_possible_typename	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_possible_typename(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_param_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_param_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pararg_ident_equals_typename_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_ident_equals_typename_sublist$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pararg_ident_equals_typename_sublist_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_ident_equals_typename_sublist_item$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pararg_type_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_type_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pararg_var_sublist	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_var_sublist(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pararg_var_sublist_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_pararg_var_sublist_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_paren_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_paren_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pos_pararg_inst_list	pt_visitor_class.cpp	/^void PtVisitor::_visit_pos_pararg_inst_list(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_posedge_inst	pt_visitor_class.cpp	/^void PtVisitor::_visit_posedge_inst(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_post_dollar_func_of_one_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_post_dollar_func_of_one_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_post_dollar_func_of_one_valid_lhs_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_post_dollar_func_of_one_valid_lhs_expr$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pre_dollar_func_of_one_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_pre_dollar_func_of_one_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_pre_dollar_func_of_one_valid_lhs_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_pre_dollar_func_of_one_valid_lhs_expr$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_proc	pt_visitor_class.cpp	/^void PtVisitor::_visit_proc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_proc_ident_etc	pt_visitor_class.cpp	/^void PtVisitor::_visit_proc_ident_etc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_program	pt_visitor_class.cpp	/^void PtVisitor::_visit_program(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_program_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_program_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_range_suffix	pt_visitor_class.cpp	/^void PtVisitor::_visit_range_suffix(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_raw_num	pt_visitor_class.cpp	/^void PtVisitor::_visit_raw_num(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_repl_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_repl_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_return_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_return_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_behav	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_behav(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_behav_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_behav_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_class	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_class(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_class_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_class_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_modproc	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_modproc(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_modproc_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_modproc_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_package	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_package(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_package_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_package_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_switch	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_switch(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_scope_switch_item	pt_visitor_class.cpp	/^void PtVisitor::_visit_scope_switch_item(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_stmt_else	pt_visitor_class.cpp	/^void PtVisitor::_visit_stmt_else(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_stmt_else_if	pt_visitor_class.cpp	/^void PtVisitor::_visit_stmt_else_if(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_switch_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_switch_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_switchz_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_switchz_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_task	pt_visitor_class.cpp	/^void PtVisitor::_visit_task(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_type_range	pt_visitor_class.cpp	/^void PtVisitor::_visit_type_range(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_typename	pt_visitor_class.cpp	/^void PtVisitor::_visit_typename(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_typeof	pt_visitor_class.cpp	/^void PtVisitor::_visit_typeof(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_unary_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_unary_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_union	pt_visitor_class.cpp	/^void PtVisitor::_visit_union(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_using	pt_visitor_class.cpp	/^void PtVisitor::_visit_using(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_valid_lhs_expr	pt_visitor_class.cpp	/^void PtVisitor::_visit_valid_lhs_expr(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_var	pt_visitor_class.cpp	/^void PtVisitor::_visit_var(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::_visit_while_stmt	pt_visitor_class.cpp	/^void PtVisitor::_visit_while_stmt(ParseTree* tree)$/;"	kind:f	class:frost_hdl::PtVisitor	typeref:typename:void	signature:(ParseTree * tree)
frost_hdl::PtVisitor::~PtVisitor	pt_visitor_class.hpp	/^	inline ~PtVisitor() = default;$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:()
frost_hdl::SrcCodeChunk	src_code_chunk_class.hpp	/^class SrcCodeChunk$/;"	kind:c	namespace:frost_hdl
frost_hdl::SrcCodeChunk::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	src_code_chunk_class.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(SrcCodeChunk);$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:(SrcCodeChunk)
frost_hdl::SrcCodeChunk::SrcCodeChunk	src_code_chunk_class.cpp	/^SrcCodeChunk::SrcCodeChunk()$/;"	kind:f	class:frost_hdl::SrcCodeChunk	signature:()
frost_hdl::SrcCodeChunk::SrcCodeChunk	src_code_chunk_class.cpp	/^SrcCodeChunk::SrcCodeChunk(const string& s_filename,$/;"	kind:f	class:frost_hdl::SrcCodeChunk	signature:(const string & s_filename,const string & s_text,size_t s_src_line,size_t s_src_pos_in_line)
frost_hdl::SrcCodeChunk::SrcCodeChunk	src_code_chunk_class.hpp	/^	SrcCodeChunk();$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:()
frost_hdl::SrcCodeChunk::SrcCodeChunk	src_code_chunk_class.hpp	/^	explicit SrcCodeChunk(const string& s_filename,$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:(const string & s_filename,const string & s_text,size_t s_src_line,size_t s_src_pos_in_line)
frost_hdl::SrcCodeChunk::_filename	src_code_chunk_class.hpp	/^	string _filename;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:private
frost_hdl::SrcCodeChunk::_src_line	src_code_chunk_class.hpp	/^	size_t _src_line = 0, _src_pos_in_line = 0;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:size_t	access:private
frost_hdl::SrcCodeChunk::_src_pos_in_line	src_code_chunk_class.hpp	/^	size_t _src_line = 0, _src_pos_in_line = 0;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:size_t	access:private
frost_hdl::SrcCodeChunk::_text	src_code_chunk_class.hpp	/^	string _text;$/;"	kind:m	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:private
frost_hdl::SrcCodeChunk::convert_to_errwarn_string	src_code_chunk_class.cpp	/^string SrcCodeChunk::convert_to_errwarn_string() const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:string	signature:() const
frost_hdl::SrcCodeChunk::convert_to_errwarn_string	src_code_chunk_class.hpp	/^	string convert_to_errwarn_string() const;$/;"	kind:p	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:public	signature:() const
frost_hdl::SrcCodeChunk::convert_to_pos_string	src_code_chunk_class.cpp	/^string SrcCodeChunk::convert_to_pos_string() const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:string	signature:() const
frost_hdl::SrcCodeChunk::convert_to_pos_string	src_code_chunk_class.hpp	/^	string convert_to_pos_string() const;$/;"	kind:p	class:frost_hdl::SrcCodeChunk	typeref:typename:string	access:public	signature:() const
frost_hdl::SrcCodeChunk::err	src_code_chunk_class.hpp	/^	inline void err(const string& msg, int status=1) const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:void	access:public	signature:(const string & msg,int status=1) const
frost_hdl::SrcCodeChunk::syntax_error	src_code_chunk_class.hpp	/^	inline void syntax_error(const string& msg, int status=1) const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:void	access:public	signature:(const string & msg,int status=1) const
frost_hdl::SrcCodeChunk::warn	src_code_chunk_class.hpp	/^	inline void warn(const string& msg) const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:void	access:public	signature:(const string & msg) const
frost_hdl::SrcCodeChunk::~SrcCodeChunk	src_code_chunk_class.cpp	/^SrcCodeChunk::~SrcCodeChunk()$/;"	kind:f	class:frost_hdl::SrcCodeChunk	signature:()
frost_hdl::SrcCodeChunk::~SrcCodeChunk	src_code_chunk_class.hpp	/^	virtual ~SrcCodeChunk();$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:()
frost_hdl::Tok	tok_enum.hpp	/^enum class Tok$/;"	kind:g	namespace:frost_hdl
frost_hdl::ast	ast_node_classes.cpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl	file:
frost_hdl::ast	ast_node_classes.hpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl
frost_hdl::ast	ast_visitor_class.cpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl	file:
frost_hdl::ast	ast_visitor_class.hpp	/^namespace ast$/;"	kind:n	namespace:frost_hdl
frost_hdl::ast::NodeBase	ast_node_classes.hpp	/^class NodeBase$/;"	kind:c	namespace:frost_hdl::ast
frost_hdl::ast::NodeBase::Child	ast_node_classes.hpp	/^	using Child = unique_ptr<NodeBase>;$/;"	kind:t	class:frost_hdl::ast::NodeBase	typeref:typename:unique_ptr<NodeBase>	access:public
frost_hdl::ast::NodeBase::GEN_POST_CONSTRUCTOR	ast_node_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeBase);$/;"	kind:p	class:frost_hdl::ast::NodeBase	access:public	signature:(NodeBase)
frost_hdl::ast::NodeBase::NodeBase	ast_node_classes.hpp	/^	inline NodeBase()$/;"	kind:f	class:frost_hdl::ast::NodeBase	access:public	signature:()
frost_hdl::ast::NodeBase::NodeBase	ast_node_classes.hpp	/^	inline NodeBase(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:frost_hdl::ast::NodeBase	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
frost_hdl::ast::NodeBase::_src_code_chunk	ast_node_classes.hpp	/^	SrcCodeChunk _src_code_chunk;$/;"	kind:m	class:frost_hdl::ast::NodeBase	typeref:typename:SrcCodeChunk	access:protected
frost_hdl::ast::NodeBase::append	ast_node_classes.hpp	/^	virtual inline void append(Child&& child)$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:void	access:public	signature:(Child && child)
frost_hdl::ast::NodeBase::dbg_to_string	ast_node_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:string	access:public	signature:() const
frost_hdl::ast::NodeBase::has	ast_node_classes.hpp	/^	static inline bool has(const Child& child)$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:bool	access:public	signature:(const Child & child)
frost_hdl::ast::NodeBase::name	ast_node_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:string	access:public	signature:() const
frost_hdl::ast::NodeBase::type	ast_node_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:Type	access:public	signature:() const
frost_hdl::ast::NodeList	ast_node_classes.hpp	/^class NodeList : public NodeBase$/;"	kind:c	namespace:frost_hdl::ast	inherits:NodeBase
frost_hdl::ast::NodeList::GEN_POST_CONSTRUCTOR	ast_node_classes.hpp	/^	GEN_POST_CONSTRUCTOR(NodeList);$/;"	kind:p	class:frost_hdl::ast::NodeList	access:public	signature:(NodeList)
frost_hdl::ast::NodeList::NodeList	ast_node_classes.hpp	/^	inline NodeList(const SrcCodeChunk& s_src_code_chunk)$/;"	kind:f	class:frost_hdl::ast::NodeList	access:public	signature:(const SrcCodeChunk & s_src_code_chunk)
frost_hdl::ast::NodeList::append	ast_node_classes.hpp	/^	virtual inline void append(Child&& to_append)$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:void	access:public	signature:(Child && to_append)
frost_hdl::ast::NodeList::dbg_to_string	ast_node_classes.hpp	/^	virtual string dbg_to_string() const$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:string	access:public	signature:() const
frost_hdl::ast::NodeList::list	ast_node_classes.hpp	/^	std::vector<Child> list;$/;"	kind:m	class:frost_hdl::ast::NodeList	typeref:typename:std::vector<Child>	access:public
frost_hdl::ast::NodeList::name	ast_node_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:string	access:public	signature:() const
frost_hdl::ast::NodeList::type	ast_node_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:Type	access:public	signature:() const
frost_hdl::ast::Visitor	ast_visitor_class.hpp	/^class Visitor$/;"	kind:c	namespace:frost_hdl::ast
frost_hdl::ast::Visitor::Visitor	ast_visitor_class.cpp	/^Visitor::Visitor()$/;"	kind:f	class:frost_hdl::ast::Visitor	signature:()
frost_hdl::ast::Visitor::Visitor	ast_visitor_class.hpp	/^	Visitor();$/;"	kind:p	class:frost_hdl::ast::Visitor	access:public	signature:()
frost_hdl::ast::Visitor::visitBase	ast_visitor_class.hpp	/^	virtual void visitBase(NodeBase* node) = 0;$/;"	kind:p	class:frost_hdl::ast::Visitor	typeref:typename:void	access:public	signature:(NodeBase * node)
frost_hdl::ast::Visitor::visitList	ast_visitor_class.hpp	/^	virtual void visitList(NodeList* node) = 0;$/;"	kind:p	class:frost_hdl::ast::Visitor	typeref:typename:void	access:public	signature:(NodeList * node)
frost_hdl::ast::Visitor::~Visitor	ast_visitor_class.cpp	/^Visitor::~Visitor()$/;"	kind:f	class:frost_hdl::ast::Visitor	signature:()
frost_hdl::ast::Visitor::~Visitor	ast_visitor_class.hpp	/^	virtual ~Visitor();$/;"	kind:p	class:frost_hdl::ast::Visitor	access:public	signature:()
frost_hdl::construct_str_from_pointer	misc_types.hpp	/^inline string construct_str_from_pointer(Type* pointer)$/;"	kind:f	namespace:frost_hdl	typeref:typename:string	signature:(Type * pointer)
frost_hdl::dblpretabbed	misc_utility_funcs.hpp	/^inline string dblpretabbed(const FirstArgType& first_arg,$/;"	kind:f	namespace:frost_hdl	typeref:typename:string	signature:(const FirstArgType & first_arg,RemArgTypes &&...rem_args)
frost_hdl::kw_dollar_tok_ident_map	tok_enum.cpp	/^const std::map<Tok, string> kw_dollar_tok_ident_map$/;"	kind:v	namespace:frost_hdl	typeref:typename:const std::map<Tok,string>
frost_hdl::kw_tok_ident_map	tok_enum.cpp	/^const std::map<Tok, string> kw_tok_ident_map$/;"	kind:v	namespace:frost_hdl	typeref:typename:const std::map<Tok,string>
frost_hdl::pretabbed	misc_utility_funcs.hpp	/^inline string pretabbed(const FirstArgType& first_arg,$/;"	kind:f	namespace:frost_hdl	typeref:typename:string	signature:(const FirstArgType & first_arg,RemArgTypes &&...rem_args)
frost_hdl::tok_ident_map	tok_enum.cpp	/^const std::map<Tok, string> tok_ident_map$/;"	kind:v	namespace:frost_hdl	typeref:typename:const std::map<Tok,string>
func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, FirstArgType&& first_val, $/;"	kind:f	class:liborangepower::misc_output::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,FirstArgType && first_val,RemArgTypes &&...rem_args)
fv_inst	liborangepower_src/stateful_parser_base_class.hpp	/^		inline OneInst fv_inst() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:OneInst	access:public	signature:() const
fv_parse_func_str	liborangepower_src/stateful_parser_base_class.hpp	/^		inline std::string fv_parse_func_str() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::string	access:public	signature:() const
get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_istream_as_str	liborangepower_src/misc_input_classes.hpp	/^inline auto get_istream_as_str(std::istream&& to_get_from)$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:auto	signature:(std::istream && to_get_from)
get_istream_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_istream_as_str(std::istream& to_get_from)$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:(std::istream & to_get_from)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_json_value_type_as_str	liborangepower_src/json_stuff/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_stdin_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_as_str()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
ha	pt_visitor_class.cpp	/^#define ha /;"	kind:d	file:
has	ast_node_classes.hpp	/^	static inline bool has(const Child& child)$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:bool	access:public	signature:(const Child & child)
has_changed	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:bool	access:public	signature:() const
has_changed	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
head	liborangepower_src/linked_list_classes.hpp	/^	inline Node* head()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:Node *	access:public	signature:()
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
holds_big_num	expr_value_class.hpp	/^	inline bool holds_big_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
holds_expr_num	expr_value_class.hpp	/^	inline bool holds_expr_num() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
holds_num_vec	expr_value_class.hpp	/^	inline bool holds_num_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
holds_val_vec	expr_value_class.hpp	/^	inline bool holds_val_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:bool	access:public	signature:() const
in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(FirstArgType range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(FirstArgType range_start_inclusive,SecondArgType range_end_exclusive,ThirdArgType to_check)
in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(FirstArgType range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(FirstArgType range_start_inclusive,SecondArgType range_end_inclusive,ThirdArgType to_check)
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s_arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s_arr)
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s_arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s_arr,const Vec2<size_t> & s_size_2d)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
insert_after	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_after(Node* where, Type&& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,Type && to_insert)
insert_after	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_after(Node* where, const Type& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,const Type & to_insert)
insert_before	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_before(Node* where, Type&& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,Type && to_insert)
insert_before	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_before(Node* where, const Type& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,const Type & to_insert)
integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
is_negative	expr_num_class.hpp	/^	inline bool is_negative() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:() const
json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
json	liborangepower_src/json_stuff/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
json_err	liborangepower_src/json_stuff/json_stuff.cpp	/^static void json_err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	file:	signature:(arg_types &&...args)
just_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	inline bool just_parse() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public	signature:() const
kw_dollar_tok_ident_map	tok_enum.cpp	/^const std::map<Tok, string> kw_dollar_tok_ident_map$/;"	kind:v	namespace:frost_hdl	typeref:typename:const std::map<Tok,string>
kw_tok_ident_map	tok_enum.cpp	/^const std::map<Tok, string> kw_tok_ident_map$/;"	kind:v	namespace:frost_hdl	typeref:typename:const std::map<Tok,string>
lang	liborangepower_src/lexer_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
lang	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
lang	liborangepower_src/parse_tree_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
lang	liborangepower_src/stateful_parser_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
liborangepower	liborangepower_src/array_2d_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/array_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/gmp_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/gmp_stuff/gmp_stuff.cpp	/^namespace liborangepower$/;"	kind:n	file:
liborangepower	liborangepower_src/json_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/json_stuff/json_stuff.cpp	/^namespace liborangepower$/;"	kind:n	file:
liborangepower	liborangepower_src/lexer_base_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/linked_list_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/memwhatever_wrappers.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_input_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_output_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_types.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_utility_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/mpi_handler_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/parse_tree_base_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/prev_curr_pair_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/quoted_str_converter_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/range_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/stateful_parser_base_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/string_conversion_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/time_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/vec2_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower::bignum	liborangepower_src/gmp_stuff.hpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower
liborangepower::bignum	liborangepower_src/gmp_stuff/gmp_stuff.cpp	/^namespace bignum$/;"	kind:n	namespace:liborangepower	file:
liborangepower::bignum::BigNum	liborangepower_src/gmp_stuff.hpp	/^typedef mpz_class BigNum;$/;"	kind:t	namespace:liborangepower::bignum	typeref:typename:mpz_class
liborangepower::bignum::convert_bignum_to_str	liborangepower_src/gmp_stuff.hpp	/^inline std::string convert_bignum_to_str(const BigNum& in_bignum)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:std::string	signature:(const BigNum & in_bignum)
liborangepower::bignum::str_is_base_10_sint_bignum	liborangepower_src/gmp_stuff.hpp	/^bool str_is_base_10_sint_bignum(const std::string& str, BigNum& ret);$/;"	kind:p	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
liborangepower::bignum::str_is_base_10_sint_bignum	liborangepower_src/gmp_stuff/gmp_stuff.cpp	/^bool str_is_base_10_sint_bignum(const std::string& str, BigNum& ret)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
liborangepower::bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
liborangepower::bitwise::bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(const Type& to_check, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(const Type & to_check,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::bprange_is_all	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr bool bprange_is_all(size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:bool	signature:(size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
liborangepower::bitwise::clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
liborangepower::bitwise::clear_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits_with_range(Type& to_clear, size_t bit_pos_range_hi,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::count_leading_zeros	liborangepower_src/misc_bitwise_funcs.hpp	/^size_t count_leading_zeros(Type x)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(Type x)
liborangepower::bitwise::get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
liborangepower::bitwise::get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
liborangepower::bitwise::set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits_with_range(Type& to_set, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type()$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:()
liborangepower::bitwise::width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type(const Type& to_check)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(const Type & to_check)
liborangepower::containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/linked_list_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/prev_curr_pair_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s_arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s_arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::_arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::Array2dHelper::_size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t _size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::Array2dHelper::_size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> _size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
liborangepower::containers::Array2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::Array2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s_arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s_arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::Array2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s_arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s_arr)
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::_arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayCsz2dHelper::_size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t _size = _size_2d.x * _size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCsz2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::ArrayCsz2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s_arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s_arr)
liborangepower::containers::ArrayCsz2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : _arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::_arr	liborangepower_src/array_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
liborangepower::containers::ArrayCszHelper::_size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t _size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCszHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayCszHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::_arr	liborangepower_src/array_helper_classes.hpp	/^	Type* _arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayHelper::_size	liborangepower_src/array_helper_classes.hpp	/^	size_t _size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::CircLinkedList	liborangepower_src/linked_list_classes.hpp	/^class CircLinkedList$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::CircLinkedList::CircLinkedList	liborangepower_src/linked_list_classes.hpp	/^	inline CircLinkedList()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	access:public	signature:()
liborangepower::containers::CircLinkedList::Node	liborangepower_src/linked_list_classes.hpp	/^	class Node final$/;"	kind:c	class:liborangepower::containers::CircLinkedList	access:public
liborangepower::containers::CircLinkedList::Node::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/linked_list_classes.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(Node);$/;"	kind:p	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:(Node)
liborangepower::containers::CircLinkedList::Node::Node	liborangepower_src/linked_list_classes.hpp	/^		Node() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:()
liborangepower::containers::CircLinkedList::Node::Node	liborangepower_src/linked_list_classes.hpp	/^		inline Node(Type&& s_data)$/;"	kind:f	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:(Type && s_data)
liborangepower::containers::CircLinkedList::Node::Node	liborangepower_src/linked_list_classes.hpp	/^		inline Node(const Type& s_data)$/;"	kind:f	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:(const Type & s_data)
liborangepower::containers::CircLinkedList::Node::_next	liborangepower_src/linked_list_classes.hpp	/^		Node * _next = nullptr, * _prev = nullptr;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::Node	typeref:typename:Node *	access:private
liborangepower::containers::CircLinkedList::Node::_prev	liborangepower_src/linked_list_classes.hpp	/^		Node * _next = nullptr, * _prev = nullptr;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::Node	typeref:typename:Node **	access:private
liborangepower::containers::CircLinkedList::Node::data	liborangepower_src/linked_list_classes.hpp	/^		Type data;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::Node	typeref:typename:Type	access:public
liborangepower::containers::CircLinkedList::Node::~Node	liborangepower_src/linked_list_classes.hpp	/^		~Node() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:()
liborangepower::containers::CircLinkedList::NodeIterator	liborangepower_src/linked_list_classes.hpp	/^	class NodeIterator final$/;"	kind:c	class:liborangepower::containers::CircLinkedList	access:public
liborangepower::containers::CircLinkedList::NodeIterator::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/linked_list_classes.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(NodeIterator);$/;"	kind:p	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:(NodeIterator)
liborangepower::containers::CircLinkedList::NodeIterator::NodeIterator	liborangepower_src/linked_list_classes.hpp	/^		NodeIterator() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:()
liborangepower::containers::CircLinkedList::NodeIterator::NodeIterator	liborangepower_src/linked_list_classes.hpp	/^		inline NodeIterator(Node* s_node)$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:(Node * s_node)
liborangepower::containers::CircLinkedList::NodeIterator::_node	liborangepower_src/linked_list_classes.hpp	/^		Node* _node = nullptr;$/;"	kind:m	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:Node *	access:private
liborangepower::containers::CircLinkedList::NodeIterator::operator !=	liborangepower_src/linked_list_classes.hpp	/^		inline bool operator != (const NodeIterator& other) const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:bool	access:public	signature:(const NodeIterator & other) const
liborangepower::containers::CircLinkedList::NodeIterator::operator *	liborangepower_src/linked_list_classes.hpp	/^		inline Node& operator * () const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:Node &	access:public	signature:() const
liborangepower::containers::CircLinkedList::NodeIterator::operator ++	liborangepower_src/linked_list_classes.hpp	/^		inline NodeIterator& operator ++ ()$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:NodeIterator &	access:public	signature:()
liborangepower::containers::CircLinkedList::NodeIterator::operator --	liborangepower_src/linked_list_classes.hpp	/^		inline NodeIterator& operator -- ()$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:NodeIterator &	access:public	signature:()
liborangepower::containers::CircLinkedList::NodeIterator::operator ->	liborangepower_src/linked_list_classes.hpp	/^		inline Node* operator -> () const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:Node *	access:public	signature:() const
liborangepower::containers::CircLinkedList::NodeIterator::operator ==	liborangepower_src/linked_list_classes.hpp	/^		inline bool operator == (const NodeIterator& other) const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:bool	access:public	signature:(const NodeIterator & other) const
liborangepower::containers::CircLinkedList::NodeIterator::operator Node*	liborangepower_src/linked_list_classes.hpp	/^		inline operator Node* () const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:() const
liborangepower::containers::CircLinkedList::NodeIterator::~NodeIterator	liborangepower_src/linked_list_classes.hpp	/^		~NodeIterator() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:()
liborangepower::containers::CircLinkedList::_head	liborangepower_src/linked_list_classes.hpp	/^	Node _head;$/;"	kind:m	class:liborangepower::containers::CircLinkedList	typeref:typename:Node	access:private
liborangepower::containers::CircLinkedList::_inner_insert_after	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator _inner_insert_after(Node* where, Node* what)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:private	signature:(Node * where,Node * what)
liborangepower::containers::CircLinkedList::_inner_insert_before	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator _inner_insert_before(Node* where, Node* what)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:private	signature:(Node * where,Node * what)
liborangepower::containers::CircLinkedList::back	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator back()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
liborangepower::containers::CircLinkedList::begin	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator begin()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
liborangepower::containers::CircLinkedList::cbegin	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator cbegin() const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:() const
liborangepower::containers::CircLinkedList::cend	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator cend() const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:() const
liborangepower::containers::CircLinkedList::contains	liborangepower_src/linked_list_classes.hpp	/^	bool contains(Node* where) const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:bool	access:public	signature:(Node * where) const
liborangepower::containers::CircLinkedList::empty	liborangepower_src/linked_list_classes.hpp	/^	inline bool empty() const$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:bool	access:public	signature:() const
liborangepower::containers::CircLinkedList::end	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator end()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
liborangepower::containers::CircLinkedList::front	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator front()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:()
liborangepower::containers::CircLinkedList::head	liborangepower_src/linked_list_classes.hpp	/^	inline Node* head()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:Node *	access:public	signature:()
liborangepower::containers::CircLinkedList::insert_after	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_after(Node* where, Type&& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,Type && to_insert)
liborangepower::containers::CircLinkedList::insert_after	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_after(Node* where, const Type& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,const Type & to_insert)
liborangepower::containers::CircLinkedList::insert_before	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_before(Node* where, Type&& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,Type && to_insert)
liborangepower::containers::CircLinkedList::insert_before	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator insert_before(Node* where, const Type& to_insert)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Node * where,const Type & to_insert)
liborangepower::containers::CircLinkedList::pop_back	liborangepower_src/linked_list_classes.hpp	/^	inline void pop_back()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:()
liborangepower::containers::CircLinkedList::pop_front	liborangepower_src/linked_list_classes.hpp	/^	inline void pop_front()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:()
liborangepower::containers::CircLinkedList::push_back	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_back(Type&& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Type && to_push)
liborangepower::containers::CircLinkedList::push_back	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_back(const Type& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(const Type & to_push)
liborangepower::containers::CircLinkedList::push_front	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_front(Type&& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Type && to_push)
liborangepower::containers::CircLinkedList::push_front	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_front(const Type& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(const Type & to_push)
liborangepower::containers::CircLinkedList::remove	liborangepower_src/linked_list_classes.hpp	/^	inline void remove(Node* where)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:(Node * where)
liborangepower::containers::CircLinkedList::remove_after	liborangepower_src/linked_list_classes.hpp	/^	inline void remove_after(Node* where)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:(Node * where)
liborangepower::containers::CircLinkedList::remove_before	liborangepower_src/linked_list_classes.hpp	/^	inline void remove_before(Node* where)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:(Node * where)
liborangepower::containers::CircLinkedList::~CircLinkedList	liborangepower_src/linked_list_classes.hpp	/^	virtual inline ~CircLinkedList()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:CircLinkedList	access:public	signature:()
liborangepower::containers::MoveOnlyPrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^class MoveOnlyPrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::MoveOnlyPrevCurrPair::GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/prev_curr_pair_classes.hpp	/^	GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(MoveOnlyPrevCurrPair);$/;"	kind:p	class:liborangepower::containers::MoveOnlyPrevCurrPair	access:public	signature:(MoveOnlyPrevCurrPair)
liborangepower::containers::MoveOnlyPrevCurrPair::MoveOnlyPrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline MoveOnlyPrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::MoveOnlyPrevCurrPair	access:public	signature:()
liborangepower::containers::MoveOnlyPrevCurrPair::_curr	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:Type	access:protected
liborangepower::containers::MoveOnlyPrevCurrPair::_prev	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:Type	access:protected
liborangepower::containers::MoveOnlyPrevCurrPair::back_up	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:void	access:public	signature:()
liborangepower::containers::MoveOnlyPrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up_and_update(Type&& n_curr)$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:void	access:public	signature:(Type && n_curr)
liborangepower::containers::MoveOnlyPrevCurrPair::has_changed	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:bool	access:public	signature:() const
liborangepower::containers::MoveOnlyPrevCurrPair::operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline Type& operator () ()$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:Type &	access:public	signature:()
liborangepower::containers::MoveOnlyPrevCurrPair::operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline const Type& operator () () const$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:const Type &	access:public	signature:() const
liborangepower::containers::MoveOnlyPrevCurrPair::~MoveOnlyPrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	virtual ~MoveOnlyPrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::MoveOnlyPrevCurrPair	access:public	signature:()
liborangepower::containers::PrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::PrevCurrPair::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/prev_curr_pair_classes.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(PrevCurrPair);$/;"	kind:p	class:liborangepower::containers::PrevCurrPair	access:public	signature:(PrevCurrPair)
liborangepower::containers::PrevCurrPair::PrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline PrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::PrevCurrPair	access:public	signature:()
liborangepower::containers::PrevCurrPair::_curr	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:Type	access:protected
liborangepower::containers::PrevCurrPair::_prev	liborangepower_src/prev_curr_pair_classes.hpp	/^	Type _prev, _curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:Type	access:protected
liborangepower::containers::PrevCurrPair::back_up	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up_and_update(Type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(Type && n_curr)
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline void back_up_and_update(const Type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const Type & n_curr)
liborangepower::containers::PrevCurrPair::has_changed	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
liborangepower::containers::PrevCurrPair::operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline Type& operator () ()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:Type &	access:public	signature:()
liborangepower::containers::PrevCurrPair::operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline const Type& operator () () const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:const Type &	access:public	signature:() const
liborangepower::containers::PrevCurrPair::~PrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	virtual ~PrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::PrevCurrPair	access:public	signature:()
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/vec2_classes.hpp	/^	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(Vec2);$/;"	kind:p	class:liborangepower::containers::Vec2	access:public	signature:(Vec2)
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	inline Vec2() = default;$/;"	kind:p	class:liborangepower::containers::Vec2	access:public	signature:()
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	inline Vec2(const Type& s_x, const Type& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type & s_x,const Type & s_y)
liborangepower::containers::Vec2::x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::~Vec2	liborangepower_src/vec2_classes.hpp	/^	virtual ~Vec2() = default;$/;"	kind:p	class:liborangepower::containers::Vec2	access:public	signature:()
liborangepower::integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
liborangepower::integer_types::s16	liborangepower_src/misc_types.hpp	/^typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
liborangepower::integer_types::s32	liborangepower_src/misc_types.hpp	/^typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
liborangepower::integer_types::s64	liborangepower_src/misc_types.hpp	/^typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
liborangepower::integer_types::s8	liborangepower_src/misc_types.hpp	/^typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
liborangepower::integer_types::u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
liborangepower::integer_types::u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
liborangepower::integer_types::u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
liborangepower::integer_types::u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
liborangepower::integer_types::uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
liborangepower::json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
liborangepower::json	liborangepower_src/json_stuff/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::json_err	liborangepower_src/json_stuff/json_stuff.cpp	/^static void json_err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	file:	signature:(arg_types &&...args)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::lang	liborangepower_src/lexer_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
liborangepower::lang	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
liborangepower::lang	liborangepower_src/parse_tree_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
liborangepower::lang	liborangepower_src/stateful_parser_base_class.hpp	/^namespace lang$/;"	kind:n	namespace:liborangepower
liborangepower::lang::LexerBase	liborangepower_src/lexer_base_class.hpp	/^class LexerBase$/;"	kind:c	namespace:liborangepower::lang
liborangepower::lang::LexerBase::LexerBase	liborangepower_src/lexer_base_class.hpp	/^	inline LexerBase(const std::string& s_filename, std::string* s_text)$/;"	kind:f	class:liborangepower::lang::LexerBase	access:public	signature:(const std::string & s_filename,std::string * s_text)
liborangepower::lang::LexerBase::State	liborangepower_src/lexer_base_class.hpp	/^	class State$/;"	kind:c	class:liborangepower::lang::LexerBase	access:public
liborangepower::lang::LexerBase::State::State	liborangepower_src/lexer_base_class.hpp	/^		State()$/;"	kind:f	class:liborangepower::lang::LexerBase::State	access:public	signature:()
liborangepower::lang::LexerBase::State::_c	liborangepower_src/lexer_base_class.hpp	/^		int _c;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:int	access:private
liborangepower::lang::LexerBase::State::_line_num	liborangepower_src/lexer_base_class.hpp	/^		size_t _x = 0, _line_num = 1, _pos_in_line = 0;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:size_t	access:private
liborangepower::lang::LexerBase::State::_n	liborangepower_src/lexer_base_class.hpp	/^		bignum::BigNum _n;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:bignum::BigNum	access:private
liborangepower::lang::LexerBase::State::_pos_in_line	liborangepower_src/lexer_base_class.hpp	/^		size_t _x = 0, _line_num = 1, _pos_in_line = 0;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:size_t	access:private
liborangepower::lang::LexerBase::State::_s	liborangepower_src/lexer_base_class.hpp	/^		std::string _s;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:std::string	access:private
liborangepower::lang::LexerBase::State::_tok	liborangepower_src/lexer_base_class.hpp	/^		TokType _tok;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:TokType	access:private
liborangepower::lang::LexerBase::State::_x	liborangepower_src/lexer_base_class.hpp	/^		size_t _x = 0, _line_num = 1, _pos_in_line = 0;$/;"	kind:m	class:liborangepower::lang::LexerBase::State	typeref:typename:size_t	access:private
liborangepower::lang::LexerBase::State::operator !=	liborangepower_src/lexer_base_class.hpp	/^		inline bool operator != (const State& other) const$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:bool	access:public	signature:(const State & other) const
liborangepower::lang::LexerBase::State::operator <	liborangepower_src/lexer_base_class.hpp	/^		inline bool operator < (const State& other) const$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:bool	access:public	signature:(const State & other) const
liborangepower::lang::LexerBase::State::operator ==	liborangepower_src/lexer_base_class.hpp	/^		inline bool operator == (const State& other) const$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:bool	access:public	signature:(const State & other) const
liborangepower::lang::LexerBase::State::~State	liborangepower_src/lexer_base_class.hpp	/^		~State()$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:State	access:public	signature:()
liborangepower::lang::LexerBase::TokType	liborangepower_src/lexer_base_class.hpp	/^	using TokType = _TokType;$/;"	kind:t	class:liborangepower::lang::LexerBase	typeref:typename:_TokType	access:public
liborangepower::lang::LexerBase::TwoStates	liborangepower_src/lexer_base_class.hpp	/^	using TwoStates = std::pair<State, State>;$/;"	kind:t	class:liborangepower::lang::LexerBase	typeref:typename:std::pair<State,State>	access:public
liborangepower::lang::LexerBase::_eat_whitespace	liborangepower_src/lexer_base_class.hpp	/^	void _eat_whitespace()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:()
liborangepower::lang::LexerBase::_filename	liborangepower_src/lexer_base_class.hpp	/^	std::string _filename;$/;"	kind:m	class:liborangepower::lang::LexerBase	typeref:typename:std::string	access:protected
liborangepower::lang::LexerBase::_inner_next_tok	liborangepower_src/lexer_base_class.hpp	/^	virtual void _inner_next_tok() = 0;$/;"	kind:p	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:()
liborangepower::lang::LexerBase::_next_char	liborangepower_src/lexer_base_class.hpp	/^	void _next_char()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:()
liborangepower::lang::LexerBase::_next_tok	liborangepower_src/lexer_base_class.hpp	/^	void _next_tok(TokType comment_tok)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:(TokType comment_tok)
liborangepower::lang::LexerBase::_set_kw_tok	liborangepower_src/lexer_base_class.hpp	/^	inline bool _set_kw_tok$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:bool	access:protected	signature:(const std::map<TokType,std::string> & some_tok_ident_map)
liborangepower::lang::LexerBase::_set_tok	liborangepower_src/lexer_base_class.hpp	/^	void _set_tok(TokType n_tok, bool perf_next_char)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:protected	signature:(TokType n_tok,bool perf_next_char)
liborangepower::lang::LexerBase::_text	liborangepower_src/lexer_base_class.hpp	/^	std::string* _text = nullptr;$/;"	kind:m	class:liborangepower::lang::LexerBase	typeref:typename:std::string *	access:protected
liborangepower::lang::LexerBase::_two_states	liborangepower_src/lexer_base_class.hpp	/^	TwoStates _two_states;$/;"	kind:m	class:liborangepower::lang::LexerBase	typeref:typename:TwoStates	access:protected
liborangepower::lang::LexerBase::c	liborangepower_src/lexer_base_class.hpp	/^	inline auto c() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
liborangepower::lang::LexerBase::line_num	liborangepower_src/lexer_base_class.hpp	/^	inline auto line_num() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
liborangepower::lang::LexerBase::n	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& n() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
liborangepower::lang::LexerBase::pos_in_line	liborangepower_src/lexer_base_class.hpp	/^	inline auto pos_in_line() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
liborangepower::lang::LexerBase::prev_line_num	liborangepower_src/lexer_base_class.hpp	/^	inline auto prev_line_num() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
liborangepower::lang::LexerBase::prev_pos_in_line	liborangepower_src/lexer_base_class.hpp	/^	inline auto prev_pos_in_line() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
liborangepower::lang::LexerBase::prev_state	liborangepower_src/lexer_base_class.hpp	/^	inline auto& prev_state()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto &	access:public	signature:()
liborangepower::lang::LexerBase::prev_state	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& prev_state() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
liborangepower::lang::LexerBase::s	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& s() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
liborangepower::lang::LexerBase::set_prev_state	liborangepower_src/lexer_base_class.hpp	/^	inline void set_prev_state(const State& n_prev_state)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:public	signature:(const State & n_prev_state)
liborangepower::lang::LexerBase::set_state	liborangepower_src/lexer_base_class.hpp	/^	inline void set_state(const State& n_state)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:public	signature:(const State & n_state)
liborangepower::lang::LexerBase::src_code_chunk	liborangepower_src/lexer_base_class.hpp	/^	inline Type src_code_chunk(const TwoStates* other_two_states=nullptr)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:Type	access:public	signature:(const TwoStates * other_two_states=nullptr) const
liborangepower::lang::LexerBase::state	liborangepower_src/lexer_base_class.hpp	/^	inline auto& state()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto &	access:public	signature:()
liborangepower::lang::LexerBase::state	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& state() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
liborangepower::lang::LexerBase::tok	liborangepower_src/lexer_base_class.hpp	/^	inline auto tok() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
liborangepower::lang::LexerBase::x	liborangepower_src/lexer_base_class.hpp	/^	inline auto x() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
liborangepower::lang::LexerBase::~LexerBase	liborangepower_src/lexer_base_class.hpp	/^	virtual ~LexerBase() = default;$/;"	kind:p	class:liborangepower::lang::LexerBase	typeref:typename:LexerBase	access:public	signature:()
liborangepower::lang::OptAsFuncArgParserBase	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^class OptAsFuncArgParserBase$/;"	kind:c	namespace:liborangepower::lang
liborangepower::lang::OptAsFuncArgParserBase::Exec	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		Exec,$/;"	kind:e	enum:liborangepower::lang::OptAsFuncArgParserBase::Opt	access:public
liborangepower::lang::OptAsFuncArgParserBase::GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(OptAsFuncArgParserBase);$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase	access:public	signature:(OptAsFuncArgParserBase)
liborangepower::lang::OptAsFuncArgParserBase::JustParse	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		JustParse,$/;"	kind:e	enum:liborangepower::lang::OptAsFuncArgParserBase::Opt	access:public
liborangepower::lang::OptAsFuncArgParserBase::Opt	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	enum class Opt$/;"	kind:g	class:liborangepower::lang::OptAsFuncArgParserBase	access:public
liborangepower::lang::OptAsFuncArgParserBase::OptAsFuncArgParserBase	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	inline OptAsFuncArgParserBase(const std::string& s_filename,$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase	access:public	signature:(const std::string & s_filename,std::string * s_text)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	class ParseRet final$/;"	kind:c	class:liborangepower::lang::OptAsFuncArgParserBase	access:public
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet() = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:()
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet(ParseRet&& to_move) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:(ParseRet && to_move)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet(const ParseRet& to_copy) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:(const ParseRet & to_copy)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::_lex_two_states_vec	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		vector<TwoStates> _lex_two_states_vec;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:vector<TwoStates>	access:private
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::_tok_set	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		set<Tok> _tok_set;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:set<Tok>	access:private
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::_valid	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		bool _valid = true;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:bool	access:private
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::append_lex_two_states	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_lex_two_states(const TwoStates& to_append)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(const TwoStates & to_append)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::append_parse_ret	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_parse_ret(const ParseRet& to_append)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(const ParseRet & to_append)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::append_tok	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_tok(Tok tok)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(Tok tok)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::append_tok_set	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline void append_tok_set(const set<Tok>& to_append_set)$/;"	kind:f	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:void	access:public	signature:(const set<Tok> & to_append_set)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::operator =	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet& operator = (ParseRet&& to_move) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:ParseRet &	access:public	signature:(ParseRet && to_move)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::operator =	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet& operator = (const ParseRet& to_copy) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:ParseRet &	access:public	signature:(const ParseRet & to_copy)
liborangepower::lang::OptAsFuncArgParserBase::ParseRet::~ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ~ParseRet() = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:()
liborangepower::lang::OptAsFuncArgParserBase::TokType	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	using TokType = typename LexerType::TokType;$/;"	kind:t	class:liborangepower::lang::OptAsFuncArgParserBase	typeref:typename:LexerType::TokType	access:public
liborangepower::lang::OptAsFuncArgParserBase::TwoStates	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	using TwoStates = typename LexerType::TwoStates;$/;"	kind:t	class:liborangepower::lang::OptAsFuncArgParserBase	typeref:typename:LexerType::TwoStates	access:public
liborangepower::lang::OptAsFuncArgParserBase::_lexer	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	LexerType _lexer;$/;"	kind:m	class:liborangepower::lang::OptAsFuncArgParserBase	typeref:typename:LexerType	access:protected
liborangepower::lang::OptAsFuncArgParserBase::~OptAsFuncArgParserBase	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	virtual inline ~OptAsFuncArgParserBase() = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase	access:public	signature:()
liborangepower::lang::ParseTreeBase	liborangepower_src/parse_tree_base_class.hpp	/^class ParseTreeBase$/;"	kind:c	namespace:liborangepower::lang
liborangepower::lang::ParseTreeBase::Child	liborangepower_src/parse_tree_base_class.hpp	/^	using Child = std::variant<OneChild, ChildVec>;$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::variant<OneChild,ChildVec>	access:public
liborangepower::lang::ParseTreeBase::ChildVec	liborangepower_src/parse_tree_base_class.hpp	/^	using ChildVec = std::vector<OneChild>;$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::vector<OneChild>	access:public
liborangepower::lang::ParseTreeBase::DataElem	liborangepower_src/parse_tree_base_class.hpp	/^	using DataElem = std::variant<bool, std::string, bignum::BigNum,$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::variant<bool,std::string,bignum::BigNum,TokType>	access:public
liborangepower::lang::ParseTreeBase::GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/parse_tree_base_class.hpp	/^	GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(ParseTreeBase);$/;"	kind:p	class:liborangepower::lang::ParseTreeBase	access:public	signature:(ParseTreeBase)
liborangepower::lang::ParseTreeBase::OneChild	liborangepower_src/parse_tree_base_class.hpp	/^	using OneChild = std::unique_ptr<ParseTreeBase>;$/;"	kind:t	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::unique_ptr<ParseTreeBase>	access:public
liborangepower::lang::ParseTreeBase::ParseTreeBase	liborangepower_src/parse_tree_base_class.hpp	/^	inline ParseTreeBase(const SrcCodeChunkType& s_src_code_chunk)$/;"	kind:f	class:liborangepower::lang::ParseTreeBase	access:public	signature:(const SrcCodeChunkType & s_src_code_chunk)
liborangepower::lang::ParseTreeBase::_children	liborangepower_src/parse_tree_base_class.hpp	/^	std::map<std::string, Child> _children;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::map<std::string,Child>	access:private
liborangepower::lang::ParseTreeBase::_data	liborangepower_src/parse_tree_base_class.hpp	/^	std::map<std::string, DataElem> _data;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::map<std::string,DataElem>	access:private
liborangepower::lang::ParseTreeBase::_ident	liborangepower_src/parse_tree_base_class.hpp	/^	std::string _ident;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:std::string	access:private
liborangepower::lang::ParseTreeBase::_src_code_chunk	liborangepower_src/parse_tree_base_class.hpp	/^	SrcCodeChunkType _src_code_chunk;$/;"	kind:m	class:liborangepower::lang::ParseTreeBase	typeref:typename:SrcCodeChunkType	access:private
liborangepower::lang::ParseTreeBase::~ParseTreeBase	liborangepower_src/parse_tree_base_class.hpp	/^	virtual inline ~ParseTreeBase() = default;$/;"	kind:p	class:liborangepower::lang::ParseTreeBase	access:public	signature:()
liborangepower::lang::StatefulParserBase	liborangepower_src/stateful_parser_base_class.hpp	/^class StatefulParserBase$/;"	kind:c	namespace:liborangepower::lang
liborangepower::lang::StatefulParserBase::LexStateSets	liborangepower_src/stateful_parser_base_class.hpp	/^	class LexStateSets final$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
liborangepower::lang::StatefulParserBase::LexStateSets::LexStateSets	liborangepower_src/stateful_parser_base_class.hpp	/^		LexStateSets()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	access:public	signature:()
liborangepower::lang::StatefulParserBase::LexStateSets::dup_set	liborangepower_src/stateful_parser_base_class.hpp	/^		std::set<LexerState> found_set, dup_set;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:std::set<LexerState>	access:public
liborangepower::lang::StatefulParserBase::LexStateSets::end	liborangepower_src/stateful_parser_base_class.hpp	/^		TokType end;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:TokType	access:public
liborangepower::lang::StatefulParserBase::LexStateSets::find_dup	liborangepower_src/stateful_parser_base_class.hpp	/^		inline LexerState find_dup(TokType tok) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public	signature:(TokType tok) const
liborangepower::lang::StatefulParserBase::LexStateSets::find_dup	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool find_dup(TokType tok, LexerState& ret) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:bool	access:public	signature:(TokType tok,LexerState & ret) const
liborangepower::lang::StatefulParserBase::LexStateSets::find_found	liborangepower_src/stateful_parser_base_class.hpp	/^		inline LexerState find_found() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public	signature:() const
liborangepower::lang::StatefulParserBase::LexStateSets::find_found	liborangepower_src/stateful_parser_base_class.hpp	/^		inline LexerState find_found(TokType tok) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public	signature:(TokType tok) const
liborangepower::lang::StatefulParserBase::LexStateSets::find_found	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool find_found(TokType tok, LexerState& ret) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:bool	access:public	signature:(TokType tok,LexerState & ret) const
liborangepower::lang::StatefulParserBase::LexStateSets::first_dup	liborangepower_src/stateful_parser_base_class.hpp	/^		LexerState first_dup;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexerState	access:public
liborangepower::lang::StatefulParserBase::LexStateSets::found_set	liborangepower_src/stateful_parser_base_class.hpp	/^		std::set<LexerState> found_set, dup_set;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:std::set<LexerState>	access:public
liborangepower::lang::StatefulParserBase::LexStateSets::valid	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool valid() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:bool	access:public	signature:() const
liborangepower::lang::StatefulParserBase::LexStateSets::~LexStateSets	liborangepower_src/stateful_parser_base_class.hpp	/^		~LexStateSets()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexStateSets	access:public	signature:()
liborangepower::lang::StatefulParserBase::LexerState	liborangepower_src/stateful_parser_base_class.hpp	/^	using LexerState = typename LexerType::State;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexerType::State	access:public
liborangepower::lang::StatefulParserBase::ListParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class ListParse : public SeqParse<DerivedType>$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	inherits:SeqParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::ListParse::Base	liborangepower_src/stateful_parser_base_class.hpp	/^		using Base = SeqParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:SeqParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::ListParse::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(ListParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::ListParse	access:public	signature:(ListParse)
liborangepower::lang::StatefulParserBase::ListParse::ListParse	liborangepower_src/stateful_parser_base_class.hpp	/^		ListParse(DerivedType* s_self, Vec&& s_vec,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	access:public	signature:(DerivedType * s_self,Vec && s_vec,bool s_optional=false)
liborangepower::lang::StatefulParserBase::ListParse::ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename Base::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::ParseRet	access:public
liborangepower::lang::StatefulParserBase::ListParse::TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = typename Base::TheSeqParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::TheSeqParse	access:public
liborangepower::lang::StatefulParserBase::ListParse::TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = typename Base::TheUnitParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::TheUnitParse	access:public
liborangepower::lang::StatefulParserBase::ListParse::Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = typename Base::Vec;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:Base::Vec	access:public
liborangepower::lang::StatefulParserBase::ListParse::check	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual bool check() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:bool	access:public	signature:() const
liborangepower::lang::StatefulParserBase::ListParse::exec	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual void exec() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	typeref:typename:void	access:public	signature:() const
liborangepower::lang::StatefulParserBase::ListParse::~ListParse	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual ~ListParse()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	access:public	signature:()
liborangepower::lang::StatefulParserBase::MapSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^	using MapSeqParse = std::map<std::string, SomeSeqParseType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::map<std::string,SomeSeqParseType>	access:public
liborangepower::lang::StatefulParserBase::MultiParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class MultiParse$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
liborangepower::lang::StatefulParserBase::MultiParse::ParseFunc	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseFunc = typename TheUnitParse::ParseFunc;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheUnitParse::ParseFunc	access:public
liborangepower::lang::StatefulParserBase::MultiParse::ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename TheUnitParse::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheUnitParse::ParseRet	access:public
liborangepower::lang::StatefulParserBase::MultiParse::TheListParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheListParse = ListParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:ListParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::MultiParse::TheOrParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheOrParse = OrParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:OrParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::MultiParse::TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = SeqParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:SeqParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::MultiParse::TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = UnitParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:UnitParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::MultiParse::Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = typename TheSeqParse::Vec;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheSeqParse::Vec	access:public
liborangepower::lang::StatefulParserBase::MultiParse::_append_msp	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline void _append_msp$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:void	access:public	signature:(SomeMapSeqParseType & map_seq_parse,const std::string & first_key,FirstArgType && first_seq,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_inner_seq_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline void _inner_seq_parse(Vec& ret,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:void	access:public	signature:(Vec & ret,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_opt_list_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheListParse _opt_list_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheListParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_opt_or_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheOrParse _opt_or_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheOrParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_opt_seq_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheSeqParse _opt_seq_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheSeqParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_req_list_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheListParse _req_list_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheListParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_req_or_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheOrParse _req_or_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheOrParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_req_seq_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheSeqParse _req_seq_parse(DerivedType* s_self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheSeqParse	access:public	signature:(DerivedType * s_self,const FirstArgType & first_arg,RemArgTypes &&...rem_args)
liborangepower::lang::StatefulParserBase::MultiParse::_unit_parse	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline TheUnitParse _unit_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::MultiParse	typeref:typename:TheUnitParse	access:public	signature:(DerivedType * self,const std::string & s_parse_func_str,ParseFunc s_parse_func,bool s_optional)
liborangepower::lang::StatefulParserBase::OrParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class OrParse : public SeqParse<DerivedType>$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	inherits:SeqParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::OrParse::Base	liborangepower_src/stateful_parser_base_class.hpp	/^		using Base = SeqParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:SeqParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::OrParse::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(OrParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::OrParse	access:public	signature:(OrParse)
liborangepower::lang::StatefulParserBase::OrParse::OrParse	liborangepower_src/stateful_parser_base_class.hpp	/^		OrParse(DerivedType* s_self, Vec&& s_vec, bool s_optional=false)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	access:public	signature:(DerivedType * s_self,Vec && s_vec,bool s_optional=false)
liborangepower::lang::StatefulParserBase::OrParse::ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename Base::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::ParseRet	access:public
liborangepower::lang::StatefulParserBase::OrParse::TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = typename Base::TheSeqParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::TheSeqParse	access:public
liborangepower::lang::StatefulParserBase::OrParse::TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = typename Base::TheUnitParse;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::TheUnitParse	access:public
liborangepower::lang::StatefulParserBase::OrParse::Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = typename Base::Vec;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:Base::Vec	access:public
liborangepower::lang::StatefulParserBase::OrParse::check	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual bool check() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:bool	access:public	signature:() const
liborangepower::lang::StatefulParserBase::OrParse::exec	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual void exec() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	typeref:typename:void	access:public	signature:() const
liborangepower::lang::StatefulParserBase::OrParse::~OrParse	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual ~OrParse()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	access:public	signature:()
liborangepower::lang::StatefulParserBase::ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^	using ParseRet = bool;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public
liborangepower::lang::StatefulParserBase::SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class SeqParse$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
liborangepower::lang::StatefulParserBase::SeqParse::FirstValidInvalidInst	liborangepower_src/stateful_parser_base_class.hpp	/^		class FirstValidInvalidInst$/;"	kind:c	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public
liborangepower::lang::StatefulParserBase::SeqParse::FirstValidInvalidInst::one_inst	liborangepower_src/stateful_parser_base_class.hpp	/^			OneInst one_inst;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse::FirstValidInvalidInst	typeref:typename:OneInst	access:public
liborangepower::lang::StatefulParserBase::SeqParse::FirstValidInvalidInst::parse_ret	liborangepower_src/stateful_parser_base_class.hpp	/^			ParseRet parse_ret;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse::FirstValidInvalidInst	typeref:typename:ParseRet	access:public
liborangepower::lang::StatefulParserBase::SeqParse::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(SeqParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:(SeqParse)
liborangepower::lang::StatefulParserBase::SeqParse::OneInst	liborangepower_src/stateful_parser_base_class.hpp	/^		using OneInst = std::variant<bool, TheUnitParse, TheSeqParse>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::variant<bool,TheUnitParse,TheSeqParse>	access:public
liborangepower::lang::StatefulParserBase::SeqParse::ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = typename TheUnitParse::ParseRet;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:TheUnitParse::ParseRet	access:public
liborangepower::lang::StatefulParserBase::SeqParse::SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		SeqParse() = default;$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:()
liborangepower::lang::StatefulParserBase::SeqParse::SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		SeqParse(DerivedType* s_self, Vec&& s_vec, bool s_optional=false)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:(DerivedType * s_self,Vec && s_vec,bool s_optional=false)
liborangepower::lang::StatefulParserBase::SeqParse::TheSeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheSeqParse = std::shared_ptr<SeqParse<DerivedType>>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::shared_ptr<SeqParse<DerivedType>>	access:public
liborangepower::lang::StatefulParserBase::SeqParse::TheUnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		using TheUnitParse = UnitParse<DerivedType>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:UnitParse<DerivedType>	access:public
liborangepower::lang::StatefulParserBase::SeqParse::Vec	liborangepower_src/stateful_parser_base_class.hpp	/^		using Vec = std::vector<OneInst>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::vector<OneInst>	access:public
liborangepower::lang::StatefulParserBase::SeqParse::_check_one	liborangepower_src/stateful_parser_base_class.hpp	/^		bool _check_one(const OneInst& iter) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:protected	signature:(const OneInst & iter) const
liborangepower::lang::StatefulParserBase::SeqParse::_exec_one	liborangepower_src/stateful_parser_base_class.hpp	/^		void _exec_one(const OneInst& iter, bool actual_just_parse=false)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:void	access:protected	signature:(const OneInst & iter,bool actual_just_parse=false) const
liborangepower::lang::StatefulParserBase::SeqParse::_optional	liborangepower_src/stateful_parser_base_class.hpp	/^		bool _optional = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:protected
liborangepower::lang::StatefulParserBase::SeqParse::_self	liborangepower_src/stateful_parser_base_class.hpp	/^		DerivedType* _self = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:DerivedType *	access:protected
liborangepower::lang::StatefulParserBase::SeqParse::_vec	liborangepower_src/stateful_parser_base_class.hpp	/^		Vec _vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:Vec	access:protected
liborangepower::lang::StatefulParserBase::SeqParse::check	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual bool check() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:public	signature:() const
liborangepower::lang::StatefulParserBase::SeqParse::debug	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline bool debug = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:bool	access:public
liborangepower::lang::StatefulParserBase::SeqParse::debug_tok_ident_map	liborangepower_src/stateful_parser_base_class.hpp	/^		static inline const TokToStringMap* debug_tok_ident_map = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:const TokToStringMap *	access:public
liborangepower::lang::StatefulParserBase::SeqParse::exec	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual void exec() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:void	access:public	signature:() const
liborangepower::lang::StatefulParserBase::SeqParse::first_invalid_inst	liborangepower_src/stateful_parser_base_class.hpp	/^		inline FirstValidInvalidInst first_invalid_inst() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:FirstValidInvalidInst	access:public	signature:() const
liborangepower::lang::StatefulParserBase::SeqParse::fv_inst	liborangepower_src/stateful_parser_base_class.hpp	/^		inline OneInst fv_inst() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:OneInst	access:public	signature:() const
liborangepower::lang::StatefulParserBase::SeqParse::fv_parse_func_str	liborangepower_src/stateful_parser_base_class.hpp	/^		inline std::string fv_parse_func_str() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::SeqParse	typeref:typename:std::string	access:public	signature:() const
liborangepower::lang::StatefulParserBase::SeqParse::~SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual ~SeqParse() = default;$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:()
liborangepower::lang::StatefulParserBase::StatefulParserBase	liborangepower_src/stateful_parser_base_class.hpp	/^	StatefulParserBase(std::vector<std::string>&& s_filename_vec)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	access:public	signature:(std::vector<std::string> && s_filename_vec)
liborangepower::lang::StatefulParserBase::TokToStringMap	liborangepower_src/stateful_parser_base_class.hpp	/^	using TokToStringMap = std::map<TokType, std::string>;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::map<TokType,std::string>	access:public
liborangepower::lang::StatefulParserBase::TokType	liborangepower_src/stateful_parser_base_class.hpp	/^	using TokType = typename LexerType::TokType;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexerType::TokType	access:public
liborangepower::lang::StatefulParserBase::UnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^	class UnitParse final$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
liborangepower::lang::StatefulParserBase::UnitParse::GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(UnitParse);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public	signature:(UnitParse)
liborangepower::lang::StatefulParserBase::UnitParse::ParseFunc	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseFunc = bool (DerivedType::*)();$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public
liborangepower::lang::StatefulParserBase::UnitParse::ParseRet	liborangepower_src/stateful_parser_base_class.hpp	/^		using ParseRet = bool;$/;"	kind:t	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:bool	access:public
liborangepower::lang::StatefulParserBase::UnitParse::UnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		UnitParse(DerivedType* s_self, const std::string& s_parse_func_str,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public	signature:(DerivedType * s_self,const std::string & s_parse_func_str,ParseFunc s_parse_func,bool s_optional=false)
liborangepower::lang::StatefulParserBase::UnitParse::_optional	liborangepower_src/stateful_parser_base_class.hpp	/^		bool _optional = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:bool	access:private
liborangepower::lang::StatefulParserBase::UnitParse::_parse_func	liborangepower_src/stateful_parser_base_class.hpp	/^		ParseFunc _parse_func = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:ParseFunc	access:private
liborangepower::lang::StatefulParserBase::UnitParse::_parse_func_str	liborangepower_src/stateful_parser_base_class.hpp	/^		std::string _parse_func_str;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:std::string	access:private
liborangepower::lang::StatefulParserBase::UnitParse::_self	liborangepower_src/stateful_parser_base_class.hpp	/^		DerivedType* _self = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:DerivedType *	access:private
liborangepower::lang::StatefulParserBase::UnitParse::operator () 	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool operator () () const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:bool	access:public	signature:() const
liborangepower::lang::StatefulParserBase::UnitParse::set_just_test	liborangepower_src/stateful_parser_base_class.hpp	/^		inline void set_just_test(bool n_just_test) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:void	access:public	signature:(bool n_just_test) const
liborangepower::lang::StatefulParserBase::UnitParse::~UnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		~UnitParse()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public	signature:()
liborangepower::lang::StatefulParserBase::WExpect	liborangepower_src/stateful_parser_base_class.hpp	/^	class WExpect$/;"	kind:c	class:liborangepower::lang::StatefulParserBase	access:public
liborangepower::lang::StatefulParserBase::WExpect::GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN	liborangepower_src/stateful_parser_base_class.hpp	/^		GEN_MOVE_ONLY_CONSTRUCTORS_AND_ASSIGN(WExpect);$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::WExpect	access:public	signature:(WExpect)
liborangepower::lang::StatefulParserBase::WExpect::WExpect	liborangepower_src/stateful_parser_base_class.hpp	/^		WExpect(StatefulParserBase* s_parser, TokType tok,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::WExpect	access:public	signature:(StatefulParserBase * s_parser,TokType tok,const TokToStringMap & some_tok_ident_map,LexerType * s_lexer=nullptr)
liborangepower::lang::StatefulParserBase::WExpect::_lexer	liborangepower_src/stateful_parser_base_class.hpp	/^		LexerType* _lexer = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::WExpect	typeref:typename:LexerType *	access:private
liborangepower::lang::StatefulParserBase::WExpect::_parser	liborangepower_src/stateful_parser_base_class.hpp	/^		StatefulParserBase* _parser = nullptr;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::WExpect	typeref:typename:StatefulParserBase *	access:private
liborangepower::lang::StatefulParserBase::WExpect::~WExpect	liborangepower_src/stateful_parser_base_class.hpp	/^		~WExpect()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::WExpect	access:public	signature:()
liborangepower::lang::StatefulParserBase::_check_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static auto _check_parse(DerivedType* self, FirstFuncType&& first_func,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
liborangepower::lang::StatefulParserBase::_check_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static auto _check_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
liborangepower::lang::StatefulParserBase::_check_prefixed_tok_seq	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _check_prefixed_tok_seq(TokType end)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(TokType end)
liborangepower::lang::StatefulParserBase::_check_prefixed_tok_seq	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _check_prefixed_tok_seq(const std::set<TokType>& prefix_set,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(const std::set<TokType> & prefix_set,TokType end)
liborangepower::lang::StatefulParserBase::_curr_file_index	liborangepower_src/stateful_parser_base_class.hpp	/^	size_t _curr_file_index = 0;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:size_t	access:protected
liborangepower::lang::StatefulParserBase::_dup_lex_state	liborangepower_src/stateful_parser_base_class.hpp	/^	inline std::unique_ptr<LexerState> _dup_lex_state() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::unique_ptr<LexerState>	access:protected	signature:() const
liborangepower::lang::StatefulParserBase::_err	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _err(ArgTypes&&... args) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(ArgTypes &&...args) const
liborangepower::lang::StatefulParserBase::_err	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _err(const LexerState* lex_state, ArgTypes&&... args)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const LexerState * lex_state,ArgTypes &&...args)
liborangepower::lang::StatefulParserBase::_expect	liborangepower_src/stateful_parser_base_class.hpp	/^	void _expect(TokType tok, const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr,bool perf_next_tok=true)
liborangepower::lang::StatefulParserBase::_expect	liborangepower_src/stateful_parser_base_class.hpp	/^	void _expect(TokType tok, const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,const LexerState & lex_state,bool perf_next_tok=true)
liborangepower::lang::StatefulParserBase::_filename_vec	liborangepower_src/stateful_parser_base_class.hpp	/^	std::vector<std::string> _filename_vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::vector<std::string>	access:protected
liborangepower::lang::StatefulParserBase::_just_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _just_test = false, _just_parse = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected
liborangepower::lang::StatefulParserBase::_just_test	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _just_test = false, _just_parse = false;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected
liborangepower::lang::StatefulParserBase::_lex_state	liborangepower_src/stateful_parser_base_class.hpp	/^	const LexerState& _lex_state() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:const LexerState &	access:protected	signature:() const
liborangepower::lang::StatefulParserBase::_lexer	liborangepower_src/stateful_parser_base_class.hpp	/^	LexerType& _lexer()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexerType &	access:protected	signature:()
liborangepower::lang::StatefulParserBase::_lexer	liborangepower_src/stateful_parser_base_class.hpp	/^	const LexerType& _lexer() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:const LexerType &	access:protected	signature:() const
liborangepower::lang::StatefulParserBase::_lexer_vec	liborangepower_src/stateful_parser_base_class.hpp	/^	std::vector<LexerType> _lexer_vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::vector<LexerType>	access:protected
liborangepower::lang::StatefulParserBase::_lss	liborangepower_src/stateful_parser_base_class.hpp	/^	LexStateSets _lss;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:LexStateSets	access:protected
liborangepower::lang::StatefulParserBase::_msg_for_expect	liborangepower_src/stateful_parser_base_class.hpp	/^	std::string _msg_for_expect(TokType tok,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::string	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,const LexerState & lex_state) const
liborangepower::lang::StatefulParserBase::_next_lss_tokens	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _next_lss_tokens(const TokToStringMap& some_tok_ident_map)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const TokToStringMap & some_tok_ident_map)
liborangepower::lang::StatefulParserBase::_next_n_tokens	liborangepower_src/stateful_parser_base_class.hpp	/^	const std::vector<LexerState> _next_n_tokens(size_t n,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:const std::vector<LexerState>	access:protected	signature:(size_t n,bool affect_lexer)
liborangepower::lang::StatefulParserBase::_next_tok	liborangepower_src/stateful_parser_base_class.hpp	/^	inline auto _next_tok(LexerType* lexer=nullptr)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(LexerType * lexer=nullptr)
liborangepower::lang::StatefulParserBase::_opt_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse(DerivedType* self, FirstFuncType&& first_func,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
liborangepower::lang::StatefulParserBase::_opt_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
liborangepower::lang::StatefulParserBase::_opt_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
liborangepower::lang::StatefulParserBase::_opt_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static bool _opt_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
liborangepower::lang::StatefulParserBase::_req_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
liborangepower::lang::StatefulParserBase::_req_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
liborangepower::lang::StatefulParserBase::_req_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,FirstFuncType && first_func,RemFuncTypes &&...rem_funcs)
liborangepower::lang::StatefulParserBase::_req_parse_loop	liborangepower_src/stateful_parser_base_class.hpp	/^	static void _req_parse_loop(DerivedType* self,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(DerivedType * self,const std::vector<FuncType> & func_vec)
liborangepower::lang::StatefulParserBase::_text_vec	liborangepower_src/stateful_parser_base_class.hpp	/^	std::vector<std::unique_ptr<std::string>> _text_vec;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase	typeref:typename:std::vector<std::unique_ptr<std::string>>	access:protected
liborangepower::lang::StatefulParserBase::_to_next_in_list	liborangepower_src/stateful_parser_base_class.hpp	/^	bool _to_next_in_list(TokType end, TokType separator,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:protected	signature:(TokType end,TokType separator,const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr)
liborangepower::lang::StatefulParserBase::_unexpected	liborangepower_src/stateful_parser_base_class.hpp	/^	void _unexpected(const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr)
liborangepower::lang::StatefulParserBase::_unexpected	liborangepower_src/stateful_parser_base_class.hpp	/^	void _unexpected(const TokToStringMap& some_tok_ident_map,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const TokToStringMap & some_tok_ident_map,const LexerState & lex_state)
liborangepower::lang::StatefulParserBase::_warn	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _warn(ArgTypes&&... args) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(ArgTypes &&...args) const
liborangepower::lang::StatefulParserBase::_warn	liborangepower_src/stateful_parser_base_class.hpp	/^	inline void _warn(const LexerState* lex_state, ArgTypes&&... args)$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:void	access:protected	signature:(const LexerState * lex_state,ArgTypes &&...args)
liborangepower::lang::StatefulParserBase::_wexpect	liborangepower_src/stateful_parser_base_class.hpp	/^	inline auto _wexpect(TokType tok,$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:auto	access:protected	signature:(TokType tok,const TokToStringMap & some_tok_ident_map,LexerType * lexer=nullptr)
liborangepower::lang::StatefulParserBase::actual_just_test	liborangepower_src/stateful_parser_base_class.hpp	/^	inline bool actual_just_test() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public	signature:() const
liborangepower::lang::StatefulParserBase::cmp_lex_tok	liborangepower_src/stateful_parser_base_class.hpp	/^	inline bool cmp_lex_tok(TokType to_cmp) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public	signature:(TokType to_cmp) const
liborangepower::lang::StatefulParserBase::just_parse	liborangepower_src/stateful_parser_base_class.hpp	/^	inline bool just_parse() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:bool	access:public	signature:() const
liborangepower::lang::StatefulParserBase::~StatefulParserBase	liborangepower_src/stateful_parser_base_class.hpp	/^	virtual ~StatefulParserBase()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:StatefulParserBase	access:public	signature:()
liborangepower::misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
liborangepower::misc_input::get_istream_as_str	liborangepower_src/misc_input_classes.hpp	/^inline auto get_istream_as_str(std::istream&& to_get_from)$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:auto	signature:(std::istream && to_get_from)
liborangepower::misc_input::get_istream_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_istream_as_str(std::istream& to_get_from)$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:(std::istream & to_get_from)
liborangepower::misc_input::get_stdin_as_str	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_as_str()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
liborangepower::misc_output	liborangepower_src/misc_output_classes.hpp	/^namespace misc_output$/;"	kind:n	namespace:liborangepower
liborangepower::misc_output::AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::misc_output
liborangepower::misc_output::AnyPrintoutBackend::func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, FirstArgType&& first_val, $/;"	kind:f	class:liborangepower::misc_output::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,FirstArgType && first_val,RemArgTypes &&...rem_args)
liborangepower::misc_output::fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
liborangepower::misc_output::osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
liborangepower::misc_output::osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::misc_output::osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::misc_output::printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::misc_output::printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::misc_output::sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstArgType& first_val, $/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const FirstArgType & first_val,RemArgTypes &&...rem_args)
liborangepower::misc_output::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:()
liborangepower::misc_output::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstArgType& first_val,$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const FirstArgType & first_val,RemArgTypes &&...rem_args)
liborangepower::misc_output::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const Type & to_concat)
liborangepower::misc_output::strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstArgType& first_val,$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const FirstArgType & first_val,RemArgTypes &&...rem_args)
liborangepower::misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util::_init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void _init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
liborangepower::misc_util::_init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void _init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstArgType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstArgType & first_val)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstArgType& first_val,$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstArgType & first_val,const SecondArgType & next,RemArgTypes &&...rem_args)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
liborangepower::misc_util::cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstArgType* first_arr, SecondArgType* second_arr,$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstArgType * first_arr,SecondArgType * second_arr,size_t size)
liborangepower::misc_util::custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
liborangepower::misc_util::init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstArgType max_va(const FirstArgType& arg_0, const SecondArgType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstArgType max_va(const FirstArgType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstArgType min_va(const FirstArgType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstArgType min_va(const FirstArgType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
liborangepower::mpi	liborangepower_src/mpi_handler_class.hpp	/^namespace mpi$/;"	kind:n	namespace:liborangepower
liborangepower::mpi::MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^class MpiHandler$/;"	kind:c	namespace:liborangepower::mpi
liborangepower::mpi::MpiHandler::DidQuitWithMiscOutput	liborangepower_src/mpi_handler_class.hpp	/^		DidQuitWithMiscOutput,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::mpi::MpiHandler::ErrorCode	liborangepower_src/mpi_handler_class.hpp	/^	enum class ErrorCode : int$/;"	kind:g	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
liborangepower::mpi::MpiHandler::FakeError	liborangepower_src/mpi_handler_class.hpp	/^		FakeError,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::mpi::MpiHandler::MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	inline MpiHandler(int& s_argc, char** s_argv,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:(int & s_argc,char ** s_argv,size_t s_num_threads_per_proc=1,size_t s_min_world_size=1)
liborangepower::mpi::MpiHandler::SizeTooBig	liborangepower_src/mpi_handler_class.hpp	/^		SizeTooBig,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::mpi::MpiHandler::TooFewProcs	liborangepower_src/mpi_handler_class.hpp	/^		TooFewProcs,$/;"	kind:e	enum:liborangepower::mpi::MpiHandler::ErrorCode	access:public
liborangepower::mpi::MpiHandler::_argc_ptr	liborangepower_src/mpi_handler_class.hpp	/^	int* _argc_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int *	access:protected
liborangepower::mpi::MpiHandler::_argv_ptr	liborangepower_src/mpi_handler_class.hpp	/^	char*** _argv_ptr;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:char ***	access:protected
liborangepower::mpi::MpiHandler::_min_world_size	liborangepower_src/mpi_handler_class.hpp	/^	size_t _num_threads_per_proc, _min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
liborangepower::mpi::MpiHandler::_num_threads_per_proc	liborangepower_src/mpi_handler_class.hpp	/^	size_t _num_threads_per_proc, _min_world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:protected
liborangepower::mpi::MpiHandler::_world_rank	liborangepower_src/mpi_handler_class.hpp	/^	int _world_rank, _world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
liborangepower::mpi::MpiHandler::_world_size	liborangepower_src/mpi_handler_class.hpp	/^	int _world_rank, _world_size;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected
liborangepower::mpi::MpiHandler::argc	liborangepower_src/mpi_handler_class.hpp	/^	inline int argc() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:() const
liborangepower::mpi::MpiHandler::argv	liborangepower_src/mpi_handler_class.hpp	/^	inline char** argv() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:char **	access:public	signature:() const
liborangepower::mpi::MpiHandler::quit_with_misc_output	liborangepower_src/mpi_handler_class.hpp	/^	inline void quit_with_misc_output(arg_types&&... args) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:void	access:protected	signature:(arg_types &&...args) const
liborangepower::mpi::MpiHandler::raw_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_abort(MPI_Comm comm, int ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm,int ec) const
liborangepower::mpi::MpiHandler::raw_comm_rank	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_rank(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
liborangepower::mpi::MpiHandler::raw_comm_size	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_size(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
liborangepower::mpi::MpiHandler::raw_finalize	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_finalize() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:() const
liborangepower::mpi::MpiHandler::raw_init	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_init(int& argc, char**& argv) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(int & argc,char ** & argv) const
liborangepower::mpi::MpiHandler::recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(ArrType& buf, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(ArrType & buf,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(Type* buf, int num_instances, int src, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type * buf,int num_instances,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv_single(Type& some_var, int src, int tag=MPI_ANY_TAG,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type & some_var,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::reduce	liborangepower_src/mpi_handler_class.hpp	/^	inline int reduce(const void* send_buf, void* recv_buf, int count, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const void * send_buf,void * recv_buf,int count,MPI_Datatype data_type,MPI_Op op,int root,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::regular_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int regular_abort(const ErrorCode& ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const ErrorCode & ec) const
liborangepower::mpi::MpiHandler::root	liborangepower_src/mpi_handler_class.hpp	/^	static constexpr int root = 0;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
liborangepower::mpi::MpiHandler::send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const ArrType& buf, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const ArrType & buf,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * buf,int num_instances,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv(const Type* send_buf, int num_send_instances, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * send_buf,int num_send_instances,int dst,Type * recv_buf,int num_recv_instances,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, Type& to_recv, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,Type & to_recv,int partner,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,int dst,Type & to_recv,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
liborangepower::mpi::MpiHandler::send_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_single(const Type& some_var, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & some_var,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
liborangepower::mpi::MpiHandler::starting_thread_num	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t starting_thread_num() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
liborangepower::mpi::MpiHandler::total_num_threads	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t total_num_threads() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
liborangepower::mpi::MpiHandler::wrapped_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_recv(Type* buf, int num_instances, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(Type * buf,int num_instances,int src,int tag,MPI_Comm comm,MPI_Status * status) const
liborangepower::mpi::MpiHandler::wrapped_send	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * buf,int num_instances,int dst,int tag,MPI_Comm comm) const
liborangepower::mpi::MpiHandler::wrapped_send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send_recv(const Type* send_buf, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * send_buf,int num_send_instances,int dst,int send_tag,Type * recv_buf,int num_recv_instances,int src,int recv_tag,MPI_Comm comm,MPI_Status * status) const
liborangepower::mpi::MpiHandler::~MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	virtual inline ~MpiHandler()$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:()
liborangepower::range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
liborangepower::range::clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
liborangepower::range::in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(FirstArgType range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(FirstArgType range_start_inclusive,SecondArgType range_end_exclusive,ThirdArgType to_check)
liborangepower::range::in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(FirstArgType range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(FirstArgType range_start_inclusive,SecondArgType range_end_inclusive,ThirdArgType to_check)
liborangepower::strings	liborangepower_src/string_conversion_stuff.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
liborangepower::strings::convert_str_to	liborangepower_src/string_conversion_stuff.hpp	/^inline Type convert_str_to(const std::string& to_convert)$/;"	kind:f	namespace:liborangepower::strings	typeref:typename:Type	signature:(const std::string & to_convert)
liborangepower::time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
liborangepower::time::Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Prng::InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
liborangepower::time::Prng::Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(SeedType s_seed)$/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(SeedType s_seed)
liborangepower::time::Prng::Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
liborangepower::time::Prng::SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
liborangepower::time::Prng::_default_initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType _default_initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
liborangepower::time::Prng::_instance	liborangepower_src/time_stuff.hpp	/^	InstanceType _instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
liborangepower::time::Prng::_param_0	liborangepower_src/time_stuff.hpp	/^	int _param_0, _param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::_param_1	liborangepower_src/time_stuff.hpp	/^	int _param_0, _param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool saturate=false)
liborangepower::time::Prng::run	liborangepower_src/time_stuff.hpp	/^	inline auto run()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
liborangepower::time::Prng::~Prng	liborangepower_src/time_stuff.hpp	/^	virtual ~Prng() = default;$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:()
liborangepower::time::Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Profiler::end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
liborangepower::time::Profiler::start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
liborangepower::time::put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower::time::put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower_array_2d_helper_classes_hpp	liborangepower_src/array_2d_helper_classes.hpp	/^#define liborangepower_array_2d_helper_classes_hpp$/;"	kind:d
liborangepower_array_helper_classes_hpp	liborangepower_src/array_helper_classes.hpp	/^#define liborangepower_array_helper_classes_hpp$/;"	kind:d
liborangepower_gen_class_innards_defines_hpp	liborangepower_src/gen_class_innards_defines.hpp	/^#define liborangepower_gen_class_innards_defines_hpp$/;"	kind:d
liborangepower_gmp_stuff_hpp	liborangepower_src/gmp_stuff.hpp	/^#define liborangepower_gmp_stuff_hpp$/;"	kind:d
liborangepower_json_stuff_hpp	liborangepower_src/json_stuff.hpp	/^#define liborangepower_json_stuff_hpp$/;"	kind:d
liborangepower_lexer_base_class_hpp	liborangepower_src/lexer_base_class.hpp	/^#define liborangepower_lexer_base_class_hpp$/;"	kind:d
liborangepower_lexer_classes_hpp	liborangepower_src/quoted_str_converter_stuff.hpp	/^#define liborangepower_lexer_classes_hpp$/;"	kind:d
liborangepower_linked_list_classes_hpp	liborangepower_src/linked_list_classes.hpp	/^#define liborangepower_linked_list_classes_hpp$/;"	kind:d
liborangepower_memwhatever_wrappers_hpp	liborangepower_src/memwhatever_wrappers.hpp	/^#define liborangepower_memwhatever_wrappers_hpp$/;"	kind:d
liborangepower_misc_bitwise_funcs_hpp	liborangepower_src/misc_bitwise_funcs.hpp	/^#define liborangepower_misc_bitwise_funcs_hpp$/;"	kind:d
liborangepower_misc_defines_hpp	liborangepower_src/misc_defines.hpp	/^#define liborangepower_misc_defines_hpp$/;"	kind:d
liborangepower_misc_includes_hpp	liborangepower_src/misc_includes.hpp	/^#define liborangepower_misc_includes_hpp$/;"	kind:d
liborangepower_misc_input_classes_hpp	liborangepower_src/misc_input_classes.hpp	/^#define liborangepower_misc_input_classes_hpp$/;"	kind:d
liborangepower_misc_output_classes_hpp	liborangepower_src/misc_output_classes.hpp	/^#define liborangepower_misc_output_classes_hpp$/;"	kind:d
liborangepower_misc_types_hpp	liborangepower_src/misc_types.hpp	/^#define liborangepower_misc_types_hpp$/;"	kind:d
liborangepower_misc_utility_funcs_hpp	liborangepower_src/misc_utility_funcs.hpp	/^#define liborangepower_misc_utility_funcs_hpp$/;"	kind:d
liborangepower_mp11_defines_hpp	liborangepower_src/mp11_defines.hpp	/^#define liborangepower_mp11_defines_hpp$/;"	kind:d
liborangepower_mpi_handler_class_hpp	liborangepower_src/mpi_handler_class.hpp	/^#define liborangepower_mpi_handler_class_hpp$/;"	kind:d
liborangepower_opt_as_func_arg_parser_base_class_hpp	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^#define liborangepower_opt_as_func_arg_parser_base_class_hpp$/;"	kind:d
liborangepower_parse_tree_base_class_hpp	liborangepower_src/parse_tree_base_class.hpp	/^#define liborangepower_parse_tree_base_class_hpp$/;"	kind:d
liborangepower_prev_curr_pair_classes_hpp	liborangepower_src/prev_curr_pair_classes.hpp	/^#define liborangepower_prev_curr_pair_classes_hpp$/;"	kind:d
liborangepower_range_funcs_hpp	liborangepower_src/range_funcs.hpp	/^#define liborangepower_range_funcs_hpp$/;"	kind:d
liborangepower_stateful_parser_base_class_hpp	liborangepower_src/stateful_parser_base_class.hpp	/^#define liborangepower_stateful_parser_base_class_hpp$/;"	kind:d
liborangepower_str_split_helper_classes_hpp	liborangepower_src/deprecated/str_split_helper_classes.hpp	/^#define liborangepower_str_split_helper_classes_hpp$/;"	kind:d
liborangepower_string_conversion_stuff_hpp	liborangepower_src/string_conversion_stuff.hpp	/^#define liborangepower_string_conversion_stuff_hpp$/;"	kind:d
liborangepower_time_stuff_hpp	liborangepower_src/time_stuff.hpp	/^#define liborangepower_time_stuff_hpp$/;"	kind:d
liborangepower_vec2_classes_hpp	liborangepower_src/vec2_classes.hpp	/^#define liborangepower_vec2_classes_hpp$/;"	kind:d
liborangepower_with_defines_hpp	liborangepower_src/with_defines.hpp	/^#define liborangepower_with_defines_hpp$/;"	kind:d
line_num	liborangepower_src/lexer_base_class.hpp	/^	inline auto line_num() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
list	ast_node_classes.hpp	/^	std::vector<Child> list;$/;"	kind:m	class:frost_hdl::ast::NodeList	typeref:typename:std::vector<Child>	access:public
main	main.cpp	/^int main(int argc, char** argv)$/;"	kind:f	typeref:typename:int	signature:(int argc,char ** argv)
make_hold_big_num	expr_value_class.hpp	/^	inline void make_hold_big_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
make_hold_expr_num	expr_value_class.hpp	/^	inline void make_hold_expr_num()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
make_hold_num_vec	expr_value_class.hpp	/^	inline void make_hold_num_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
make_hold_val_vec	expr_value_class.hpp	/^	inline void make_hold_val_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:void	access:public	signature:()
max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstArgType max_va(const FirstArgType& arg_0, const SecondArgType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1)
max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstArgType max_va(const FirstArgType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1,RemainingTypes...remaining_args)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstArgType min_va(const FirstArgType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstArgType min_va(const FirstArgType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstArgType	signature:(const FirstArgType & arg_0,const SecondArgType & arg_1,RemainingTypes...remaining_args)
misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
misc_output	liborangepower_src/misc_output_classes.hpp	/^namespace misc_output$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
mpi	liborangepower_src/mpi_handler_class.hpp	/^namespace mpi$/;"	kind:n	namespace:liborangepower
multiple_bits	expr_num_class.cpp	/^auto ExprNum::multiple_bits(size_t start_index, size_t amount) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:ExprNumData	signature:(size_t start_index,size_t amount) const
multiple_bits	expr_num_class.hpp	/^	ExprNumData multiple_bits(size_t start_index, size_t amount) const;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:ExprNumData	access:public	signature:(size_t start_index,size_t amount) const
n	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& n() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
name	ast_node_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:string	access:public	signature:() const
name	ast_node_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAlwaysBlkBlock	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAlwaysCombBlock	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAlwaysFfBlock	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAnyForStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeArgList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeArgPortSublist	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAssertStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAssumeStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeAuto	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBehavAssignStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBase	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitAnd	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitAsr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitLsl	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitLsr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitOr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprBitXor	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpEq	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpGe	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpGt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpLe	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpLt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprCmpNe	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprDiv	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprDollarPow	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprLogAnd	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprLogOr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprMinus	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprMod	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprMul	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBinopExprPlus	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeBracketPair	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeCall	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeCatExpr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeClass	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeConstString	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeContAssignStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeCoverStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclCallable	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclConstList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclFunc	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclProc	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclTask	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDeclVarList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDefaultCaseItem	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeDollarResizeStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeEdgeList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeEnum	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeExprBase	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeExprCaseItem	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeExtends	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeForStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeGenerateForStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeGenerateIfStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeHasString	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdent	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentEtc	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentMemberAccess	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentScopeAccess	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentTermEqualsExtra	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentTermEqualsExtraList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIdentTerminal	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeIfStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeInitialBlock	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeInstModuleStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeLeftRightBase	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeListCat	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberAccessPrivateStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberAccessProtectedStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberAccessPublicStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeMemberCallable	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeModport	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeModportSubList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeModule	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNamedParamArgInstList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNegedgeInst	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNoParamPossibleTypename	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeNumExpr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeOneParamArgInst	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePackage	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamArgTypeSublist	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamArgVarSublist	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamModuleSublist	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParamPossibleTypename	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeParenPair	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePosParamArgInstList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePosedgeInst	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeProgram	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarBase	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarFell	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarPast	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarRose	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodePseudoExprDollarStable	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeExprAny	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeOne	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeSuffix	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRangeTwo	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeReplExpr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeRestrictStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeReturnStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSbit	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSbyte	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeBehav	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeClass	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeEnum	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeModproc	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopePackage	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeSwitch	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeScopeUnion	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSelf	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSint	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSizedNumExpr	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSlongint	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSshortint	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeStaticAssertStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeStmtList	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSwire	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSwitchStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeSwitchzStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeTypeRange	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeTypeof	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUbit	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUbyte	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUint	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUlongint	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnion	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprBase	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprBitNot	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarClog2	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarFirst	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarHigh	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarIsSigned	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarLast	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarLow	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarRange	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarRevrange	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarSigned	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarSize	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprDollarUnsigned	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprLogNot	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprMinus	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprPlus	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUnopExprTypeof	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUshortint	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUsingStmt	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeUwire	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeVoid	typeref:typename:string	access:public	signature:() const
name	ast_node_main_classes.hpp	/^	virtual string name() const$/;"	kind:f	class:NodeWhileStmt	typeref:typename:string	access:public	signature:() const
next_tok	lexer_class.cpp	/^void Lexer::next_tok()$/;"	kind:f	class:frost_hdl::Lexer	typeref:typename:void	signature:()
next_tok	lexer_class.hpp	/^	void next_tok();$/;"	kind:p	class:frost_hdl::Lexer	typeref:typename:void	access:public	signature:()
now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
num_vec	expr_value_class.hpp	/^	inline NumVec& num_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:NumVec &	access:public	signature:()
num_vec	expr_value_class.hpp	/^	inline const NumVec& num_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const NumVec &	access:public	signature:() const
one_bit	expr_num_class.hpp	/^	inline auto one_bit(size_t index) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:auto	access:public	signature:(size_t index) const
one_inst	liborangepower_src/stateful_parser_base_class.hpp	/^			OneInst one_inst;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse::FirstValidInvalidInst	typeref:typename:OneInst	access:public
operator !=	liborangepower_src/lexer_base_class.hpp	/^		inline bool operator != (const State& other) const$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:bool	access:public	signature:(const State & other) const
operator !=	liborangepower_src/linked_list_classes.hpp	/^		inline bool operator != (const NodeIterator& other) const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:bool	access:public	signature:(const NodeIterator & other) const
operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline Type& operator () ()$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:Type &	access:public	signature:()
operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline Type& operator () ()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:Type &	access:public	signature:()
operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline const Type& operator () () const$/;"	kind:f	class:liborangepower::containers::MoveOnlyPrevCurrPair	typeref:typename:const Type &	access:public	signature:() const
operator () 	liborangepower_src/prev_curr_pair_classes.hpp	/^	inline const Type& operator () () const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:const Type &	access:public	signature:() const
operator () 	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool operator () () const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:bool	access:public	signature:() const
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool saturate=false)
operator *	liborangepower_src/linked_list_classes.hpp	/^		inline Node& operator * () const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:Node &	access:public	signature:() const
operator ++	liborangepower_src/linked_list_classes.hpp	/^		inline NodeIterator& operator ++ ()$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:NodeIterator &	access:public	signature:()
operator --	liborangepower_src/linked_list_classes.hpp	/^		inline NodeIterator& operator -- ()$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:NodeIterator &	access:public	signature:()
operator ->	liborangepower_src/linked_list_classes.hpp	/^		inline Node* operator -> () const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:Node *	access:public	signature:() const
operator <	liborangepower_src/lexer_base_class.hpp	/^		inline bool operator < (const State& other) const$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:bool	access:public	signature:(const State & other) const
operator =	expr_num_class.hpp	/^	ExprNum& operator = (const ExprNum& to_copy) = default;$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:ExprNum &	access:public	signature:(const ExprNum & to_copy)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
operator =	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet& operator = (ParseRet&& to_move) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:ParseRet &	access:public	signature:(ParseRet && to_move)
operator =	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ParseRet& operator = (const ParseRet& to_copy) = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	typeref:typename:ParseRet &	access:public	signature:(const ParseRet & to_copy)
operator ==	expr_num_class.hpp	/^	inline bool operator == (const ExprNum& other) const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:bool	access:public	signature:(const ExprNum & other) const
operator ==	liborangepower_src/lexer_base_class.hpp	/^		inline bool operator == (const State& other) const$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:bool	access:public	signature:(const State & other) const
operator ==	liborangepower_src/linked_list_classes.hpp	/^		inline bool operator == (const NodeIterator& other) const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	typeref:typename:bool	access:public	signature:(const NodeIterator & other) const
operator BigNum	expr_num_class.hpp	/^	inline operator BigNum() const$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:() const
operator Node*	liborangepower_src/linked_list_classes.hpp	/^		inline operator Node* () const$/;"	kind:f	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:() const
operator string	expr_num_class.hpp	/^	explicit inline operator string() const$/;"	kind:f	class:frost_hdl::ExprNum	access:public	signature:() const
osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_ret	liborangepower_src/stateful_parser_base_class.hpp	/^			ParseRet parse_ret;$/;"	kind:m	class:liborangepower::lang::StatefulParserBase::SeqParse::FirstValidInvalidInst	typeref:typename:ParseRet	access:public
perf_asr	expr_num_class.cpp	/^void ExprNum::perf_asr(const ExprNum& to_shift, const ExprNum& amount)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_shift,const ExprNum & amount)
perf_asr	expr_num_class.hpp	/^	void perf_asr(const ExprNum& to_shift, const ExprNum& amount);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_shift,const ExprNum & amount)
perf_lsl	expr_num_class.cpp	/^void ExprNum::perf_lsl(const ExprNum& to_shift, const ExprNum& amount)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_shift,const ExprNum & amount)
perf_lsl	expr_num_class.hpp	/^	void perf_lsl(const ExprNum& to_shift, const ExprNum& amount);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_shift,const ExprNum & amount)
perf_lsr	expr_num_class.cpp	/^void ExprNum::perf_lsr(const ExprNum& to_shift, const ExprNum& amount)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_shift,const ExprNum & amount)
perf_lsr	expr_num_class.hpp	/^	void perf_lsr(const ExprNum& to_shift, const ExprNum& amount);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_shift,const ExprNum & amount)
perf_slice_with_range	expr_num_class.cpp	/^void ExprNum::perf_slice_with_range(const ExprNum& to_slice,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(const ExprNum & to_slice,const ExprNum & range_left,const ExprNum & range_right)
perf_slice_with_range	expr_num_class.hpp	/^	void perf_slice_with_range(const ExprNum& to_slice,$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(const ExprNum & to_slice,const ExprNum & range_left,const ExprNum & range_right)
pop_back	liborangepower_src/linked_list_classes.hpp	/^	inline void pop_back()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:()
pop_front	liborangepower_src/linked_list_classes.hpp	/^	inline void pop_front()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:()
pos_in_line	liborangepower_src/lexer_base_class.hpp	/^	inline auto pos_in_line() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
pretabbed	misc_utility_funcs.hpp	/^inline string pretabbed(const FirstArgType& first_arg,$/;"	kind:f	namespace:frost_hdl	typeref:typename:string	signature:(const FirstArgType & first_arg,RemArgTypes &&...rem_args)
prev_line_num	liborangepower_src/lexer_base_class.hpp	/^	inline auto prev_line_num() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
prev_pos_in_line	liborangepower_src/lexer_base_class.hpp	/^	inline auto prev_pos_in_line() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
prev_state	liborangepower_src/lexer_base_class.hpp	/^	inline auto& prev_state()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto &	access:public	signature:()
prev_state	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& prev_state() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
push_back	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_back(Type&& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Type && to_push)
push_back	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_back(const Type& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(const Type & to_push)
push_front	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_front(Type&& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(Type && to_push)
push_front	liborangepower_src/linked_list_classes.hpp	/^	inline NodeIterator push_front(const Type& to_push)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:NodeIterator	access:public	signature:(const Type & to_push)
put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
quit_with_misc_output	liborangepower_src/mpi_handler_class.hpp	/^	inline void quit_with_misc_output(arg_types&&... args) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:void	access:protected	signature:(arg_types &&...args) const
range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
raw_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_abort(MPI_Comm comm, int ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm,int ec) const
raw_comm_rank	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_rank(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
raw_comm_size	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_comm_size(MPI_Comm comm) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(MPI_Comm comm) const
raw_finalize	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_finalize() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:() const
raw_init	liborangepower_src/mpi_handler_class.hpp	/^	inline int raw_init(int& argc, char**& argv) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(int & argc,char ** & argv) const
recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(ArrType& buf, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(ArrType & buf,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv(Type* buf, int num_instances, int src, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type * buf,int num_instances,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int recv_single(Type& some_var, int src, int tag=MPI_ANY_TAG,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(Type & some_var,int src,int tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
reduce	liborangepower_src/mpi_handler_class.hpp	/^	inline int reduce(const void* send_buf, void* recv_buf, int count, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const void * send_buf,void * recv_buf,int count,MPI_Datatype data_type,MPI_Op op,int root,MPI_Comm comm=MPI_COMM_WORLD) const
regular_abort	liborangepower_src/mpi_handler_class.hpp	/^	inline int regular_abort(const ErrorCode& ec) const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const ErrorCode & ec) const
remove	liborangepower_src/linked_list_classes.hpp	/^	inline void remove(Node* where)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:(Node * where)
remove_after	liborangepower_src/linked_list_classes.hpp	/^	inline void remove_after(Node* where)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:(Node * where)
remove_before	liborangepower_src/linked_list_classes.hpp	/^	inline void remove_before(Node* where)$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:void	access:public	signature:(Node * where)
root	liborangepower_src/mpi_handler_class.hpp	/^	static constexpr int root = 0;$/;"	kind:m	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public
run	liborangepower_src/time_stuff.hpp	/^	inline auto run()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
rwith	liborangepower_src/with_defines.hpp	/^#define rwith(/;"	kind:d	signature:(obj,val)
s	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& s() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
s16	liborangepower_src/misc_types.hpp	/^typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
s32	liborangepower_src/misc_types.hpp	/^typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
s64	liborangepower_src/misc_types.hpp	/^typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
s8	liborangepower_src/misc_types.hpp	/^typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstArgType& first_val, $/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const FirstArgType & first_val,RemArgTypes &&...rem_args)
send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const ArrType& buf, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const ArrType & buf,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
send	liborangepower_src/mpi_handler_class.hpp	/^	inline int send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * buf,int num_instances,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv(const Type* send_buf, int num_send_instances, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type * send_buf,int num_send_instances,int dst,Type * recv_buf,int num_recv_instances,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, Type& to_recv, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,Type & to_recv,int partner,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
send_recv_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_recv_single(const Type& to_send, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & to_send,int dst,Type & to_recv,int src,int send_tag=0,int recv_tag=MPI_ANY_TAG,MPI_Comm comm=MPI_COMM_WORLD,MPI_Status * status=MPI_STATUS_IGNORE) const
send_single	liborangepower_src/mpi_handler_class.hpp	/^	inline int send_single(const Type& some_var, int dst, int tag=0,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:public	signature:(const Type & some_var,int dst,int tag=0,MPI_Comm comm=MPI_COMM_WORLD) const
set_bit	expr_num_class.hpp	/^	inline void set_bit(size_t index, bool val)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t index,bool val)
set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits_with_range(Type& to_set, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
set_just_test	liborangepower_src/stateful_parser_base_class.hpp	/^		inline void set_just_test(bool n_just_test) const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	typeref:typename:void	access:public	signature:(bool n_just_test) const
set_multiple_bits	expr_num_class.cpp	/^void ExprNum::set_multiple_bits(size_t start_index,$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(size_t start_index,const ExprNumData & some_bits)
set_multiple_bits	expr_num_class.hpp	/^	void set_multiple_bits(size_t start_index,$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t start_index,const ExprNumData & some_bits)
set_prev_state	liborangepower_src/lexer_base_class.hpp	/^	inline void set_prev_state(const State& n_prev_state)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:public	signature:(const State & n_prev_state)
set_size	expr_num_class.cpp	/^void ExprNum::set_size(size_t n_size)$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:void	signature:(size_t n_size)
set_size	expr_num_class.hpp	/^	void set_size(size_t n_size);$/;"	kind:p	class:frost_hdl::ExprNum	typeref:typename:void	access:public	signature:(size_t n_size)
set_state	liborangepower_src/lexer_base_class.hpp	/^	inline void set_state(const State& n_state)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:void	access:public	signature:(const State & n_state)
size	expr_num_class.hpp	/^	inline size_t size() const$/;"	kind:f	class:frost_hdl::ExprNum	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
src_ast_node_classes_hpp	ast_node_classes.hpp	/^#define src_ast_node_classes_hpp$/;"	kind:d
src_ast_visitor_class_hpp	ast_visitor_class.hpp	/^#define src_ast_visitor_class_hpp$/;"	kind:d
src_code_chunk	lexer_class.hpp	/^	inline auto src_code_chunk(const TwoStates* two_states=nullptr) const$/;"	kind:f	class:frost_hdl::Lexer	typeref:typename:auto	access:public	signature:(const TwoStates * two_states=nullptr) const
src_code_chunk	liborangepower_src/lexer_base_class.hpp	/^	inline Type src_code_chunk(const TwoStates* other_two_states=nullptr)$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:Type	access:public	signature:(const TwoStates * other_two_states=nullptr) const
src_err_warn_base_class_hpp	err_warn_base_class.hpp	/^#define src_err_warn_base_class_hpp$/;"	kind:d
src_expr_num_class_hpp	expr_num_class.hpp	/^#define src_expr_num_class_hpp$/;"	kind:d
src_expr_value_class_hpp	expr_value_class.hpp	/^#define src_expr_value_class_hpp$/;"	kind:d
src_lexer_class_hpp	lexer_class.hpp	/^#define src_lexer_class_hpp$/;"	kind:d
src_misc_includes_hpp	misc_includes.hpp	/^#define src_misc_includes_hpp$/;"	kind:d
src_misc_types_hpp	misc_types.hpp	/^#define src_misc_types_hpp$/;"	kind:d
src_misc_utility_funcs_hpp	misc_utility_funcs.hpp	/^#define src_misc_utility_funcs_hpp$/;"	kind:d
src_parse_tree_class_hpp	parse_tree_class.hpp	/^#define src_parse_tree_class_hpp$/;"	kind:d
src_parser_class_hpp	parser_class.hpp	/^#define src_parser_class_hpp$/;"	kind:d
src_pt_visitor_class_hpp	pt_visitor_class.hpp	/^#define src_pt_visitor_class_hpp$/;"	kind:d
src_src_code_chunk_class_hpp	src_code_chunk_class.hpp	/^#define src_src_code_chunk_class_hpp$/;"	kind:d
src_tok_enum_hpp	tok_enum.hpp	/^#define src_tok_enum_hpp$/;"	kind:d
start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
starting_thread_num	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t starting_thread_num() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
state	liborangepower_src/lexer_base_class.hpp	/^	inline auto& state()$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto &	access:public	signature:()
state	liborangepower_src/lexer_base_class.hpp	/^	inline const auto& state() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:const auto &	access:public	signature:() const
stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
str_is_base_10_sint_bignum	liborangepower_src/gmp_stuff.hpp	/^bool str_is_base_10_sint_bignum(const std::string& str, BigNum& ret);$/;"	kind:p	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
str_is_base_10_sint_bignum	liborangepower_src/gmp_stuff/gmp_stuff.cpp	/^bool str_is_base_10_sint_bignum(const std::string& str, BigNum& ret)$/;"	kind:f	namespace:liborangepower::bignum	typeref:typename:bool	signature:(const std::string & str,BigNum & ret)
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:()
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstArgType& first_val,$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const FirstArgType & first_val,RemArgTypes &&...rem_args)
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const Type & to_concat)
strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstArgType& first_val,$/;"	kind:f	namespace:liborangepower::misc_output	typeref:typename:std::string	signature:(const FirstArgType & first_val,RemArgTypes &&...rem_args)
strings	liborangepower_src/string_conversion_stuff.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
syntax_error	src_code_chunk_class.hpp	/^	inline void syntax_error(const string& msg, int status=1) const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:void	access:public	signature:(const string & msg,int status=1) const
time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
tok	liborangepower_src/lexer_base_class.hpp	/^	inline auto tok() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
tok_ident_map	tok_enum.cpp	/^const std::map<Tok, string> tok_ident_map$/;"	kind:v	namespace:frost_hdl	typeref:typename:const std::map<Tok,string>
total_num_threads	liborangepower_src/mpi_handler_class.hpp	/^	inline size_t total_num_threads() const$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:size_t	access:public	signature:() const
type	ast_node_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:frost_hdl::ast::NodeBase	typeref:typename:Type	access:public	signature:() const
type	ast_node_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:frost_hdl::ast::NodeList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAlwaysBlkBlock	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAlwaysCombBlock	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAlwaysFfBlock	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAnyForStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeArgList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeArgPortSublist	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAssertStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAssumeStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeAuto	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBehavAssignStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBase	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitAnd	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitAsr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitLsl	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitLsr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitOr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprBitXor	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpEq	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpGe	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpGt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpLe	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpLt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprCmpNe	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprDiv	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprDollarPow	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprLogAnd	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprLogOr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprMinus	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprMod	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprMul	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBinopExprPlus	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeBracketPair	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeCall	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeCatExpr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeClass	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeConstString	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeContAssignStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeCoverStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclCallable	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclConstList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclFunc	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclProc	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclTask	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDeclVarList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDefaultCaseItem	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeDollarResizeStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeEdgeList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeEnum	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeExprBase	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeExprCaseItem	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeExtends	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeForStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeGenerateForStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeGenerateIfStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeHasString	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdent	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentEtc	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentMemberAccess	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentScopeAccess	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentTermEqualsExtra	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentTermEqualsExtraList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIdentTerminal	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeIfStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeInitialBlock	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeInstModuleStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeLeftRightBase	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeListCat	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberAccessPrivateStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberAccessProtectedStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberAccessPublicStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeMemberCallable	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeModport	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeModportSubList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeModule	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNamedParamArgInstList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNegedgeInst	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNoParamPossibleTypename	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeNumExpr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeOneParamArgInst	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePackage	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamArgTypeSublist	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamArgVarSublist	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamModuleSublist	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParamPossibleTypename	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeParenPair	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePosParamArgInstList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePosedgeInst	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeProgram	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarBase	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarFell	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarGlobalClock	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarPast	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarRose	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodePseudoExprDollarStable	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeExprAny	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeOne	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeSuffix	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRangeTwo	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeReplExpr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeRestrictStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeReturnStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSbit	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSbyte	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeBehav	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeClass	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeEnum	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeModproc	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopePackage	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeSwitch	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeScopeUnion	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSelf	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSint	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSizedNumExpr	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSlongint	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSshortint	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeStaticAssertStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeStmtList	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSwire	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSwitchStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeSwitchzStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeTypeRange	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeTypeof	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUbit	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUbyte	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUint	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUlongint	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnion	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprBase	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprBitNot	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarClog2	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarFirst	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarHigh	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarIsSigned	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarIsUnsigned	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarLast	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarLow	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarRange	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarRevrange	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarSigned	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarSize	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprDollarUnsigned	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprLogNot	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprMinus	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprPlus	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUnopExprTypeof	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUshortint	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUsingStmt	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeUwire	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeVoid	typeref:typename:Type	access:public	signature:() const
type	ast_node_main_classes.hpp	/^	virtual Type type() const$/;"	kind:f	class:NodeWhileStmt	typeref:typename:Type	access:public	signature:() const
type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
val_vec	expr_value_class.hpp	/^	inline ValVec& val_vec()$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:ValVec &	access:public	signature:()
val_vec	expr_value_class.hpp	/^	inline const ValVec& val_vec() const$/;"	kind:f	class:frost_hdl::ExprValue	typeref:typename:const ValVec &	access:public	signature:() const
valid	liborangepower_src/stateful_parser_base_class.hpp	/^		inline bool valid() const$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:bool	access:public	signature:() const
visitAlwaysBlkBlock	ast_visitor_visit_funcs.hpp	/^virtual void visitAlwaysBlkBlock(NodeAlwaysBlkBlock* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeAlwaysBlkBlock * node)
visitAlwaysCombBlock	ast_visitor_visit_funcs.hpp	/^virtual void visitAlwaysCombBlock(NodeAlwaysCombBlock* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeAlwaysCombBlock * node)
visitAlwaysFfBlock	ast_visitor_visit_funcs.hpp	/^virtual void visitAlwaysFfBlock(NodeAlwaysFfBlock* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeAlwaysFfBlock * node)
visitAnyForStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitAnyForStmt(NodeAnyForStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeAnyForStmt * node)
visitArgList	ast_visitor_visit_funcs.hpp	/^virtual void visitArgList(NodeArgList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeArgList * node)
visitArgPortSublist	ast_visitor_visit_funcs.hpp	/^virtual void visitArgPortSublist(NodeArgPortSublist* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeArgPortSublist * node)
visitAssertStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitAssertStmt(NodeAssertStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeAssertStmt * node)
visitAssumeStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitAssumeStmt(NodeAssumeStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeAssumeStmt * node)
visitAuto	ast_visitor_visit_funcs.hpp	/^virtual void visitAuto(NodeAuto* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeAuto * node)
visitBase	ast_visitor_class.hpp	/^	virtual void visitBase(NodeBase* node) = 0;$/;"	kind:p	class:frost_hdl::ast::Visitor	typeref:typename:void	access:public	signature:(NodeBase * node)
visitBehavAssignStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitBehavAssignStmt(NodeBehavAssignStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBehavAssignStmt * node)
visitBinopExprBase	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprBase(NodeBinopExprBase* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprBase * node)
visitBinopExprBitAnd	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprBitAnd(NodeBinopExprBitAnd* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprBitAnd * node)
visitBinopExprBitAsr	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprBitAsr(NodeBinopExprBitAsr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprBitAsr * node)
visitBinopExprBitLsl	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprBitLsl(NodeBinopExprBitLsl* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprBitLsl * node)
visitBinopExprBitLsr	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprBitLsr(NodeBinopExprBitLsr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprBitLsr * node)
visitBinopExprBitOr	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprBitOr(NodeBinopExprBitOr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprBitOr * node)
visitBinopExprBitXor	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprBitXor(NodeBinopExprBitXor* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprBitXor * node)
visitBinopExprCmpEq	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprCmpEq(NodeBinopExprCmpEq* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprCmpEq * node)
visitBinopExprCmpGe	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprCmpGe(NodeBinopExprCmpGe* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprCmpGe * node)
visitBinopExprCmpGt	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprCmpGt(NodeBinopExprCmpGt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprCmpGt * node)
visitBinopExprCmpLe	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprCmpLe(NodeBinopExprCmpLe* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprCmpLe * node)
visitBinopExprCmpLt	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprCmpLt(NodeBinopExprCmpLt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprCmpLt * node)
visitBinopExprCmpNe	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprCmpNe(NodeBinopExprCmpNe* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprCmpNe * node)
visitBinopExprDiv	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprDiv(NodeBinopExprDiv* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprDiv * node)
visitBinopExprDollarPow	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprDollarPow(NodeBinopExprDollarPow* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprDollarPow * node)
visitBinopExprLogAnd	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprLogAnd(NodeBinopExprLogAnd* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprLogAnd * node)
visitBinopExprLogOr	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprLogOr(NodeBinopExprLogOr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprLogOr * node)
visitBinopExprMinus	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprMinus(NodeBinopExprMinus* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprMinus * node)
visitBinopExprMod	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprMod(NodeBinopExprMod* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprMod * node)
visitBinopExprMul	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprMul(NodeBinopExprMul* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprMul * node)
visitBinopExprPlus	ast_visitor_visit_funcs.hpp	/^virtual void visitBinopExprPlus(NodeBinopExprPlus* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBinopExprPlus * node)
visitBracketPair	ast_visitor_visit_funcs.hpp	/^virtual void visitBracketPair(NodeBracketPair* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeBracketPair * node)
visitCall	ast_visitor_visit_funcs.hpp	/^virtual void visitCall(NodeCall* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeCall * node)
visitCatExpr	ast_visitor_visit_funcs.hpp	/^virtual void visitCatExpr(NodeCatExpr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeCatExpr * node)
visitClass	ast_visitor_visit_funcs.hpp	/^virtual void visitClass(NodeClass* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeClass * node)
visitConstString	ast_visitor_visit_funcs.hpp	/^virtual void visitConstString(NodeConstString* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeConstString * node)
visitContAssignStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitContAssignStmt(NodeContAssignStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeContAssignStmt * node)
visitCoverStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitCoverStmt(NodeCoverStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeCoverStmt * node)
visitDeclCallable	ast_visitor_visit_funcs.hpp	/^virtual void visitDeclCallable(NodeDeclCallable* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDeclCallable * node)
visitDeclConstList	ast_visitor_visit_funcs.hpp	/^virtual void visitDeclConstList(NodeDeclConstList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDeclConstList * node)
visitDeclFunc	ast_visitor_visit_funcs.hpp	/^virtual void visitDeclFunc(NodeDeclFunc* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDeclFunc * node)
visitDeclProc	ast_visitor_visit_funcs.hpp	/^virtual void visitDeclProc(NodeDeclProc* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDeclProc * node)
visitDeclTask	ast_visitor_visit_funcs.hpp	/^virtual void visitDeclTask(NodeDeclTask* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDeclTask * node)
visitDeclVarList	ast_visitor_visit_funcs.hpp	/^virtual void visitDeclVarList(NodeDeclVarList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDeclVarList * node)
visitDefaultCaseItem	ast_visitor_visit_funcs.hpp	/^virtual void visitDefaultCaseItem(NodeDefaultCaseItem* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDefaultCaseItem * node)
visitDollarResizeStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitDollarResizeStmt(NodeDollarResizeStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeDollarResizeStmt * node)
visitEdgeList	ast_visitor_visit_funcs.hpp	/^virtual void visitEdgeList(NodeEdgeList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeEdgeList * node)
visitEnum	ast_visitor_visit_funcs.hpp	/^virtual void visitEnum(NodeEnum* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeEnum * node)
visitExprBase	ast_visitor_visit_funcs.hpp	/^virtual void visitExprBase(NodeExprBase* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeExprBase * node)
visitExprCaseItem	ast_visitor_visit_funcs.hpp	/^virtual void visitExprCaseItem(NodeExprCaseItem* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeExprCaseItem * node)
visitExtends	ast_visitor_visit_funcs.hpp	/^virtual void visitExtends(NodeExtends* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeExtends * node)
visitForStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitForStmt(NodeForStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeForStmt * node)
visitGenerateForStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitGenerateForStmt(NodeGenerateForStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeGenerateForStmt * node)
visitGenerateIfStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitGenerateIfStmt(NodeGenerateIfStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeGenerateIfStmt * node)
visitHasString	ast_visitor_visit_funcs.hpp	/^virtual void visitHasString(NodeHasString* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeHasString * node)
visitIdent	ast_visitor_visit_funcs.hpp	/^virtual void visitIdent(NodeIdent* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdent * node)
visitIdentEtc	ast_visitor_visit_funcs.hpp	/^virtual void visitIdentEtc(NodeIdentEtc* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdentEtc * node)
visitIdentList	ast_visitor_visit_funcs.hpp	/^virtual void visitIdentList(NodeIdentList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdentList * node)
visitIdentMemberAccess	ast_visitor_visit_funcs.hpp	/^virtual void visitIdentMemberAccess(NodeIdentMemberAccess* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdentMemberAccess * node)
visitIdentScopeAccess	ast_visitor_visit_funcs.hpp	/^virtual void visitIdentScopeAccess(NodeIdentScopeAccess* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdentScopeAccess * node)
visitIdentTermEqualsExtra	ast_visitor_visit_funcs.hpp	/^virtual void visitIdentTermEqualsExtra(NodeIdentTermEqualsExtra* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdentTermEqualsExtra * node)
visitIdentTermEqualsExtraList	ast_visitor_visit_funcs.hpp	/^virtual void visitIdentTermEqualsExtraList(NodeIdentTermEqualsExtraList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdentTermEqualsExtraList * node)
visitIdentTerminal	ast_visitor_visit_funcs.hpp	/^virtual void visitIdentTerminal(NodeIdentTerminal* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIdentTerminal * node)
visitIfStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitIfStmt(NodeIfStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeIfStmt * node)
visitInitialBlock	ast_visitor_visit_funcs.hpp	/^virtual void visitInitialBlock(NodeInitialBlock* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeInitialBlock * node)
visitInstModuleStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitInstModuleStmt(NodeInstModuleStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeInstModuleStmt * node)
visitLeftRightBase	ast_visitor_visit_funcs.hpp	/^virtual void visitLeftRightBase(NodeLeftRightBase* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeLeftRightBase * node)
visitList	ast_visitor_class.hpp	/^	virtual void visitList(NodeList* node) = 0;$/;"	kind:p	class:frost_hdl::ast::Visitor	typeref:typename:void	access:public	signature:(NodeList * node)
visitListCat	ast_visitor_visit_funcs.hpp	/^virtual void visitListCat(NodeListCat* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeListCat * node)
visitMemberAccessPrivateStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitMemberAccessPrivateStmt(NodeMemberAccessPrivateStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeMemberAccessPrivateStmt * node)
visitMemberAccessProtectedStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitMemberAccessProtectedStmt(NodeMemberAccessProtectedStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeMemberAccessProtectedStmt * node)
visitMemberAccessPublicStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitMemberAccessPublicStmt(NodeMemberAccessPublicStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeMemberAccessPublicStmt * node)
visitMemberCallable	ast_visitor_visit_funcs.hpp	/^virtual void visitMemberCallable(NodeMemberCallable* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeMemberCallable * node)
visitModport	ast_visitor_visit_funcs.hpp	/^virtual void visitModport(NodeModport* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeModport * node)
visitModportSubList	ast_visitor_visit_funcs.hpp	/^virtual void visitModportSubList(NodeModportSubList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeModportSubList * node)
visitModule	ast_visitor_visit_funcs.hpp	/^virtual void visitModule(NodeModule* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeModule * node)
visitNamedParamArgInstList	ast_visitor_visit_funcs.hpp	/^virtual void visitNamedParamArgInstList(NodeNamedParamArgInstList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeNamedParamArgInstList * node)
visitNegedgeInst	ast_visitor_visit_funcs.hpp	/^virtual void visitNegedgeInst(NodeNegedgeInst* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeNegedgeInst * node)
visitNoParamPossibleTypename	ast_visitor_visit_funcs.hpp	/^virtual void visitNoParamPossibleTypename(NodeNoParamPossibleTypename* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeNoParamPossibleTypename * node)
visitNumExpr	ast_visitor_visit_funcs.hpp	/^virtual void visitNumExpr(NodeNumExpr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeNumExpr * node)
visitOneParamArgInst	ast_visitor_visit_funcs.hpp	/^virtual void visitOneParamArgInst(NodeOneParamArgInst* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeOneParamArgInst * node)
visitPackage	ast_visitor_visit_funcs.hpp	/^virtual void visitPackage(NodePackage* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePackage * node)
visitParamArgTypeSublist	ast_visitor_visit_funcs.hpp	/^virtual void visitParamArgTypeSublist(NodeParamArgTypeSublist* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeParamArgTypeSublist * node)
visitParamArgVarSublist	ast_visitor_visit_funcs.hpp	/^virtual void visitParamArgVarSublist(NodeParamArgVarSublist* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeParamArgVarSublist * node)
visitParamList	ast_visitor_visit_funcs.hpp	/^virtual void visitParamList(NodeParamList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeParamList * node)
visitParamModuleSublist	ast_visitor_visit_funcs.hpp	/^virtual void visitParamModuleSublist(NodeParamModuleSublist* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeParamModuleSublist * node)
visitParamPossibleTypename	ast_visitor_visit_funcs.hpp	/^virtual void visitParamPossibleTypename(NodeParamPossibleTypename* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeParamPossibleTypename * node)
visitParenPair	ast_visitor_visit_funcs.hpp	/^virtual void visitParenPair(NodeParenPair* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeParenPair * node)
visitPosParamArgInstList	ast_visitor_visit_funcs.hpp	/^virtual void visitPosParamArgInstList(NodePosParamArgInstList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePosParamArgInstList * node)
visitPosedgeInst	ast_visitor_visit_funcs.hpp	/^virtual void visitPosedgeInst(NodePosedgeInst* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePosedgeInst * node)
visitProgram	ast_visitor_visit_funcs.hpp	/^virtual void visitProgram(NodeProgram* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeProgram * node)
visitPseudoExprDollarBase	ast_visitor_visit_funcs.hpp	/^virtual void visitPseudoExprDollarBase(NodePseudoExprDollarBase* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePseudoExprDollarBase * node)
visitPseudoExprDollarFell	ast_visitor_visit_funcs.hpp	/^virtual void visitPseudoExprDollarFell(NodePseudoExprDollarFell* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePseudoExprDollarFell * node)
visitPseudoExprDollarGlobalClock	ast_visitor_visit_funcs.hpp	/^virtual void visitPseudoExprDollarGlobalClock(NodePseudoExprDollarGlobalClock* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePseudoExprDollarGlobalClock * node)
visitPseudoExprDollarPast	ast_visitor_visit_funcs.hpp	/^virtual void visitPseudoExprDollarPast(NodePseudoExprDollarPast* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePseudoExprDollarPast * node)
visitPseudoExprDollarRose	ast_visitor_visit_funcs.hpp	/^virtual void visitPseudoExprDollarRose(NodePseudoExprDollarRose* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePseudoExprDollarRose * node)
visitPseudoExprDollarStable	ast_visitor_visit_funcs.hpp	/^virtual void visitPseudoExprDollarStable(NodePseudoExprDollarStable* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodePseudoExprDollarStable * node)
visitRangeExprAny	ast_visitor_visit_funcs.hpp	/^virtual void visitRangeExprAny(NodeRangeExprAny* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeRangeExprAny * node)
visitRangeOne	ast_visitor_visit_funcs.hpp	/^virtual void visitRangeOne(NodeRangeOne* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeRangeOne * node)
visitRangeSuffix	ast_visitor_visit_funcs.hpp	/^virtual void visitRangeSuffix(NodeRangeSuffix* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeRangeSuffix * node)
visitRangeTwo	ast_visitor_visit_funcs.hpp	/^virtual void visitRangeTwo(NodeRangeTwo* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeRangeTwo * node)
visitReplExpr	ast_visitor_visit_funcs.hpp	/^virtual void visitReplExpr(NodeReplExpr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeReplExpr * node)
visitRestrictStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitRestrictStmt(NodeRestrictStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeRestrictStmt * node)
visitReturnStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitReturnStmt(NodeReturnStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeReturnStmt * node)
visitSbit	ast_visitor_visit_funcs.hpp	/^virtual void visitSbit(NodeSbit* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSbit * node)
visitSbyte	ast_visitor_visit_funcs.hpp	/^virtual void visitSbyte(NodeSbyte* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSbyte * node)
visitScopeBehav	ast_visitor_visit_funcs.hpp	/^virtual void visitScopeBehav(NodeScopeBehav* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeScopeBehav * node)
visitScopeClass	ast_visitor_visit_funcs.hpp	/^virtual void visitScopeClass(NodeScopeClass* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeScopeClass * node)
visitScopeEnum	ast_visitor_visit_funcs.hpp	/^virtual void visitScopeEnum(NodeScopeEnum* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeScopeEnum * node)
visitScopeModproc	ast_visitor_visit_funcs.hpp	/^virtual void visitScopeModproc(NodeScopeModproc* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeScopeModproc * node)
visitScopePackage	ast_visitor_visit_funcs.hpp	/^virtual void visitScopePackage(NodeScopePackage* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeScopePackage * node)
visitScopeSwitch	ast_visitor_visit_funcs.hpp	/^virtual void visitScopeSwitch(NodeScopeSwitch* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeScopeSwitch * node)
visitScopeUnion	ast_visitor_visit_funcs.hpp	/^virtual void visitScopeUnion(NodeScopeUnion* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeScopeUnion * node)
visitSelf	ast_visitor_visit_funcs.hpp	/^virtual void visitSelf(NodeSelf* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSelf * node)
visitSint	ast_visitor_visit_funcs.hpp	/^virtual void visitSint(NodeSint* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSint * node)
visitSizedNumExpr	ast_visitor_visit_funcs.hpp	/^virtual void visitSizedNumExpr(NodeSizedNumExpr* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSizedNumExpr * node)
visitSlongint	ast_visitor_visit_funcs.hpp	/^virtual void visitSlongint(NodeSlongint* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSlongint * node)
visitSshortint	ast_visitor_visit_funcs.hpp	/^virtual void visitSshortint(NodeSshortint* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSshortint * node)
visitStaticAssertStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitStaticAssertStmt(NodeStaticAssertStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeStaticAssertStmt * node)
visitStmtList	ast_visitor_visit_funcs.hpp	/^virtual void visitStmtList(NodeStmtList* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeStmtList * node)
visitSwire	ast_visitor_visit_funcs.hpp	/^virtual void visitSwire(NodeSwire* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSwire * node)
visitSwitchStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitSwitchStmt(NodeSwitchStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSwitchStmt * node)
visitSwitchzStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitSwitchzStmt(NodeSwitchzStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeSwitchzStmt * node)
visitTypeRange	ast_visitor_visit_funcs.hpp	/^virtual void visitTypeRange(NodeTypeRange* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeTypeRange * node)
visitTypeof	ast_visitor_visit_funcs.hpp	/^virtual void visitTypeof(NodeTypeof* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeTypeof * node)
visitUbit	ast_visitor_visit_funcs.hpp	/^virtual void visitUbit(NodeUbit* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUbit * node)
visitUbyte	ast_visitor_visit_funcs.hpp	/^virtual void visitUbyte(NodeUbyte* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUbyte * node)
visitUint	ast_visitor_visit_funcs.hpp	/^virtual void visitUint(NodeUint* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUint * node)
visitUlongint	ast_visitor_visit_funcs.hpp	/^virtual void visitUlongint(NodeUlongint* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUlongint * node)
visitUnion	ast_visitor_visit_funcs.hpp	/^virtual void visitUnion(NodeUnion* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnion * node)
visitUnopExprBase	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprBase(NodeUnopExprBase* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprBase * node)
visitUnopExprBitNot	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprBitNot(NodeUnopExprBitNot* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprBitNot * node)
visitUnopExprDollarClog2	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarClog2(NodeUnopExprDollarClog2* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarClog2 * node)
visitUnopExprDollarFirst	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarFirst(NodeUnopExprDollarFirst* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarFirst * node)
visitUnopExprDollarHigh	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarHigh(NodeUnopExprDollarHigh* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarHigh * node)
visitUnopExprDollarIsSigned	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarIsSigned(NodeUnopExprDollarIsSigned* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarIsSigned * node)
visitUnopExprDollarIsUnsigned	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarIsUnsigned(NodeUnopExprDollarIsUnsigned* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarIsUnsigned * node)
visitUnopExprDollarLast	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarLast(NodeUnopExprDollarLast* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarLast * node)
visitUnopExprDollarLow	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarLow(NodeUnopExprDollarLow* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarLow * node)
visitUnopExprDollarRange	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarRange(NodeUnopExprDollarRange* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarRange * node)
visitUnopExprDollarRevrange	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarRevrange(NodeUnopExprDollarRevrange* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarRevrange * node)
visitUnopExprDollarSigned	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarSigned(NodeUnopExprDollarSigned* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarSigned * node)
visitUnopExprDollarSize	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarSize(NodeUnopExprDollarSize* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarSize * node)
visitUnopExprDollarUnsigned	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprDollarUnsigned(NodeUnopExprDollarUnsigned* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprDollarUnsigned * node)
visitUnopExprLogNot	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprLogNot(NodeUnopExprLogNot* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprLogNot * node)
visitUnopExprMinus	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprMinus(NodeUnopExprMinus* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprMinus * node)
visitUnopExprPlus	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprPlus(NodeUnopExprPlus* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprPlus * node)
visitUnopExprTypeof	ast_visitor_visit_funcs.hpp	/^virtual void visitUnopExprTypeof(NodeUnopExprTypeof* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUnopExprTypeof * node)
visitUshortint	ast_visitor_visit_funcs.hpp	/^virtual void visitUshortint(NodeUshortint* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUshortint * node)
visitUsingStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitUsingStmt(NodeUsingStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUsingStmt * node)
visitUwire	ast_visitor_visit_funcs.hpp	/^virtual void visitUwire(NodeUwire* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeUwire * node)
visitVoid	ast_visitor_visit_funcs.hpp	/^virtual void visitVoid(NodeVoid* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeVoid * node)
visitWhileStmt	ast_visitor_visit_funcs.hpp	/^virtual void visitWhileStmt(NodeWhileStmt* node) = 0;$/;"	kind:p	typeref:typename:void	signature:(NodeWhileStmt * node)
vwith	liborangepower_src/with_defines.hpp	/^#define vwith(/;"	kind:d	signature:(obj,val)
warn	src_code_chunk_class.hpp	/^	inline void warn(const string& msg) const$/;"	kind:f	class:frost_hdl::SrcCodeChunk	typeref:typename:void	access:public	signature:(const string & msg) const
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type()$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:()
width_of_type	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr size_t width_of_type(const Type& to_check)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:size_t	signature:(const Type & to_check)
wrapped_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_recv(Type* buf, int num_instances, int src,$/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(Type * buf,int num_instances,int src,int tag,MPI_Comm comm,MPI_Status * status) const
wrapped_send	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send(const Type* buf, int num_instances, int dst, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * buf,int num_instances,int dst,int tag,MPI_Comm comm) const
wrapped_send_recv	liborangepower_src/mpi_handler_class.hpp	/^	inline int wrapped_send_recv(const Type* send_buf, $/;"	kind:f	class:liborangepower::mpi::MpiHandler	typeref:typename:int	access:protected	signature:(const Type * send_buf,int num_send_instances,int dst,int send_tag,Type * recv_buf,int num_recv_instances,int src,int recv_tag,MPI_Comm comm,MPI_Status * status) const
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
x	liborangepower_src/lexer_base_class.hpp	/^	inline auto x() const$/;"	kind:f	class:liborangepower::lang::LexerBase	typeref:typename:auto	access:public	signature:() const
x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
zwith	liborangepower_src/with_defines.hpp	/^#define zwith(/;"	kind:d	signature:(obj)
~CircLinkedList	liborangepower_src/linked_list_classes.hpp	/^	virtual inline ~CircLinkedList()$/;"	kind:f	class:liborangepower::containers::CircLinkedList	typeref:typename:CircLinkedList	access:public	signature:()
~ErrWarnBase	err_warn_base_class.hpp	/^	virtual ~ErrWarnBase() = default;$/;"	kind:p	class:frost_hdl::ErrWarnBase	access:public	signature:()
~ExprNum	expr_num_class.hpp	/^	~ExprNum() = default;$/;"	kind:p	class:frost_hdl::ExprNum	access:public	signature:()
~ExprValue	expr_value_class.cpp	/^ExprValue::~ExprValue()$/;"	kind:f	class:frost_hdl::ExprValue	signature:()
~ExprValue	expr_value_class.hpp	/^	~ExprValue();$/;"	kind:p	class:frost_hdl::ExprValue	access:public	signature:()
~LexStateSets	liborangepower_src/stateful_parser_base_class.hpp	/^		~LexStateSets()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::LexStateSets	typeref:typename:LexStateSets	access:public	signature:()
~Lexer	lexer_class.cpp	/^Lexer::~Lexer()$/;"	kind:f	class:frost_hdl::Lexer	signature:()
~Lexer	lexer_class.hpp	/^	~Lexer();$/;"	kind:p	class:frost_hdl::Lexer	typeref:typename:Lexer	access:public	signature:()
~LexerBase	liborangepower_src/lexer_base_class.hpp	/^	virtual ~LexerBase() = default;$/;"	kind:p	class:liborangepower::lang::LexerBase	typeref:typename:LexerBase	access:public	signature:()
~ListParse	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual ~ListParse()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::ListParse	access:public	signature:()
~MoveOnlyPrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	virtual ~MoveOnlyPrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::MoveOnlyPrevCurrPair	access:public	signature:()
~MpiHandler	liborangepower_src/mpi_handler_class.hpp	/^	virtual inline ~MpiHandler()$/;"	kind:f	class:liborangepower::mpi::MpiHandler	access:public	signature:()
~Node	liborangepower_src/linked_list_classes.hpp	/^		~Node() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::Node	access:public	signature:()
~NodeIterator	liborangepower_src/linked_list_classes.hpp	/^		~NodeIterator() = default;$/;"	kind:p	class:liborangepower::containers::CircLinkedList::NodeIterator	access:public	signature:()
~OptAsFuncArgParserBase	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^	virtual inline ~OptAsFuncArgParserBase() = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase	access:public	signature:()
~OrParse	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual ~OrParse()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::OrParse	access:public	signature:()
~ParseRet	liborangepower_src/opt_as_func_arg_parser_base_class.hpp	/^		inline ~ParseRet() = default;$/;"	kind:p	class:liborangepower::lang::OptAsFuncArgParserBase::ParseRet	access:public	signature:()
~ParseTreeBase	liborangepower_src/parse_tree_base_class.hpp	/^	virtual inline ~ParseTreeBase() = default;$/;"	kind:p	class:liborangepower::lang::ParseTreeBase	access:public	signature:()
~Parser	parser_class.cpp	/^Parser::~Parser()$/;"	kind:f	class:frost_hdl::Parser	signature:()
~Parser	parser_class.hpp	/^	~Parser();$/;"	kind:p	class:frost_hdl::Parser	access:public	signature:()
~PrevCurrPair	liborangepower_src/prev_curr_pair_classes.hpp	/^	virtual ~PrevCurrPair() = default;$/;"	kind:p	class:liborangepower::containers::PrevCurrPair	access:public	signature:()
~Prng	liborangepower_src/time_stuff.hpp	/^	virtual ~Prng() = default;$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:()
~PtVisitor	pt_visitor_class.hpp	/^	inline ~PtVisitor() = default;$/;"	kind:p	class:frost_hdl::PtVisitor	access:public	signature:()
~SeqParse	liborangepower_src/stateful_parser_base_class.hpp	/^		virtual ~SeqParse() = default;$/;"	kind:p	class:liborangepower::lang::StatefulParserBase::SeqParse	access:public	signature:()
~SrcCodeChunk	src_code_chunk_class.cpp	/^SrcCodeChunk::~SrcCodeChunk()$/;"	kind:f	class:frost_hdl::SrcCodeChunk	signature:()
~SrcCodeChunk	src_code_chunk_class.hpp	/^	virtual ~SrcCodeChunk();$/;"	kind:p	class:frost_hdl::SrcCodeChunk	access:public	signature:()
~State	liborangepower_src/lexer_base_class.hpp	/^		~State()$/;"	kind:f	class:liborangepower::lang::LexerBase::State	typeref:typename:State	access:public	signature:()
~StatefulParserBase	liborangepower_src/stateful_parser_base_class.hpp	/^	virtual ~StatefulParserBase()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase	typeref:typename:StatefulParserBase	access:public	signature:()
~UnitParse	liborangepower_src/stateful_parser_base_class.hpp	/^		~UnitParse()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::UnitParse	access:public	signature:()
~Vec2	liborangepower_src/vec2_classes.hpp	/^	virtual ~Vec2() = default;$/;"	kind:p	class:liborangepower::containers::Vec2	access:public	signature:()
~Visitor	ast_visitor_class.cpp	/^Visitor::~Visitor()$/;"	kind:f	class:frost_hdl::ast::Visitor	signature:()
~Visitor	ast_visitor_class.hpp	/^	virtual ~Visitor();$/;"	kind:p	class:frost_hdl::ast::Visitor	access:public	signature:()
~WExpect	liborangepower_src/stateful_parser_base_class.hpp	/^		~WExpect()$/;"	kind:f	class:liborangepower::lang::StatefulParserBase::WExpect	access:public	signature:()
