//#ifndef src_list_of_parse_tree_nodes_define_hpp
//#define src_list_of_parse_tree_nodes_define_hpp

// src/list_of_parse_tree_nodes_define.hpp

//#include "misc_includes.hpp"

#define LIST_OF_PARSE_TREE_NODES(X) \
	X(program) \
	X(program_item) \
	X(header_if) \
	X(header_else_if) \
	X(header_else) \
	X(header_for) \
	X(header_generate_if) \
	X(header_else_generate_if) \
	X(header_else_generate) \
	X(header_generate_for) \
	X(package) \
	X(scope_package) \
	X(scope_package_item) \
	X(generate_package) \
	X(generate_package_if) \
	X(generate_package_else_if) \
	X(generate_package_else) \
	X(generate_package_for) \
	X(member_callable_prefix) \
	X(non_ref_member_callable_prefix) \
	X(kw_const) \
	X(kw_virtual) \
	X(kw_static) \
	X(kw_ref) \
	X(contents_modproc) \
	X(proc) \
	X(module) \
	X(proc_ident_etc) \
	X(kw_port) \
	X(scope_modproc) \
	X(scope_modproc_item) \
	X(generate_modproc) \
	X(generate_modproc_if) \
	X(generate_modproc_else_if) \
	X(generate_modproc_else) \
	X(generate_modproc_for) \
	X(decl_callable) \
	X(contents_func_task) \
	X(func) \
	X(func_task_ident_etc) \
	X(task) \
	X(scope_behav) \
	X(scope_behav_item) \
	X(generate_behav) \
	X(generate_behav_if) \
	X(generate_behav_else_if) \
	X(generate_behav_else) \
	X(generate_behav_for) \
	X(const) \
	X(one_const) \
	X(var) \
	X(one_var) \
	X(using) \
	X(assign_stmt) \
	X(if_stmt) \
	X(stmt_else_if) \
	X(stmt_else) \
	X(for_stmt) \
	X(while_stmt) \
	X(switch_stmt) \
	X(switchz_stmt) \
	X(scope_switch) \
	X(scope_switch_item) \
	X(expr_case_item) \
	X(default_case_item) \
	X(return_stmt) \
	X(dollar_resize_stmt) \
	X(decl_cstm_type) \
	X(class) \
	X(extends) \
	X(scope_class) \
	X(scope_class_item) \
	X(modport) \
	X(inner_modport) \
	X(member_callable) \
	X(generate_class) \
	X(generate_class_if) \
	X(generate_class_else_if) \
	X(generate_class_else) \
	X(generate_class_for) \
	X(member_access_label) \
	X(enum) \
	X(union) \
	X(hardware_block) \
	X(cont_assign) \
	X(initial) \
	X(always_comb) \
	X(always_blk) \
	X(always_ff) \
	X(dff) \
	X(edge_list) \
	X(edge_list_item) \
	X(posedge_inst) \
	X(negedge_inst) \
	X(inst) \
	X(param_list) \
	X(param_sublist) \
	X(arg_list) \
	X(arg_sublist) \
	X(arg_port_sublist) \
	X(pararg_var_sublist) \
	X(pararg_var_sublist_item) \
	X(pararg_type_sublist) \
	X(param_module_sublist) \
	X(pararg_ident_equals_typename_sublist) \
	X(pararg_ident_equals_typename_sublist_item) \
	X(param_inst_list) \
	X(arg_inst_list) \
	X(pos_pararg_inst_list) \
	X(named_pararg_inst_list) \
	X(named_pararg_inst_list_item) \
	X(typename) \
	X(param_possible_typename) \
	X(no_param_possible_typename) \
	X(typeof) \
	X(type_range) \
	X(range_suffix) \
	X(expr) \
	X(logical_expr) \
	X(logical_expr_first_choice) \
	X(compare_expr) \
	X(compare_expr_first_choice) \
	X(add_sub_expr) \
	X(add_sub_expr_first_choice) \
	X(mul_div_mod_etc_expr) \
	X(unary_expr) \
	X(paren_expr) \
	X(dollar_global_clock) \
	X(dollar_pow_expr) \
	X(num_expr) \
	X(raw_num) \
	X(const_str) \
	X(pre_dollar_func_of_one_expr) \
	X(post_dollar_func_of_one_expr) \
	X(expr_dollar_func_of_one) \
	X(pre_dollar_func_of_one_valid_lhs_expr) \
	X(post_dollar_func_of_one_valid_lhs_expr) \
	X(cat_expr) \
	X(valid_lhs_expr) \
	X(repl_expr) \
	X(ident_etc) \
	X(ident_member_access) \
	X(ident_scope_access) \
	X(ident_non_member_scope_access) \
	X(ident_call) \
	X(ident_no_param_overloaded_call) \
	X(ident_param_member_overloaded_call) \
	X(ident_terminal) \
	X(any_range_suffix) \
	X(ident) \

//#endif		// src_list_of_parse_tree_nodes_define_hpp
