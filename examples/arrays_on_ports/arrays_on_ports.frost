module FullAdder
	(
		//--------
		input logic i_a, i_b,
		input logic i_carry,
		//--------

		//--------
		output logic o_sum,
		output logic o_carry
		//--------
	)
{
	assign o_sum = (i_a ^ i_b) ^ i_carry;
	assign o_carry = (i_a & i_b) | ((i_a ^ i_b) & i_carry);
}

module Adc
	#(
		param WIDTH__DIO
	)
	(
		//--------
		input logic [WIDTH__DIO] i_a, i_b,
		input logic i_carry,
		//--------

		//--------
		output logic [WIDTH__DIO] o_sum,
		output logic o_carry
		//--------
	)
{
	logic [WIDTH__DIO + 1] _inner_carries;

	assign _inner_carries[0] = i_carry;
	assign o_carry = _inner_carries[WIDTH__DIO];

	for (genvar i=0; i<WIDTH__DIO; i+=1)
	{
		FullAdder
		(
			//--------
			.i_a(i_a[i]),
			.i_b(i_b[i]),
			.i_carry(_inner_carries[i]),
			//--------

			//--------
			.o_sum(o_sum[i]),
			.o_carry(_inner_carries[i + 1])
			//--------
		);
	}
}

module AddWithoutCarry
	#(
		param WIDTH__DIO
	)
	(
		//--------
		input logic [WIDTH__DIO] i_a, i_b,
		//--------

		//--------
		output logic [WIDTH__DIO] o_sum
		//--------
	)
{
	logic _dummy_i_carry, _dummy_o_carry;

	instance Adc #(.WIDTH__DIO(WIDTH__DIO))
	(
		//--------
		.i_a(i_a),
		.i_b(i_b),
		.i_carry(_dummy_i_carry),
		//--------

		//--------
		.o_sum(o_sum),
		.o_carry(_dummy_o_carry)
		//--------
	);
}

module Arr2dAddWithouCarry
	#(
		// You thought it was data input/output, but it was me, DIO!
		param WIDTH__DIO = 4,
		param ARR_SIZE_2D__HEIGHT_NUM_ADDERS = 2,
		param ARR_SIZE_2D__WIDTH_NUM_ADDERS = 3
	)
	(
		//--------
		input logic [WIDTH__DIO]
			i_a_arr_2d[ARR_SIZE_2D__HEIGHT_NUM_ADDERS
			* ARR_SIZE_2D__WIDTH_NUM_ADDERS],
			i_b_arr_2d[ARR_SIZE_2D__HEIGHT_NUM_ADDERS
			* ARR_SIZE_2D__WIDTH_NUM_ADDERS],
		//--------

		//--------
		output logic [WIDTH__DIO]
			o_sum_arr_2d[ARR_SIZE_2D__HEIGHT_NUM_ADDERS
			* ARR_SIZE_2D__WIDTH_NUM_ADDERS]
		//--------
	)
{
	generate for (y : range(ARR_SIZE_2D__HEIGHT_NUM_ADDERS))
	{
		generate for (x : range(ARR_SIZE_2D__WIDTH_NUM_ADDERS))
		{
			localparam INDEX = (y * ARR_SIZE_2D__WIDTH_NUM_ADDERS) + x;

			//assign o_sum_arr_2d[(y * ARR_SIZE_2D__WIDTH_NUM_ADDERS) + x]
			//	= i_a_arr_2d[(y * ARR_SIZE_2D__WIDTH_NUM_ADDERS) + x]
			//	+ i_b_arr_2d[(y * ARR_SIZE_2D__WIDTH_NUM_ADDERS) + x];
			instance AddWithoutCarry #(.WIDTH__DIO(WIDTH__DIO))
			(
				//--------
				.i_a(i_a_arr_2d[index]),
				.i_b(i_b_arr_2d[index]),
				//--------

				//--------
				.o_sum(o_sum_arr_2d[index])
				//--------
			);
		}
	}
}
